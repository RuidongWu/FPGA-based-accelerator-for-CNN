// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer3_Pooling,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.416500,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1579,HLS_SYN_LUT=1700,HLS_VERSION=2018_3}" *)

module Layer3_Pooling (
        ap_clk,
        ap_rst_n,
        a_Data_TDATA,
        a_Data_TVALID,
        a_Data_TREADY,
        Pa_Data_TDATA,
        Pa_Data_TVALID,
        Pa_Data_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [127:0] a_Data_TDATA;
input   a_Data_TVALID;
output   a_Data_TREADY;
output  [127:0] Pa_Data_TDATA;
output   Pa_Data_TVALID;
input   Pa_Data_TREADY;

 reg    ap_rst_n_inv;
reg   [127:0] a_Data_0_data_out;
wire    a_Data_0_vld_in;
wire    a_Data_0_vld_out;
wire    a_Data_0_ack_in;
reg    a_Data_0_ack_out;
reg   [127:0] a_Data_0_payload_A;
reg   [127:0] a_Data_0_payload_B;
reg    a_Data_0_sel_rd;
reg    a_Data_0_sel_wr;
wire    a_Data_0_sel;
wire    a_Data_0_load_A;
wire    a_Data_0_load_B;
reg   [1:0] a_Data_0_state;
wire    a_Data_0_state_cmp_full;
reg   [127:0] Pa_Data_1_data_in;
reg   [127:0] Pa_Data_1_data_out;
reg    Pa_Data_1_vld_in;
wire    Pa_Data_1_vld_out;
wire    Pa_Data_1_ack_in;
wire    Pa_Data_1_ack_out;
reg   [127:0] Pa_Data_1_payload_A;
reg   [127:0] Pa_Data_1_payload_B;
reg    Pa_Data_1_sel_rd;
reg    Pa_Data_1_sel_wr;
wire    Pa_Data_1_sel;
wire    Pa_Data_1_load_A;
wire    Pa_Data_1_load_B;
reg   [1:0] Pa_Data_1_state;
wire    Pa_Data_1_state_cmp_full;
reg   [7:0] state;
reg   [15:0] a_0_Data_0;
reg   [15:0] a_0_Data_1;
reg   [15:0] a_0_Data_2;
reg   [15:0] a_0_Data_3;
reg   [15:0] a_0_Data_4;
reg   [15:0] a_0_Data_5;
reg   [15:0] a_0_Data_6;
reg   [15:0] a_0_Data_7;
reg   [15:0] a_1_Data_0;
reg   [15:0] a_1_Data_1;
reg   [15:0] a_1_Data_2;
reg   [15:0] a_1_Data_3;
reg   [15:0] a_1_Data_4;
reg   [15:0] a_1_Data_5;
reg   [15:0] a_1_Data_6;
reg   [15:0] a_1_Data_7;
reg   [7:0] column;
wire   [0:0] C_0_address0;
reg    C_0_ce0;
wire   [15:0] C_0_q0;
wire   [0:0] C_0_address1;
reg    C_0_ce1;
reg    C_0_we1;
wire   [15:0] C_0_d1;
wire   [0:0] C_1_address0;
reg    C_1_ce0;
wire   [15:0] C_1_q0;
wire   [0:0] C_1_address1;
reg    C_1_ce1;
reg    C_1_we1;
wire   [15:0] C_1_d1;
wire   [0:0] C_2_address0;
reg    C_2_ce0;
wire   [15:0] C_2_q0;
wire   [0:0] C_2_address1;
reg    C_2_ce1;
reg    C_2_we1;
wire   [15:0] C_2_d1;
wire   [0:0] C_3_address0;
reg    C_3_ce0;
wire   [15:0] C_3_q0;
wire   [0:0] C_3_address1;
reg    C_3_ce1;
reg    C_3_we1;
wire   [15:0] C_3_d1;
wire   [0:0] C_4_address0;
reg    C_4_ce0;
wire   [15:0] C_4_q0;
wire   [0:0] C_4_address1;
reg    C_4_ce1;
reg    C_4_we1;
wire   [15:0] C_4_d1;
wire   [0:0] C_5_address0;
reg    C_5_ce0;
wire   [15:0] C_5_q0;
wire   [0:0] C_5_address1;
reg    C_5_ce1;
reg    C_5_we1;
wire   [15:0] C_5_d1;
wire   [0:0] C_6_address0;
reg    C_6_ce0;
wire   [15:0] C_6_q0;
wire   [0:0] C_6_address1;
reg    C_6_ce1;
reg    C_6_we1;
wire   [15:0] C_6_d1;
wire   [0:0] C_7_address0;
reg    C_7_ce0;
wire   [15:0] C_7_q0;
wire   [0:0] C_7_address1;
reg    C_7_ce1;
reg    C_7_we1;
wire   [15:0] C_7_d1;
wire   [0:0] C_8_address0;
reg    C_8_ce0;
wire   [15:0] C_8_q0;
wire   [0:0] C_8_address1;
reg    C_8_ce1;
reg    C_8_we1;
wire   [15:0] C_8_d1;
wire   [0:0] C_9_address0;
reg    C_9_ce0;
wire   [15:0] C_9_q0;
wire   [0:0] C_9_address1;
reg    C_9_ce1;
reg    C_9_we1;
wire   [15:0] C_9_d1;
wire   [0:0] C_10_address0;
reg    C_10_ce0;
wire   [15:0] C_10_q0;
wire   [0:0] C_10_address1;
reg    C_10_ce1;
reg    C_10_we1;
wire   [15:0] C_10_d1;
wire   [0:0] C_11_address0;
reg    C_11_ce0;
wire   [15:0] C_11_q0;
wire   [0:0] C_11_address1;
reg    C_11_ce1;
reg    C_11_we1;
wire   [15:0] C_11_d1;
wire   [0:0] C_12_address0;
reg    C_12_ce0;
wire   [15:0] C_12_q0;
wire   [0:0] C_12_address1;
reg    C_12_ce1;
reg    C_12_we1;
wire   [15:0] C_12_d1;
wire   [0:0] C_13_address0;
reg    C_13_ce0;
wire   [15:0] C_13_q0;
wire   [0:0] C_13_address1;
reg    C_13_ce1;
reg    C_13_we1;
wire   [15:0] C_13_d1;
wire   [0:0] C_14_address0;
reg    C_14_ce0;
wire   [15:0] C_14_q0;
wire   [0:0] C_14_address1;
reg    C_14_ce1;
reg    C_14_we1;
wire   [15:0] C_14_d1;
wire   [0:0] C_15_address0;
reg    C_15_ce0;
wire   [15:0] C_15_q0;
wire   [0:0] C_15_address1;
reg    C_15_ce1;
reg    C_15_we1;
wire   [15:0] C_15_d1;
reg    a_Data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    Pa_Data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [7:0] state_load_reg_1983;
reg    ap_enable_reg_pp0_iter2;
reg   [7:0] state_load_reg_1983_pp0_iter1_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [15:0] tmp_83_fu_1047_p3;
reg   [15:0] tmp_83_reg_1987;
wire   [15:0] grp_fu_650_p3;
reg   [15:0] tmp_30_1_reg_1998;
wire   [15:0] grp_fu_663_p3;
reg   [15:0] tmp_30_2_reg_2009;
wire   [15:0] grp_fu_676_p3;
reg   [15:0] tmp_30_3_reg_2020;
wire   [15:0] grp_fu_689_p3;
reg   [15:0] tmp_30_4_reg_2031;
wire   [15:0] grp_fu_702_p3;
reg   [15:0] tmp_30_5_reg_2042;
wire   [15:0] grp_fu_715_p3;
reg   [15:0] tmp_30_6_reg_2053;
wire   [15:0] grp_fu_728_p3;
reg   [15:0] tmp_30_7_reg_2064;
wire   [15:0] tmp_75_fu_1139_p3;
reg   [15:0] tmp_75_reg_2075;
wire   [15:0] grp_fu_766_p3;
reg   [15:0] tmp_20_1_reg_2086;
wire   [15:0] grp_fu_779_p3;
reg   [15:0] tmp_20_2_reg_2097;
wire   [15:0] grp_fu_792_p3;
reg   [15:0] tmp_20_3_reg_2108;
wire   [15:0] grp_fu_805_p3;
reg   [15:0] tmp_20_4_reg_2119;
wire   [15:0] grp_fu_818_p3;
reg   [15:0] tmp_20_5_reg_2130;
wire   [15:0] grp_fu_831_p3;
reg   [15:0] tmp_20_6_reg_2141;
wire   [15:0] grp_fu_844_p3;
reg   [15:0] tmp_20_7_reg_2152;
wire   [127:0] tmp_68_fu_1669_p1;
wire   [127:0] tmp_59_fu_1978_p1;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_84_fu_1061_p1;
wire   [63:0] tmp_76_fu_1153_p1;
wire   [63:0] tmp_70_fu_1264_p1;
wire   [63:0] tmp_43_fu_1309_p1;
wire   [7:0] p_6_cast_cast_fu_1115_p3;
wire   [7:0] p_1_cast_cast_fu_1276_p3;
wire   [15:0] tmp_71_fu_1229_p1;
wire   [15:0] tmp_fu_1343_p1;
wire   [15:0] grp_fu_575_p4;
wire   [15:0] grp_fu_585_p4;
wire   [15:0] grp_fu_595_p4;
wire   [15:0] grp_fu_605_p4;
wire   [15:0] grp_fu_615_p4;
wire   [15:0] grp_fu_625_p4;
wire   [15:0] grp_fu_635_p4;
wire   [15:0] tmp_72_fu_1213_p1;
wire   [15:0] tmp_8_fu_1327_p1;
wire   [7:0] grp_fu_747_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] grp_fu_645_p2;
wire   [0:0] grp_fu_658_p2;
wire   [0:0] grp_fu_671_p2;
wire   [0:0] grp_fu_684_p2;
wire   [0:0] grp_fu_697_p2;
wire   [0:0] grp_fu_710_p2;
wire   [0:0] grp_fu_723_p2;
wire   [7:0] grp_fu_736_p2;
wire   [0:0] grp_fu_741_p2;
wire   [0:0] grp_fu_761_p2;
wire   [0:0] grp_fu_774_p2;
wire   [0:0] grp_fu_787_p2;
wire   [0:0] grp_fu_800_p2;
wire   [0:0] grp_fu_813_p2;
wire   [0:0] grp_fu_826_p2;
wire   [0:0] grp_fu_839_p2;
wire   [15:0] tmp_104_fu_1037_p1;
wire   [0:0] tmp_82_fu_1041_p2;
wire   [15:0] tmp_73_fu_1129_p1;
wire   [0:0] tmp_74_fu_1133_p2;
wire   [15:0] tmp_51_fu_1245_p1;
wire   [0:0] tmp_60_fu_1249_p2;
wire   [15:0] tmp_17_fu_1290_p1;
wire   [0:0] tmp_25_fu_1294_p2;
wire   [0:0] tmp_85_fu_1365_p2;
wire   [15:0] tmp_86_fu_1370_p3;
wire   [0:0] tmp_106_fu_1381_p3;
wire   [14:0] tmp_105_fu_1377_p1;
wire   [14:0] tmp_88_fu_1389_p3;
wire   [0:0] tmp_34_1_fu_1401_p2;
wire   [15:0] tmp_35_1_fu_1406_p3;
wire   [0:0] tmp_108_fu_1417_p3;
wire   [14:0] tmp_107_fu_1413_p1;
wire   [14:0] tmp_37_1_fu_1425_p3;
wire   [0:0] tmp_34_2_fu_1437_p2;
wire   [15:0] tmp_35_2_fu_1442_p3;
wire   [0:0] tmp_110_fu_1453_p3;
wire   [14:0] tmp_109_fu_1449_p1;
wire   [14:0] tmp_37_2_fu_1461_p3;
wire   [0:0] tmp_34_3_fu_1473_p2;
wire   [15:0] tmp_35_3_fu_1478_p3;
wire   [0:0] tmp_112_fu_1489_p3;
wire   [14:0] tmp_111_fu_1485_p1;
wire   [14:0] tmp_37_3_fu_1497_p3;
wire   [0:0] tmp_34_4_fu_1509_p2;
wire   [15:0] tmp_35_4_fu_1514_p3;
wire   [0:0] tmp_114_fu_1525_p3;
wire   [14:0] tmp_113_fu_1521_p1;
wire   [14:0] tmp_37_4_fu_1533_p3;
wire   [0:0] tmp_34_5_fu_1545_p2;
wire   [15:0] tmp_35_5_fu_1550_p3;
wire   [0:0] tmp_116_fu_1561_p3;
wire   [14:0] tmp_115_fu_1557_p1;
wire   [14:0] tmp_37_5_fu_1569_p3;
wire   [0:0] tmp_34_6_fu_1581_p2;
wire   [15:0] tmp_35_6_fu_1586_p3;
wire   [0:0] tmp_118_fu_1597_p3;
wire   [14:0] tmp_117_fu_1593_p1;
wire   [14:0] tmp_37_6_fu_1605_p3;
wire   [0:0] tmp_34_7_fu_1617_p2;
wire   [15:0] tmp_35_7_fu_1622_p3;
wire   [0:0] tmp_120_fu_1633_p3;
wire   [14:0] tmp_119_fu_1629_p1;
wire   [14:0] tmp_37_7_fu_1641_p3;
wire   [15:0] tmp_37_6_cast_fu_1613_p1;
wire   [15:0] tmp_37_5_cast_fu_1577_p1;
wire   [15:0] tmp_37_4_cast_fu_1541_p1;
wire   [15:0] tmp_37_3_cast_fu_1505_p1;
wire   [15:0] tmp_37_2_cast_fu_1469_p1;
wire   [15:0] tmp_37_1_cast_fu_1433_p1;
wire   [15:0] tmp_88_cast_fu_1397_p1;
wire   [126:0] tmp_90_fu_1649_p9;
wire   [0:0] tmp_77_fu_1674_p2;
wire   [15:0] tmp_78_fu_1679_p3;
wire   [0:0] tmp_80_fu_1690_p3;
wire   [14:0] tmp_79_fu_1686_p1;
wire   [14:0] tmp_81_fu_1698_p3;
wire   [0:0] tmp_22_1_fu_1710_p2;
wire   [15:0] tmp_23_1_fu_1715_p3;
wire   [0:0] tmp_91_fu_1726_p3;
wire   [14:0] tmp_87_fu_1722_p1;
wire   [14:0] tmp_25_1_fu_1734_p3;
wire   [0:0] tmp_22_2_fu_1746_p2;
wire   [15:0] tmp_23_2_fu_1751_p3;
wire   [0:0] tmp_93_fu_1762_p3;
wire   [14:0] tmp_92_fu_1758_p1;
wire   [14:0] tmp_25_2_fu_1770_p3;
wire   [0:0] tmp_22_3_fu_1782_p2;
wire   [15:0] tmp_23_3_fu_1787_p3;
wire   [0:0] tmp_95_fu_1798_p3;
wire   [14:0] tmp_94_fu_1794_p1;
wire   [14:0] tmp_25_3_fu_1806_p3;
wire   [0:0] tmp_22_4_fu_1818_p2;
wire   [15:0] tmp_23_4_fu_1823_p3;
wire   [0:0] tmp_97_fu_1834_p3;
wire   [14:0] tmp_96_fu_1830_p1;
wire   [14:0] tmp_25_4_fu_1842_p3;
wire   [0:0] tmp_22_5_fu_1854_p2;
wire   [15:0] tmp_23_5_fu_1859_p3;
wire   [0:0] tmp_99_fu_1870_p3;
wire   [14:0] tmp_98_fu_1866_p1;
wire   [14:0] tmp_25_5_fu_1878_p3;
wire   [0:0] tmp_22_6_fu_1890_p2;
wire   [15:0] tmp_23_6_fu_1895_p3;
wire   [0:0] tmp_101_fu_1906_p3;
wire   [14:0] tmp_100_fu_1902_p1;
wire   [14:0] tmp_25_6_fu_1914_p3;
wire   [0:0] tmp_22_7_fu_1926_p2;
wire   [15:0] tmp_23_7_fu_1931_p3;
wire   [0:0] tmp_103_fu_1942_p3;
wire   [14:0] tmp_102_fu_1938_p1;
wire   [14:0] tmp_25_7_fu_1950_p3;
wire   [15:0] tmp_25_6_cast_fu_1922_p1;
wire   [15:0] tmp_25_5_cast_fu_1886_p1;
wire   [15:0] tmp_25_4_cast_fu_1850_p1;
wire   [15:0] tmp_25_3_cast_fu_1814_p1;
wire   [15:0] tmp_25_2_cast_fu_1778_p1;
wire   [15:0] tmp_25_1_cast_fu_1742_p1;
wire   [15:0] tmp_81_cast_fu_1706_p1;
wire   [126:0] tmp_89_fu_1958_p9;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_626;
reg    ap_condition_448;
reg    ap_condition_561;

// power-on initialization
initial begin
#0 a_Data_0_sel_rd = 1'b0;
#0 a_Data_0_sel_wr = 1'b0;
#0 a_Data_0_state = 2'd0;
#0 Pa_Data_1_sel_rd = 1'b0;
#0 Pa_Data_1_sel_wr = 1'b0;
#0 Pa_Data_1_state = 2'd0;
#0 state = 8'd1;
#0 a_0_Data_0 = 16'd0;
#0 a_0_Data_1 = 16'd0;
#0 a_0_Data_2 = 16'd0;
#0 a_0_Data_3 = 16'd0;
#0 a_0_Data_4 = 16'd0;
#0 a_0_Data_5 = 16'd0;
#0 a_0_Data_6 = 16'd0;
#0 a_0_Data_7 = 16'd0;
#0 a_1_Data_0 = 16'd0;
#0 a_1_Data_1 = 16'd0;
#0 a_1_Data_2 = 16'd0;
#0 a_1_Data_3 = 16'd0;
#0 a_1_Data_4 = 16'd0;
#0 a_1_Data_5 = 16'd0;
#0 a_1_Data_6 = 16'd0;
#0 a_1_Data_7 = 16'd0;
#0 column = 8'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_0_address0),
    .ce0(C_0_ce0),
    .q0(C_0_q0),
    .address1(C_0_address1),
    .ce1(C_0_ce1),
    .we1(C_0_we1),
    .d1(C_0_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_1_address0),
    .ce0(C_1_ce0),
    .q0(C_1_q0),
    .address1(C_1_address1),
    .ce1(C_1_ce1),
    .we1(C_1_we1),
    .d1(C_1_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_2_address0),
    .ce0(C_2_ce0),
    .q0(C_2_q0),
    .address1(C_2_address1),
    .ce1(C_2_ce1),
    .we1(C_2_we1),
    .d1(C_2_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_3_address0),
    .ce0(C_3_ce0),
    .q0(C_3_q0),
    .address1(C_3_address1),
    .ce1(C_3_ce1),
    .we1(C_3_we1),
    .d1(C_3_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_4_address0),
    .ce0(C_4_ce0),
    .q0(C_4_q0),
    .address1(C_4_address1),
    .ce1(C_4_ce1),
    .we1(C_4_we1),
    .d1(C_4_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_5_address0),
    .ce0(C_5_ce0),
    .q0(C_5_q0),
    .address1(C_5_address1),
    .ce1(C_5_ce1),
    .we1(C_5_we1),
    .d1(C_5_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_6_address0),
    .ce0(C_6_ce0),
    .q0(C_6_q0),
    .address1(C_6_address1),
    .ce1(C_6_ce1),
    .we1(C_6_we1),
    .d1(C_6_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_7_address0),
    .ce0(C_7_ce0),
    .q0(C_7_q0),
    .address1(C_7_address1),
    .ce1(C_7_ce1),
    .we1(C_7_we1),
    .d1(C_7_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_8_address0),
    .ce0(C_8_ce0),
    .q0(C_8_q0),
    .address1(C_8_address1),
    .ce1(C_8_ce1),
    .we1(C_8_we1),
    .d1(C_8_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_9_address0),
    .ce0(C_9_ce0),
    .q0(C_9_q0),
    .address1(C_9_address1),
    .ce1(C_9_ce1),
    .we1(C_9_we1),
    .d1(C_9_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_10_address0),
    .ce0(C_10_ce0),
    .q0(C_10_q0),
    .address1(C_10_address1),
    .ce1(C_10_ce1),
    .we1(C_10_we1),
    .d1(C_10_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_11_address0),
    .ce0(C_11_ce0),
    .q0(C_11_q0),
    .address1(C_11_address1),
    .ce1(C_11_ce1),
    .we1(C_11_we1),
    .d1(C_11_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_12_address0),
    .ce0(C_12_ce0),
    .q0(C_12_q0),
    .address1(C_12_address1),
    .ce1(C_12_ce1),
    .we1(C_12_we1),
    .d1(C_12_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_13_address0),
    .ce0(C_13_ce0),
    .q0(C_13_q0),
    .address1(C_13_address1),
    .ce1(C_13_ce1),
    .we1(C_13_we1),
    .d1(C_13_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_14_address0),
    .ce0(C_14_ce0),
    .q0(C_14_q0),
    .address1(C_14_address1),
    .ce1(C_14_ce1),
    .we1(C_14_we1),
    .d1(C_14_d1)
);

Layer3_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
C_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_15_address0),
    .ce0(C_15_ce0),
    .q0(C_15_q0),
    .address1(C_15_address1),
    .ce1(C_15_ce1),
    .we1(C_15_we1),
    .d1(C_15_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_out))) begin
            Pa_Data_1_sel_rd <= ~Pa_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == Pa_Data_1_ack_in) & (1'b1 == Pa_Data_1_vld_in))) begin
            Pa_Data_1_sel_wr <= ~Pa_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_vld_in)) | ((2'd3 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_vld_in) & (1'b1 == Pa_Data_1_ack_out)))) begin
            Pa_Data_1_state <= 2'd2;
        end else if ((((2'd3 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_in)) | ((2'd1 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_ack_out)))) begin
            Pa_Data_1_state <= 2'd1;
        end else if ((((2'd2 == Pa_Data_1_state) & (1'b1 == Pa_Data_1_vld_in)) | (~((1'b0 == Pa_Data_1_vld_in) & (1'b1 == Pa_Data_1_ack_out)) & ~((1'b0 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_in)) & (2'd3 == Pa_Data_1_state)) | ((2'd1 == Pa_Data_1_state) & (1'b1 == Pa_Data_1_ack_out)))) begin
            Pa_Data_1_state <= 2'd3;
        end else begin
            Pa_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_out))) begin
            a_Data_0_sel_rd <= ~a_Data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_in) & (1'b1 == a_Data_0_vld_in))) begin
            a_Data_0_sel_wr <= ~a_Data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == a_Data_0_vld_in) & (2'd2 == a_Data_0_state)) | ((1'b0 == a_Data_0_vld_in) & (2'd3 == a_Data_0_state) & (1'b1 == a_Data_0_ack_out)))) begin
            a_Data_0_state <= 2'd2;
        end else if ((((1'b0 == a_Data_0_ack_out) & (2'd1 == a_Data_0_state)) | ((1'b0 == a_Data_0_ack_out) & (2'd3 == a_Data_0_state) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd1;
        end else if (((~((1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)) & ~((1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)) & (2'd3 == a_Data_0_state)) | ((2'd1 == a_Data_0_state) & (1'b1 == a_Data_0_ack_out)) | ((2'd2 == a_Data_0_state) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd3;
        end else begin
            a_Data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_448)) begin
        if ((state == 8'd1)) begin
            a_0_Data_0 <= tmp_fu_1343_p1;
        end else if ((state == 8'd16)) begin
            a_0_Data_0 <= tmp_71_fu_1229_p1;
        end else if ((state == 8'd64)) begin
            a_0_Data_0 <= tmp_75_fu_1139_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_1 <= {{a_Data_0_data_out[31:16]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_1 <= grp_fu_766_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_2 <= {{a_Data_0_data_out[47:32]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_2 <= grp_fu_779_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_3 <= {{a_Data_0_data_out[63:48]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_3 <= grp_fu_792_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_4 <= {{a_Data_0_data_out[79:64]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_4 <= grp_fu_805_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_5 <= {{a_Data_0_data_out[95:80]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_5 <= grp_fu_818_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_6 <= {{a_Data_0_data_out[111:96]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_6 <= grp_fu_831_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_0_Data_7 <= {{a_Data_0_data_out[127:112]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_Data_7 <= grp_fu_844_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_448)) begin
        if ((state == 8'd2)) begin
            a_1_Data_0 <= tmp_8_fu_1327_p1;
        end else if ((state == 8'd32)) begin
            a_1_Data_0 <= tmp_72_fu_1213_p1;
        end else if ((state == 8'd128)) begin
            a_1_Data_0 <= tmp_83_fu_1047_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_1 <= {{a_Data_0_data_out[31:16]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_1 <= grp_fu_650_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_2 <= {{a_Data_0_data_out[47:32]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_2 <= grp_fu_663_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_3 <= {{a_Data_0_data_out[63:48]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_3 <= grp_fu_676_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_4 <= {{a_Data_0_data_out[79:64]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_4 <= grp_fu_689_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_5 <= {{a_Data_0_data_out[95:80]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_5 <= grp_fu_702_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_6 <= {{a_Data_0_data_out[111:96]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_6 <= grp_fu_715_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_Data_7 <= {{a_Data_0_data_out[127:112]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Data_7 <= grp_fu_728_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_448)) begin
        if ((1'b1 == ap_condition_561)) begin
            state <= 8'd1;
        end else if ((state == 8'd1)) begin
            state <= 8'd2;
        end else if ((state == 8'd2)) begin
            state <= 8'd4;
        end else if ((state == 8'd4)) begin
            state <= 8'd8;
        end else if ((state == 8'd8)) begin
            state <= p_1_cast_cast_fu_1276_p3;
        end else if ((state == 8'd16)) begin
            state <= 8'd32;
        end else if ((state == 8'd32)) begin
            state <= 8'd64;
        end else if ((state == 8'd64)) begin
            state <= 8'd128;
        end else if ((state == 8'd128)) begin
            state <= p_6_cast_cast_fu_1115_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == Pa_Data_1_load_A)) begin
        Pa_Data_1_payload_A <= Pa_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == Pa_Data_1_load_B)) begin
        Pa_Data_1_payload_B <= Pa_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_A)) begin
        a_Data_0_payload_A <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_B)) begin
        a_Data_0_payload_B <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        column <= grp_fu_747_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_load_reg_1983 <= state;
        state_load_reg_1983_pp0_iter1_reg <= state_load_reg_1983;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_20_1_reg_2086 <= grp_fu_766_p3;
        tmp_20_2_reg_2097 <= grp_fu_779_p3;
        tmp_20_3_reg_2108 <= grp_fu_792_p3;
        tmp_20_4_reg_2119 <= grp_fu_805_p3;
        tmp_20_5_reg_2130 <= grp_fu_818_p3;
        tmp_20_6_reg_2141 <= grp_fu_831_p3;
        tmp_20_7_reg_2152 <= grp_fu_844_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_30_1_reg_1998 <= grp_fu_650_p3;
        tmp_30_2_reg_2009 <= grp_fu_663_p3;
        tmp_30_3_reg_2020 <= grp_fu_676_p3;
        tmp_30_4_reg_2031 <= grp_fu_689_p3;
        tmp_30_5_reg_2042 <= grp_fu_702_p3;
        tmp_30_6_reg_2053 <= grp_fu_715_p3;
        tmp_30_7_reg_2064 <= grp_fu_728_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_75_reg_2075 <= tmp_75_fu_1139_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_83_reg_1987 <= tmp_83_fu_1047_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_0_ce0 = 1'b1;
    end else begin
        C_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_0_ce1 = 1'b1;
    end else begin
        C_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_0_we1 = 1'b1;
    end else begin
        C_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_10_ce0 = 1'b1;
    end else begin
        C_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_10_ce1 = 1'b1;
    end else begin
        C_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_10_we1 = 1'b1;
    end else begin
        C_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_11_ce0 = 1'b1;
    end else begin
        C_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_11_ce1 = 1'b1;
    end else begin
        C_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_11_we1 = 1'b1;
    end else begin
        C_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_12_ce0 = 1'b1;
    end else begin
        C_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_12_ce1 = 1'b1;
    end else begin
        C_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_12_we1 = 1'b1;
    end else begin
        C_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_13_ce0 = 1'b1;
    end else begin
        C_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_13_ce1 = 1'b1;
    end else begin
        C_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_13_we1 = 1'b1;
    end else begin
        C_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_14_ce0 = 1'b1;
    end else begin
        C_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_14_ce1 = 1'b1;
    end else begin
        C_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_14_we1 = 1'b1;
    end else begin
        C_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_15_ce0 = 1'b1;
    end else begin
        C_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_15_ce1 = 1'b1;
    end else begin
        C_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_15_we1 = 1'b1;
    end else begin
        C_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_1_ce0 = 1'b1;
    end else begin
        C_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_1_ce1 = 1'b1;
    end else begin
        C_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_1_we1 = 1'b1;
    end else begin
        C_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_2_ce0 = 1'b1;
    end else begin
        C_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_2_ce1 = 1'b1;
    end else begin
        C_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_2_we1 = 1'b1;
    end else begin
        C_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_3_ce0 = 1'b1;
    end else begin
        C_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_3_ce1 = 1'b1;
    end else begin
        C_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_3_we1 = 1'b1;
    end else begin
        C_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_4_ce0 = 1'b1;
    end else begin
        C_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_4_ce1 = 1'b1;
    end else begin
        C_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_4_we1 = 1'b1;
    end else begin
        C_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_5_ce0 = 1'b1;
    end else begin
        C_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_5_ce1 = 1'b1;
    end else begin
        C_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_5_we1 = 1'b1;
    end else begin
        C_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_6_ce0 = 1'b1;
    end else begin
        C_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_6_ce1 = 1'b1;
    end else begin
        C_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_6_we1 = 1'b1;
    end else begin
        C_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_7_ce0 = 1'b1;
    end else begin
        C_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_7_ce1 = 1'b1;
    end else begin
        C_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_7_we1 = 1'b1;
    end else begin
        C_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_8_ce0 = 1'b1;
    end else begin
        C_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_8_ce1 = 1'b1;
    end else begin
        C_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_8_we1 = 1'b1;
    end else begin
        C_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_9_ce0 = 1'b1;
    end else begin
        C_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_9_ce1 = 1'b1;
    end else begin
        C_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_9_we1 = 1'b1;
    end else begin
        C_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_626)) begin
        if ((state_load_reg_1983 == 8'd64)) begin
            Pa_Data_1_data_in = tmp_59_fu_1978_p1;
        end else if ((state_load_reg_1983 == 8'd128)) begin
            Pa_Data_1_data_in = tmp_68_fu_1669_p1;
        end else begin
            Pa_Data_1_data_in = 'bx;
        end
    end else begin
        Pa_Data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == Pa_Data_1_sel)) begin
        Pa_Data_1_data_out = Pa_Data_1_payload_B;
    end else begin
        Pa_Data_1_data_out = Pa_Data_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state_load_reg_1983 == 8'd128) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state_load_reg_1983 == 8'd64) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Pa_Data_1_vld_in = 1'b1;
    end else begin
        Pa_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((state_load_reg_1983_pp0_iter1_reg == 8'd128) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((state_load_reg_1983_pp0_iter1_reg == 8'd64) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((state_load_reg_1983 == 8'd128) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state_load_reg_1983 == 8'd64) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Pa_Data_TDATA_blk_n = Pa_Data_1_state[1'd1];
    end else begin
        Pa_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd128) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd64) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd32) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd16) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd8) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd4) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state == 8'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_Data_0_ack_out = 1'b1;
    end else begin
        a_Data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == a_Data_0_sel)) begin
        a_Data_0_data_out = a_Data_0_payload_B;
    end else begin
        a_Data_0_data_out = a_Data_0_payload_A;
    end
end

always @ (*) begin
    if ((((state == 8'd128) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 8'd64) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 8'd32) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 8'd16) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 8'd8) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 8'd4) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((state == 8'd2) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state == 8'd1)))) begin
        a_Data_TDATA_blk_n = a_Data_0_state[1'd0];
    end else begin
        a_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_0_address0 = tmp_76_fu_1153_p1;

assign C_0_address1 = tmp_43_fu_1309_p1;

assign C_0_d1 = ((tmp_25_fu_1294_p2[0:0] === 1'b1) ? tmp_17_fu_1290_p1 : a_0_Data_0);

assign C_10_address0 = tmp_84_fu_1061_p1;

assign C_10_address1 = tmp_70_fu_1264_p1;

assign C_10_d1 = ((grp_fu_658_p2[0:0] === 1'b1) ? grp_fu_585_p4 : a_1_Data_2);

assign C_11_address0 = tmp_84_fu_1061_p1;

assign C_11_address1 = tmp_70_fu_1264_p1;

assign C_11_d1 = ((grp_fu_671_p2[0:0] === 1'b1) ? grp_fu_595_p4 : a_1_Data_3);

assign C_12_address0 = tmp_84_fu_1061_p1;

assign C_12_address1 = tmp_70_fu_1264_p1;

assign C_12_d1 = ((grp_fu_684_p2[0:0] === 1'b1) ? grp_fu_605_p4 : a_1_Data_4);

assign C_13_address0 = tmp_84_fu_1061_p1;

assign C_13_address1 = tmp_70_fu_1264_p1;

assign C_13_d1 = ((grp_fu_697_p2[0:0] === 1'b1) ? grp_fu_615_p4 : a_1_Data_5);

assign C_14_address0 = tmp_84_fu_1061_p1;

assign C_14_address1 = tmp_70_fu_1264_p1;

assign C_14_d1 = ((grp_fu_710_p2[0:0] === 1'b1) ? grp_fu_625_p4 : a_1_Data_6);

assign C_15_address0 = tmp_84_fu_1061_p1;

assign C_15_address1 = tmp_70_fu_1264_p1;

assign C_15_d1 = ((grp_fu_723_p2[0:0] === 1'b1) ? grp_fu_635_p4 : a_1_Data_7);

assign C_1_address0 = tmp_76_fu_1153_p1;

assign C_1_address1 = tmp_43_fu_1309_p1;

assign C_1_d1 = ((grp_fu_761_p2[0:0] === 1'b1) ? grp_fu_575_p4 : a_0_Data_1);

assign C_2_address0 = tmp_76_fu_1153_p1;

assign C_2_address1 = tmp_43_fu_1309_p1;

assign C_2_d1 = ((grp_fu_774_p2[0:0] === 1'b1) ? grp_fu_585_p4 : a_0_Data_2);

assign C_3_address0 = tmp_76_fu_1153_p1;

assign C_3_address1 = tmp_43_fu_1309_p1;

assign C_3_d1 = ((grp_fu_787_p2[0:0] === 1'b1) ? grp_fu_595_p4 : a_0_Data_3);

assign C_4_address0 = tmp_76_fu_1153_p1;

assign C_4_address1 = tmp_43_fu_1309_p1;

assign C_4_d1 = ((grp_fu_800_p2[0:0] === 1'b1) ? grp_fu_605_p4 : a_0_Data_4);

assign C_5_address0 = tmp_76_fu_1153_p1;

assign C_5_address1 = tmp_43_fu_1309_p1;

assign C_5_d1 = ((grp_fu_813_p2[0:0] === 1'b1) ? grp_fu_615_p4 : a_0_Data_5);

assign C_6_address0 = tmp_76_fu_1153_p1;

assign C_6_address1 = tmp_43_fu_1309_p1;

assign C_6_d1 = ((grp_fu_826_p2[0:0] === 1'b1) ? grp_fu_625_p4 : a_0_Data_6);

assign C_7_address0 = tmp_76_fu_1153_p1;

assign C_7_address1 = tmp_43_fu_1309_p1;

assign C_7_d1 = ((grp_fu_839_p2[0:0] === 1'b1) ? grp_fu_635_p4 : a_0_Data_7);

assign C_8_address0 = tmp_84_fu_1061_p1;

assign C_8_address1 = tmp_70_fu_1264_p1;

assign C_8_d1 = ((tmp_60_fu_1249_p2[0:0] === 1'b1) ? tmp_51_fu_1245_p1 : a_1_Data_0);

assign C_9_address0 = tmp_84_fu_1061_p1;

assign C_9_address1 = tmp_70_fu_1264_p1;

assign C_9_d1 = ((grp_fu_645_p2[0:0] === 1'b1) ? grp_fu_575_p4 : a_1_Data_1);

assign Pa_Data_1_ack_in = Pa_Data_1_state[1'd1];

assign Pa_Data_1_ack_out = Pa_Data_TREADY;

assign Pa_Data_1_load_A = (~Pa_Data_1_sel_wr & Pa_Data_1_state_cmp_full);

assign Pa_Data_1_load_B = (Pa_Data_1_state_cmp_full & Pa_Data_1_sel_wr);

assign Pa_Data_1_sel = Pa_Data_1_sel_rd;

assign Pa_Data_1_state_cmp_full = ((Pa_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign Pa_Data_1_vld_out = Pa_Data_1_state[1'd0];

assign Pa_Data_TDATA = Pa_Data_1_data_out;

assign Pa_Data_TVALID = Pa_Data_1_state[1'd0];

assign a_Data_0_ack_in = a_Data_0_state[1'd1];

assign a_Data_0_load_A = (~a_Data_0_sel_wr & a_Data_0_state_cmp_full);

assign a_Data_0_load_B = (a_Data_0_state_cmp_full & a_Data_0_sel_wr);

assign a_Data_0_sel = a_Data_0_sel_rd;

assign a_Data_0_state_cmp_full = ((a_Data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign a_Data_0_vld_in = a_Data_TVALID;

assign a_Data_0_vld_out = a_Data_0_state[1'd0];

assign a_Data_TREADY = a_Data_0_state[1'd1];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b0 == Pa_Data_1_ack_in) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == 1'b1) & (((state == 8'd128) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd64) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd32) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd16) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd8) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd4) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd2) & (1'b0 == a_Data_0_vld_out)) | ((1'b0 == a_Data_0_vld_out) & (state == 8'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b0 == Pa_Data_1_ack_in) | (1'b1 == ap_block_state3_io))) | ((1'b1 == ap_block_state2_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == 1'b1) & (((state == 8'd128) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd64) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd32) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd16) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd8) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd4) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd2) & (1'b0 == a_Data_0_vld_out)) | ((1'b0 == a_Data_0_vld_out) & (state == 8'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b0 == Pa_Data_1_ack_in) | (1'b1 == ap_block_state3_io))) | ((1'b1 == ap_block_state2_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == 1'b1) & (((state == 8'd128) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd64) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd32) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd16) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd8) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd4) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd2) & (1'b0 == a_Data_0_vld_out)) | ((1'b0 == a_Data_0_vld_out) & (state == 8'd1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((state == 8'd128) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd64) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd32) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd16) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd8) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd4) & (1'b0 == a_Data_0_vld_out)) | ((state == 8'd2) & (1'b0 == a_Data_0_vld_out)) | ((1'b0 == a_Data_0_vld_out) & (state == 8'd1)));
end

always @ (*) begin
    ap_block_state2_io = (((state_load_reg_1983 == 8'd128) & (1'b0 == Pa_Data_1_ack_in)) | ((state_load_reg_1983 == 8'd64) & (1'b0 == Pa_Data_1_ack_in)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((state_load_reg_1983_pp0_iter1_reg == 8'd128) & (1'b0 == Pa_Data_1_ack_in)) | ((state_load_reg_1983_pp0_iter1_reg == 8'd64) & (1'b0 == Pa_Data_1_ack_in)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (1'b0 == Pa_Data_1_ack_in);
end

always @ (*) begin
    ap_condition_448 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_561 = (~(state == 8'd128) & ~(state == 8'd64) & ~(state == 8'd32) & ~(state == 8'd16) & ~(state == 8'd8) & ~(state == 8'd4) & ~(state == 8'd2) & ~(state == 8'd1));
end

always @ (*) begin
    ap_condition_626 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_575_p4 = {{a_Data_0_data_out[31:16]}};

assign grp_fu_585_p4 = {{a_Data_0_data_out[47:32]}};

assign grp_fu_595_p4 = {{a_Data_0_data_out[63:48]}};

assign grp_fu_605_p4 = {{a_Data_0_data_out[79:64]}};

assign grp_fu_615_p4 = {{a_Data_0_data_out[95:80]}};

assign grp_fu_625_p4 = {{a_Data_0_data_out[111:96]}};

assign grp_fu_635_p4 = {{a_Data_0_data_out[127:112]}};

assign grp_fu_645_p2 = (($signed(a_1_Data_1) < $signed(grp_fu_575_p4)) ? 1'b1 : 1'b0);

assign grp_fu_650_p3 = ((grp_fu_645_p2[0:0] === 1'b1) ? grp_fu_575_p4 : a_1_Data_1);

assign grp_fu_658_p2 = (($signed(a_1_Data_2) < $signed(grp_fu_585_p4)) ? 1'b1 : 1'b0);

assign grp_fu_663_p3 = ((grp_fu_658_p2[0:0] === 1'b1) ? grp_fu_585_p4 : a_1_Data_2);

assign grp_fu_671_p2 = (($signed(a_1_Data_3) < $signed(grp_fu_595_p4)) ? 1'b1 : 1'b0);

assign grp_fu_676_p3 = ((grp_fu_671_p2[0:0] === 1'b1) ? grp_fu_595_p4 : a_1_Data_3);

assign grp_fu_684_p2 = (($signed(a_1_Data_4) < $signed(grp_fu_605_p4)) ? 1'b1 : 1'b0);

assign grp_fu_689_p3 = ((grp_fu_684_p2[0:0] === 1'b1) ? grp_fu_605_p4 : a_1_Data_4);

assign grp_fu_697_p2 = (($signed(a_1_Data_5) < $signed(grp_fu_615_p4)) ? 1'b1 : 1'b0);

assign grp_fu_702_p3 = ((grp_fu_697_p2[0:0] === 1'b1) ? grp_fu_615_p4 : a_1_Data_5);

assign grp_fu_710_p2 = (($signed(a_1_Data_6) < $signed(grp_fu_625_p4)) ? 1'b1 : 1'b0);

assign grp_fu_715_p3 = ((grp_fu_710_p2[0:0] === 1'b1) ? grp_fu_625_p4 : a_1_Data_6);

assign grp_fu_723_p2 = (($signed(a_1_Data_7) < $signed(grp_fu_635_p4)) ? 1'b1 : 1'b0);

assign grp_fu_728_p3 = ((grp_fu_723_p2[0:0] === 1'b1) ? grp_fu_635_p4 : a_1_Data_7);

assign grp_fu_736_p2 = (8'd1 + column);

assign grp_fu_741_p2 = ((grp_fu_736_p2 == 8'd2) ? 1'b1 : 1'b0);

assign grp_fu_747_p3 = ((grp_fu_741_p2[0:0] === 1'b1) ? 8'd0 : grp_fu_736_p2);

assign grp_fu_761_p2 = (($signed(a_0_Data_1) < $signed(grp_fu_575_p4)) ? 1'b1 : 1'b0);

assign grp_fu_766_p3 = ((grp_fu_761_p2[0:0] === 1'b1) ? grp_fu_575_p4 : a_0_Data_1);

assign grp_fu_774_p2 = (($signed(a_0_Data_2) < $signed(grp_fu_585_p4)) ? 1'b1 : 1'b0);

assign grp_fu_779_p3 = ((grp_fu_774_p2[0:0] === 1'b1) ? grp_fu_585_p4 : a_0_Data_2);

assign grp_fu_787_p2 = (($signed(a_0_Data_3) < $signed(grp_fu_595_p4)) ? 1'b1 : 1'b0);

assign grp_fu_792_p3 = ((grp_fu_787_p2[0:0] === 1'b1) ? grp_fu_595_p4 : a_0_Data_3);

assign grp_fu_800_p2 = (($signed(a_0_Data_4) < $signed(grp_fu_605_p4)) ? 1'b1 : 1'b0);

assign grp_fu_805_p3 = ((grp_fu_800_p2[0:0] === 1'b1) ? grp_fu_605_p4 : a_0_Data_4);

assign grp_fu_813_p2 = (($signed(a_0_Data_5) < $signed(grp_fu_615_p4)) ? 1'b1 : 1'b0);

assign grp_fu_818_p3 = ((grp_fu_813_p2[0:0] === 1'b1) ? grp_fu_615_p4 : a_0_Data_5);

assign grp_fu_826_p2 = (($signed(a_0_Data_6) < $signed(grp_fu_625_p4)) ? 1'b1 : 1'b0);

assign grp_fu_831_p3 = ((grp_fu_826_p2[0:0] === 1'b1) ? grp_fu_625_p4 : a_0_Data_6);

assign grp_fu_839_p2 = (($signed(a_0_Data_7) < $signed(grp_fu_635_p4)) ? 1'b1 : 1'b0);

assign grp_fu_844_p3 = ((grp_fu_839_p2[0:0] === 1'b1) ? grp_fu_635_p4 : a_0_Data_7);

assign p_1_cast_cast_fu_1276_p3 = ((grp_fu_741_p2[0:0] === 1'b1) ? 8'd16 : 8'd1);

assign p_6_cast_cast_fu_1115_p3 = ((grp_fu_741_p2[0:0] === 1'b1) ? 8'd1 : 8'd16);

assign tmp_100_fu_1902_p1 = tmp_23_6_fu_1895_p3[14:0];

assign tmp_101_fu_1906_p3 = tmp_23_6_fu_1895_p3[32'd15];

assign tmp_102_fu_1938_p1 = tmp_23_7_fu_1931_p3[14:0];

assign tmp_103_fu_1942_p3 = tmp_23_7_fu_1931_p3[32'd15];

assign tmp_104_fu_1037_p1 = a_Data_0_data_out[15:0];

assign tmp_105_fu_1377_p1 = tmp_86_fu_1370_p3[14:0];

assign tmp_106_fu_1381_p3 = tmp_86_fu_1370_p3[32'd15];

assign tmp_107_fu_1413_p1 = tmp_35_1_fu_1406_p3[14:0];

assign tmp_108_fu_1417_p3 = tmp_35_1_fu_1406_p3[32'd15];

assign tmp_109_fu_1449_p1 = tmp_35_2_fu_1442_p3[14:0];

assign tmp_110_fu_1453_p3 = tmp_35_2_fu_1442_p3[32'd15];

assign tmp_111_fu_1485_p1 = tmp_35_3_fu_1478_p3[14:0];

assign tmp_112_fu_1489_p3 = tmp_35_3_fu_1478_p3[32'd15];

assign tmp_113_fu_1521_p1 = tmp_35_4_fu_1514_p3[14:0];

assign tmp_114_fu_1525_p3 = tmp_35_4_fu_1514_p3[32'd15];

assign tmp_115_fu_1557_p1 = tmp_35_5_fu_1550_p3[14:0];

assign tmp_116_fu_1561_p3 = tmp_35_5_fu_1550_p3[32'd15];

assign tmp_117_fu_1593_p1 = tmp_35_6_fu_1586_p3[14:0];

assign tmp_118_fu_1597_p3 = tmp_35_6_fu_1586_p3[32'd15];

assign tmp_119_fu_1629_p1 = tmp_35_7_fu_1622_p3[14:0];

assign tmp_120_fu_1633_p3 = tmp_35_7_fu_1622_p3[32'd15];

assign tmp_17_fu_1290_p1 = a_Data_0_data_out[15:0];

assign tmp_22_1_fu_1710_p2 = (($signed(tmp_20_1_reg_2086) < $signed(C_1_q0)) ? 1'b1 : 1'b0);

assign tmp_22_2_fu_1746_p2 = (($signed(tmp_20_2_reg_2097) < $signed(C_2_q0)) ? 1'b1 : 1'b0);

assign tmp_22_3_fu_1782_p2 = (($signed(tmp_20_3_reg_2108) < $signed(C_3_q0)) ? 1'b1 : 1'b0);

assign tmp_22_4_fu_1818_p2 = (($signed(tmp_20_4_reg_2119) < $signed(C_4_q0)) ? 1'b1 : 1'b0);

assign tmp_22_5_fu_1854_p2 = (($signed(tmp_20_5_reg_2130) < $signed(C_5_q0)) ? 1'b1 : 1'b0);

assign tmp_22_6_fu_1890_p2 = (($signed(tmp_20_6_reg_2141) < $signed(C_6_q0)) ? 1'b1 : 1'b0);

assign tmp_22_7_fu_1926_p2 = (($signed(tmp_20_7_reg_2152) < $signed(C_7_q0)) ? 1'b1 : 1'b0);

assign tmp_23_1_fu_1715_p3 = ((tmp_22_1_fu_1710_p2[0:0] === 1'b1) ? C_1_q0 : tmp_20_1_reg_2086);

assign tmp_23_2_fu_1751_p3 = ((tmp_22_2_fu_1746_p2[0:0] === 1'b1) ? C_2_q0 : tmp_20_2_reg_2097);

assign tmp_23_3_fu_1787_p3 = ((tmp_22_3_fu_1782_p2[0:0] === 1'b1) ? C_3_q0 : tmp_20_3_reg_2108);

assign tmp_23_4_fu_1823_p3 = ((tmp_22_4_fu_1818_p2[0:0] === 1'b1) ? C_4_q0 : tmp_20_4_reg_2119);

assign tmp_23_5_fu_1859_p3 = ((tmp_22_5_fu_1854_p2[0:0] === 1'b1) ? C_5_q0 : tmp_20_5_reg_2130);

assign tmp_23_6_fu_1895_p3 = ((tmp_22_6_fu_1890_p2[0:0] === 1'b1) ? C_6_q0 : tmp_20_6_reg_2141);

assign tmp_23_7_fu_1931_p3 = ((tmp_22_7_fu_1926_p2[0:0] === 1'b1) ? C_7_q0 : tmp_20_7_reg_2152);

assign tmp_25_1_cast_fu_1742_p1 = tmp_25_1_fu_1734_p3;

assign tmp_25_1_fu_1734_p3 = ((tmp_91_fu_1726_p3[0:0] === 1'b1) ? 15'd0 : tmp_87_fu_1722_p1);

assign tmp_25_2_cast_fu_1778_p1 = tmp_25_2_fu_1770_p3;

assign tmp_25_2_fu_1770_p3 = ((tmp_93_fu_1762_p3[0:0] === 1'b1) ? 15'd0 : tmp_92_fu_1758_p1);

assign tmp_25_3_cast_fu_1814_p1 = tmp_25_3_fu_1806_p3;

assign tmp_25_3_fu_1806_p3 = ((tmp_95_fu_1798_p3[0:0] === 1'b1) ? 15'd0 : tmp_94_fu_1794_p1);

assign tmp_25_4_cast_fu_1850_p1 = tmp_25_4_fu_1842_p3;

assign tmp_25_4_fu_1842_p3 = ((tmp_97_fu_1834_p3[0:0] === 1'b1) ? 15'd0 : tmp_96_fu_1830_p1);

assign tmp_25_5_cast_fu_1886_p1 = tmp_25_5_fu_1878_p3;

assign tmp_25_5_fu_1878_p3 = ((tmp_99_fu_1870_p3[0:0] === 1'b1) ? 15'd0 : tmp_98_fu_1866_p1);

assign tmp_25_6_cast_fu_1922_p1 = tmp_25_6_fu_1914_p3;

assign tmp_25_6_fu_1914_p3 = ((tmp_101_fu_1906_p3[0:0] === 1'b1) ? 15'd0 : tmp_100_fu_1902_p1);

assign tmp_25_7_fu_1950_p3 = ((tmp_103_fu_1942_p3[0:0] === 1'b1) ? 15'd0 : tmp_102_fu_1938_p1);

assign tmp_25_fu_1294_p2 = (($signed(a_0_Data_0) < $signed(tmp_17_fu_1290_p1)) ? 1'b1 : 1'b0);

assign tmp_34_1_fu_1401_p2 = (($signed(tmp_30_1_reg_1998) < $signed(C_9_q0)) ? 1'b1 : 1'b0);

assign tmp_34_2_fu_1437_p2 = (($signed(tmp_30_2_reg_2009) < $signed(C_10_q0)) ? 1'b1 : 1'b0);

assign tmp_34_3_fu_1473_p2 = (($signed(tmp_30_3_reg_2020) < $signed(C_11_q0)) ? 1'b1 : 1'b0);

assign tmp_34_4_fu_1509_p2 = (($signed(tmp_30_4_reg_2031) < $signed(C_12_q0)) ? 1'b1 : 1'b0);

assign tmp_34_5_fu_1545_p2 = (($signed(tmp_30_5_reg_2042) < $signed(C_13_q0)) ? 1'b1 : 1'b0);

assign tmp_34_6_fu_1581_p2 = (($signed(tmp_30_6_reg_2053) < $signed(C_14_q0)) ? 1'b1 : 1'b0);

assign tmp_34_7_fu_1617_p2 = (($signed(tmp_30_7_reg_2064) < $signed(C_15_q0)) ? 1'b1 : 1'b0);

assign tmp_35_1_fu_1406_p3 = ((tmp_34_1_fu_1401_p2[0:0] === 1'b1) ? C_9_q0 : tmp_30_1_reg_1998);

assign tmp_35_2_fu_1442_p3 = ((tmp_34_2_fu_1437_p2[0:0] === 1'b1) ? C_10_q0 : tmp_30_2_reg_2009);

assign tmp_35_3_fu_1478_p3 = ((tmp_34_3_fu_1473_p2[0:0] === 1'b1) ? C_11_q0 : tmp_30_3_reg_2020);

assign tmp_35_4_fu_1514_p3 = ((tmp_34_4_fu_1509_p2[0:0] === 1'b1) ? C_12_q0 : tmp_30_4_reg_2031);

assign tmp_35_5_fu_1550_p3 = ((tmp_34_5_fu_1545_p2[0:0] === 1'b1) ? C_13_q0 : tmp_30_5_reg_2042);

assign tmp_35_6_fu_1586_p3 = ((tmp_34_6_fu_1581_p2[0:0] === 1'b1) ? C_14_q0 : tmp_30_6_reg_2053);

assign tmp_35_7_fu_1622_p3 = ((tmp_34_7_fu_1617_p2[0:0] === 1'b1) ? C_15_q0 : tmp_30_7_reg_2064);

assign tmp_37_1_cast_fu_1433_p1 = tmp_37_1_fu_1425_p3;

assign tmp_37_1_fu_1425_p3 = ((tmp_108_fu_1417_p3[0:0] === 1'b1) ? 15'd0 : tmp_107_fu_1413_p1);

assign tmp_37_2_cast_fu_1469_p1 = tmp_37_2_fu_1461_p3;

assign tmp_37_2_fu_1461_p3 = ((tmp_110_fu_1453_p3[0:0] === 1'b1) ? 15'd0 : tmp_109_fu_1449_p1);

assign tmp_37_3_cast_fu_1505_p1 = tmp_37_3_fu_1497_p3;

assign tmp_37_3_fu_1497_p3 = ((tmp_112_fu_1489_p3[0:0] === 1'b1) ? 15'd0 : tmp_111_fu_1485_p1);

assign tmp_37_4_cast_fu_1541_p1 = tmp_37_4_fu_1533_p3;

assign tmp_37_4_fu_1533_p3 = ((tmp_114_fu_1525_p3[0:0] === 1'b1) ? 15'd0 : tmp_113_fu_1521_p1);

assign tmp_37_5_cast_fu_1577_p1 = tmp_37_5_fu_1569_p3;

assign tmp_37_5_fu_1569_p3 = ((tmp_116_fu_1561_p3[0:0] === 1'b1) ? 15'd0 : tmp_115_fu_1557_p1);

assign tmp_37_6_cast_fu_1613_p1 = tmp_37_6_fu_1605_p3;

assign tmp_37_6_fu_1605_p3 = ((tmp_118_fu_1597_p3[0:0] === 1'b1) ? 15'd0 : tmp_117_fu_1593_p1);

assign tmp_37_7_fu_1641_p3 = ((tmp_120_fu_1633_p3[0:0] === 1'b1) ? 15'd0 : tmp_119_fu_1629_p1);

assign tmp_43_fu_1309_p1 = column;

assign tmp_51_fu_1245_p1 = a_Data_0_data_out[15:0];

assign tmp_59_fu_1978_p1 = tmp_89_fu_1958_p9;

assign tmp_60_fu_1249_p2 = (($signed(a_1_Data_0) < $signed(tmp_51_fu_1245_p1)) ? 1'b1 : 1'b0);

assign tmp_68_fu_1669_p1 = tmp_90_fu_1649_p9;

assign tmp_70_fu_1264_p1 = column;

assign tmp_71_fu_1229_p1 = a_Data_0_data_out[15:0];

assign tmp_72_fu_1213_p1 = a_Data_0_data_out[15:0];

assign tmp_73_fu_1129_p1 = a_Data_0_data_out[15:0];

assign tmp_74_fu_1133_p2 = (($signed(a_0_Data_0) < $signed(tmp_73_fu_1129_p1)) ? 1'b1 : 1'b0);

assign tmp_75_fu_1139_p3 = ((tmp_74_fu_1133_p2[0:0] === 1'b1) ? tmp_73_fu_1129_p1 : a_0_Data_0);

assign tmp_76_fu_1153_p1 = column;

assign tmp_77_fu_1674_p2 = (($signed(tmp_75_reg_2075) < $signed(C_0_q0)) ? 1'b1 : 1'b0);

assign tmp_78_fu_1679_p3 = ((tmp_77_fu_1674_p2[0:0] === 1'b1) ? C_0_q0 : tmp_75_reg_2075);

assign tmp_79_fu_1686_p1 = tmp_78_fu_1679_p3[14:0];

assign tmp_80_fu_1690_p3 = tmp_78_fu_1679_p3[32'd15];

assign tmp_81_cast_fu_1706_p1 = tmp_81_fu_1698_p3;

assign tmp_81_fu_1698_p3 = ((tmp_80_fu_1690_p3[0:0] === 1'b1) ? 15'd0 : tmp_79_fu_1686_p1);

assign tmp_82_fu_1041_p2 = (($signed(a_1_Data_0) < $signed(tmp_104_fu_1037_p1)) ? 1'b1 : 1'b0);

assign tmp_83_fu_1047_p3 = ((tmp_82_fu_1041_p2[0:0] === 1'b1) ? tmp_104_fu_1037_p1 : a_1_Data_0);

assign tmp_84_fu_1061_p1 = column;

assign tmp_85_fu_1365_p2 = (($signed(tmp_83_reg_1987) < $signed(C_8_q0)) ? 1'b1 : 1'b0);

assign tmp_86_fu_1370_p3 = ((tmp_85_fu_1365_p2[0:0] === 1'b1) ? C_8_q0 : tmp_83_reg_1987);

assign tmp_87_fu_1722_p1 = tmp_23_1_fu_1715_p3[14:0];

assign tmp_88_cast_fu_1397_p1 = tmp_88_fu_1389_p3;

assign tmp_88_fu_1389_p3 = ((tmp_106_fu_1381_p3[0:0] === 1'b1) ? 15'd0 : tmp_105_fu_1377_p1);

assign tmp_89_fu_1958_p9 = {{{{{{{{tmp_25_7_fu_1950_p3}, {tmp_25_6_cast_fu_1922_p1}}, {tmp_25_5_cast_fu_1886_p1}}, {tmp_25_4_cast_fu_1850_p1}}, {tmp_25_3_cast_fu_1814_p1}}, {tmp_25_2_cast_fu_1778_p1}}, {tmp_25_1_cast_fu_1742_p1}}, {tmp_81_cast_fu_1706_p1}};

assign tmp_8_fu_1327_p1 = a_Data_0_data_out[15:0];

assign tmp_90_fu_1649_p9 = {{{{{{{{tmp_37_7_fu_1641_p3}, {tmp_37_6_cast_fu_1613_p1}}, {tmp_37_5_cast_fu_1577_p1}}, {tmp_37_4_cast_fu_1541_p1}}, {tmp_37_3_cast_fu_1505_p1}}, {tmp_37_2_cast_fu_1469_p1}}, {tmp_37_1_cast_fu_1433_p1}}, {tmp_88_cast_fu_1397_p1}};

assign tmp_91_fu_1726_p3 = tmp_23_1_fu_1715_p3[32'd15];

assign tmp_92_fu_1758_p1 = tmp_23_2_fu_1751_p3[14:0];

assign tmp_93_fu_1762_p3 = tmp_23_2_fu_1751_p3[32'd15];

assign tmp_94_fu_1794_p1 = tmp_23_3_fu_1787_p3[14:0];

assign tmp_95_fu_1798_p3 = tmp_23_3_fu_1787_p3[32'd15];

assign tmp_96_fu_1830_p1 = tmp_23_4_fu_1823_p3[14:0];

assign tmp_97_fu_1834_p3 = tmp_23_4_fu_1823_p3[32'd15];

assign tmp_98_fu_1866_p1 = tmp_23_5_fu_1859_p3[14:0];

assign tmp_99_fu_1870_p3 = tmp_23_5_fu_1859_p3[32'd15];

assign tmp_fu_1343_p1 = a_Data_0_data_out[15:0];

endmodule //Layer3_Pooling
