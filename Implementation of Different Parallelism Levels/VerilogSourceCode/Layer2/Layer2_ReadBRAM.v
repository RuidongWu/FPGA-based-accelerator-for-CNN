// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer2_ReadBRAM,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.339500,HLS_SYN_LAT=2184,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=381,HLS_SYN_LUT=1097,HLS_VERSION=2018_3}" *)

module Layer2_ReadBRAM (
        ap_clk,
        ap_rst_n,
        full_flag,
        full_flag_ap_vld,
        full_flag_ap_ack,
        f_Data_address0,
        f_Data_ce0,
        f_Data_q0,
        a_Data_TDATA,
        a_Data_TVALID,
        a_Data_TREADY
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_pp0_stage1 = 9'd4;
parameter    ap_ST_fsm_pp0_stage2 = 9'd8;
parameter    ap_ST_fsm_state7 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_pp1_stage1 = 9'd64;
parameter    ap_ST_fsm_pp1_stage2 = 9'd128;
parameter    ap_ST_fsm_state13 = 9'd256;

input   ap_clk;
input   ap_rst_n;
input   full_flag;
input   full_flag_ap_vld;
output   full_flag_ap_ack;
output  [8:0] f_Data_address0;
output   f_Data_ce0;
input  [63:0] f_Data_q0;
output  [63:0] a_Data_TDATA;
output   a_Data_TVALID;
input   a_Data_TREADY;

reg full_flag_ap_ack;
reg[8:0] f_Data_address0;
reg f_Data_ce0;

 reg    ap_rst_n_inv;
reg   [63:0] a_Data_1_data_out;
reg    a_Data_1_vld_in;
wire    a_Data_1_vld_out;
wire    a_Data_1_ack_in;
wire    a_Data_1_ack_out;
reg   [63:0] a_Data_1_payload_A;
reg   [63:0] a_Data_1_payload_B;
reg    a_Data_1_sel_rd;
reg    a_Data_1_sel_wr;
wire    a_Data_1_sel;
wire    a_Data_1_load_A;
wire    a_Data_1_load_B;
reg   [1:0] a_Data_1_state;
wire    a_Data_1_state_cmp_full;
reg    full_flag_blk_n;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state7;
reg    a_Data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten1_reg_704;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten1_reg_704_pp0_iter1_reg;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_flatten3_reg_777;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten3_reg_777_pp1_iter1_reg;
reg   [8:0] indvar_flatten1_reg_185;
reg   [5:0] indvar_flatten_reg_196;
reg   [1:0] k_reg_207;
reg   [8:0] indvar_flatten2_reg_218;
reg   [5:0] indvar_flatten3_reg_229;
reg   [1:0] k3_reg_240;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
wire    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state9_pp1_stage1_iter0;
reg    ap_block_state9_io;
wire    ap_block_state12_pp1_stage1_iter1;
reg    ap_block_state12_io;
reg    ap_block_pp1_stage1_11001;
wire    ap_block_state10_pp1_stage2_iter0;
reg    ap_block_state10_io;
reg    ap_block_pp1_stage2_11001;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
reg    ap_block_state11_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] exitcond_flatten1_fu_295_p2;
wire   [8:0] indvar_flatten_next1_fu_301_p2;
reg   [8:0] indvar_flatten_next1_reg_708;
wire   [1:0] k_mid2_fu_391_p3;
reg   [1:0] k_mid2_reg_713;
wire   [15:0] t_addr_fu_399_p5;
reg   [15:0] t_addr_reg_718;
wire   [5:0] indvar_flatten_next_fu_443_p3;
reg   [5:0] indvar_flatten_next_reg_728;
wire   [16:0] tmp_3_cast_fu_451_p1;
reg   [16:0] tmp_3_cast_reg_733;
wire   [1:0] k_1_fu_475_p2;
reg   [1:0] k_1_reg_748;
wire   [0:0] exitcond_flatten3_fu_495_p2;
wire   [8:0] indvar_flatten_next3_fu_501_p2;
reg   [8:0] indvar_flatten_next3_reg_781;
wire   [1:0] k3_mid2_fu_591_p3;
reg   [1:0] k3_mid2_reg_786;
wire   [15:0] t_addr_1_fu_599_p5;
reg   [15:0] t_addr_1_reg_791;
wire   [5:0] indvar_flatten_next2_fu_643_p3;
reg   [5:0] indvar_flatten_next2_reg_801;
wire   [16:0] tmp_14_cast_fu_651_p1;
reg   [16:0] tmp_14_cast_reg_806;
wire   [1:0] k_2_fu_675_p2;
reg   [1:0] k_2_reg_821;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage1_subdone;
reg   [8:0] ap_phi_mux_indvar_flatten1_phi_fu_189_p4;
reg   [5:0] ap_phi_mux_indvar_flatten_phi_fu_200_p4;
reg   [1:0] ap_phi_mux_k_phi_fu_211_p4;
reg   [8:0] ap_phi_mux_indvar_flatten2_phi_fu_222_p4;
reg   [5:0] ap_phi_mux_indvar_flatten3_phi_fu_233_p4;
reg   [1:0] ap_phi_mux_k3_phi_fu_244_p4;
wire   [63:0] tmp_s_fu_411_p1;
wire   [63:0] tmp_5_fu_460_p1;
wire   [63:0] tmp_9_fu_470_p1;
wire   [63:0] tmp_11_fu_611_p1;
wire   [63:0] tmp_13_fu_660_p1;
wire   [63:0] tmp_15_fu_670_p1;
reg   [15:0] s_addr_2_fu_94;
wire   [15:0] s_addr_0_9_mid_fu_358_p3;
wire   [15:0] s_addr_0_3_fu_416_p2;
reg   [15:0] s_addr_2_1_fu_98;
wire   [15:0] s_addr_1_8_mid_fu_343_p3;
reg   [15:0] s_addr_2_2_fu_102;
wire   [15:0] s_addr_2_8_mid_fu_328_p3;
reg   [15:0] s_addr_2_3_fu_106;
wire   [15:0] s_addr_0_10_mid_fu_558_p3;
wire   [15:0] s_addr_0_4_fu_616_p2;
reg   [15:0] s_addr_2_4_fu_110;
wire   [15:0] s_addr_1_6_mid_fu_543_p3;
reg   [15:0] s_addr_2_5_fu_114;
wire   [15:0] s_addr_2_6_mid_fu_528_p3;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp1_stage1_01001;
wire    ap_block_pp1_stage2_01001;
wire    ap_block_pp1_stage0_01001;
wire   [0:0] exitcond_flatten_fu_316_p2;
wire   [15:0] s_addr_26_fu_322_p2;
wire   [15:0] s_addr_1_fu_337_p2;
wire   [15:0] s_addr_0_fu_352_p2;
wire   [0:0] tmp_2_fu_373_p2;
wire   [0:0] not_exitcond_flatten_fu_367_p2;
wire   [0:0] tmp_8_mid_fu_379_p2;
wire   [0:0] tmp_1_fu_385_p2;
wire   [15:0] t_addr_fu_399_p1;
wire   [15:0] t_addr_fu_399_p2;
wire   [15:0] t_addr_fu_399_p3;
wire   [1:0] t_addr_fu_399_p4;
wire   [5:0] indvar_flatten_op_fu_437_p2;
wire   [16:0] tmp_4_fu_454_p2;
wire   [16:0] tmp_6_fu_465_p2;
wire   [0:0] exitcond_flatten2_fu_516_p2;
wire   [15:0] s_addr_2_s_fu_522_p2;
wire   [15:0] s_addr_1_s_fu_537_p2;
wire   [15:0] s_addr_0_s_fu_552_p2;
wire   [0:0] tmp_3_fu_573_p2;
wire   [0:0] not_exitcond_flatten_2_fu_567_p2;
wire   [0:0] tmp_12_mid_fu_579_p2;
wire   [0:0] tmp_8_fu_585_p2;
wire   [15:0] t_addr_1_fu_599_p1;
wire   [15:0] t_addr_1_fu_599_p2;
wire   [15:0] t_addr_1_fu_599_p3;
wire   [1:0] t_addr_1_fu_599_p4;
wire   [5:0] indvar_flatten32_op_fu_637_p2;
wire   [16:0] tmp_12_fu_654_p2;
wire   [16:0] tmp_14_fu_665_p2;
reg   [8:0] ap_NS_fsm;
wire    ap_CS_fsm_state13;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 a_Data_1_sel_rd = 1'b0;
#0 a_Data_1_sel_wr = 1'b0;
#0 a_Data_1_state = 2'd0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

Layer2_ReadBRAM_mbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
Layer2_ReadBRAM_mbkb_U1(
    .din0(t_addr_fu_399_p1),
    .din1(t_addr_fu_399_p2),
    .din2(t_addr_fu_399_p3),
    .din3(t_addr_fu_399_p4),
    .dout(t_addr_fu_399_p5)
);

Layer2_ReadBRAM_mbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
Layer2_ReadBRAM_mbkb_U2(
    .din0(t_addr_1_fu_599_p1),
    .din1(t_addr_1_fu_599_p2),
    .din2(t_addr_1_fu_599_p3),
    .din3(t_addr_1_fu_599_p4),
    .dout(t_addr_1_fu_599_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_1_ack_out) & (1'b1 == a_Data_1_vld_out))) begin
            a_Data_1_sel_rd <= ~a_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_1_ack_in) & (1'b1 == a_Data_1_vld_in))) begin
            a_Data_1_sel_wr <= ~a_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == a_Data_1_state) & (1'b0 == a_Data_1_vld_in)) | ((2'd3 == a_Data_1_state) & (1'b0 == a_Data_1_vld_in) & (1'b1 == a_Data_1_ack_out)))) begin
            a_Data_1_state <= 2'd2;
        end else if ((((2'd1 == a_Data_1_state) & (1'b0 == a_Data_1_ack_out)) | ((2'd3 == a_Data_1_state) & (1'b0 == a_Data_1_ack_out) & (1'b1 == a_Data_1_vld_in)))) begin
            a_Data_1_state <= 2'd1;
        end else if (((~((1'b0 == a_Data_1_vld_in) & (1'b1 == a_Data_1_ack_out)) & ~((1'b0 == a_Data_1_ack_out) & (1'b1 == a_Data_1_vld_in)) & (2'd3 == a_Data_1_state)) | ((2'd1 == a_Data_1_state) & (1'b1 == a_Data_1_ack_out)) | ((2'd2 == a_Data_1_state) & (1'b1 == a_Data_1_vld_in)))) begin
            a_Data_1_state <= 2'd3;
        end else begin
            a_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten1_reg_185 <= indvar_flatten_next1_reg_708;
    end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
        indvar_flatten1_reg_185 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten2_reg_218 <= indvar_flatten_next3_reg_781;
    end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
        indvar_flatten2_reg_218 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten3_reg_229 <= indvar_flatten_next2_reg_801;
    end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
        indvar_flatten3_reg_229 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_196 <= indvar_flatten_next_reg_728;
    end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
        indvar_flatten_reg_196 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        k3_reg_240 <= k_2_reg_821;
    end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
        k3_reg_240 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_reg_207 <= k_1_reg_748;
    end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
        k_reg_207 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~(k_mid2_fu_391_p3 == 2'd0) & ~(k_mid2_fu_391_p3 == 2'd1) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((k_mid2_fu_391_p3 == 2'd0) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        s_addr_2_1_fu_98 <= s_addr_1_8_mid_fu_343_p3;
    end else if (((k_mid2_fu_391_p3 == 2'd1) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        s_addr_2_1_fu_98 <= s_addr_0_3_fu_416_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
        s_addr_2_1_fu_98 <= 16'd13;
    end
end

always @ (posedge ap_clk) begin
    if ((~(k_mid2_fu_391_p3 == 2'd0) & ~(k_mid2_fu_391_p3 == 2'd1) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        s_addr_2_2_fu_102 <= s_addr_0_3_fu_416_p2;
    end else if ((((k_mid2_fu_391_p3 == 2'd0) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((k_mid2_fu_391_p3 == 2'd1) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        s_addr_2_2_fu_102 <= s_addr_2_8_mid_fu_328_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
        s_addr_2_2_fu_102 <= 16'd26;
    end
end

always @ (posedge ap_clk) begin
    if (((k3_mid2_fu_591_p3 == 2'd0) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        s_addr_2_3_fu_106 <= s_addr_0_4_fu_616_p2;
    end else if (((~(k3_mid2_fu_591_p3 == 2'd0) & ~(k3_mid2_fu_591_p3 == 2'd1) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((k3_mid2_fu_591_p3 == 2'd1) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        s_addr_2_3_fu_106 <= s_addr_0_10_mid_fu_558_p3;
    end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
        s_addr_2_3_fu_106 <= 16'd169;
    end
end

always @ (posedge ap_clk) begin
    if (((~(k3_mid2_fu_591_p3 == 2'd0) & ~(k3_mid2_fu_591_p3 == 2'd1) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((k3_mid2_fu_591_p3 == 2'd0) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        s_addr_2_4_fu_110 <= s_addr_1_6_mid_fu_543_p3;
    end else if (((k3_mid2_fu_591_p3 == 2'd1) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        s_addr_2_4_fu_110 <= s_addr_0_4_fu_616_p2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
        s_addr_2_4_fu_110 <= 16'd182;
    end
end

always @ (posedge ap_clk) begin
    if ((~(k3_mid2_fu_591_p3 == 2'd0) & ~(k3_mid2_fu_591_p3 == 2'd1) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        s_addr_2_5_fu_114 <= s_addr_0_4_fu_616_p2;
    end else if ((((k3_mid2_fu_591_p3 == 2'd0) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((k3_mid2_fu_591_p3 == 2'd1) & (exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        s_addr_2_5_fu_114 <= s_addr_2_6_mid_fu_528_p3;
    end else if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
        s_addr_2_5_fu_114 <= 16'd195;
    end
end

always @ (posedge ap_clk) begin
    if (((k_mid2_fu_391_p3 == 2'd0) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        s_addr_2_fu_94 <= s_addr_0_3_fu_416_p2;
    end else if (((~(k_mid2_fu_391_p3 == 2'd0) & ~(k_mid2_fu_391_p3 == 2'd1) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((k_mid2_fu_391_p3 == 2'd1) & (exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        s_addr_2_fu_94 <= s_addr_0_9_mid_fu_358_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
        s_addr_2_fu_94 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_1_load_A)) begin
        a_Data_1_payload_A <= f_Data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_1_load_B)) begin
        a_Data_1_payload_B <= f_Data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten1_reg_704 <= exitcond_flatten1_fu_295_p2;
        exitcond_flatten1_reg_704_pp0_iter1_reg <= exitcond_flatten1_reg_704;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten3_reg_777 <= exitcond_flatten3_fu_495_p2;
        exitcond_flatten3_reg_777_pp1_iter1_reg <= exitcond_flatten3_reg_777;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next1_reg_708 <= indvar_flatten_next1_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_next2_reg_801 <= indvar_flatten_next2_fu_643_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_next3_reg_781 <= indvar_flatten_next3_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_728 <= indvar_flatten_next_fu_443_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_495_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        k3_mid2_reg_786 <= k3_mid2_fu_591_p3;
        t_addr_1_reg_791 <= t_addr_1_fu_599_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        k_1_reg_748 <= k_1_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        k_2_reg_821 <= k_2_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_295_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_mid2_reg_713 <= k_mid2_fu_391_p3;
        t_addr_reg_718 <= t_addr_fu_399_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp_14_cast_reg_806[15 : 0] <= tmp_14_cast_fu_651_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_3_cast_reg_733[15 : 0] <= tmp_3_cast_fu_451_p1[15 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == a_Data_1_sel)) begin
        a_Data_1_data_out = a_Data_1_payload_B;
    end else begin
        a_Data_1_data_out = a_Data_1_payload_A;
    end
end

always @ (*) begin
    if ((((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_Data_1_vld_in = 1'b1;
    end else begin
        a_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten3_reg_777 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((exitcond_flatten3_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2)) | ((exitcond_flatten3_reg_777_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)) | ((exitcond_flatten3_reg_777 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)) | ((exitcond_flatten1_reg_704 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((exitcond_flatten1_reg_704 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((exitcond_flatten1_reg_704_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((exitcond_flatten1_reg_704 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        a_Data_TDATA_blk_n = a_Data_1_state[1'd1];
    end else begin
        a_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_295_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten3_fu_495_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_189_p4 = indvar_flatten_next1_reg_708;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_189_p4 = indvar_flatten1_reg_185;
    end
end

always @ (*) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten2_phi_fu_222_p4 = indvar_flatten_next3_reg_781;
    end else begin
        ap_phi_mux_indvar_flatten2_phi_fu_222_p4 = indvar_flatten2_reg_218;
    end
end

always @ (*) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten3_phi_fu_233_p4 = indvar_flatten_next2_reg_801;
    end else begin
        ap_phi_mux_indvar_flatten3_phi_fu_233_p4 = indvar_flatten3_reg_229;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_200_p4 = indvar_flatten_next_reg_728;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_200_p4 = indvar_flatten_reg_196;
    end
end

always @ (*) begin
    if (((exitcond_flatten3_reg_777 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_k3_phi_fu_244_p4 = k_2_reg_821;
    end else begin
        ap_phi_mux_k3_phi_fu_244_p4 = k3_reg_240;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_704 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_k_phi_fu_211_p4 = k_1_reg_748;
    end else begin
        ap_phi_mux_k_phi_fu_211_p4 = k_reg_207;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2))) begin
        f_Data_address0 = tmp_15_fu_670_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        f_Data_address0 = tmp_13_fu_660_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        f_Data_address0 = tmp_11_fu_611_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        f_Data_address0 = tmp_9_fu_470_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        f_Data_address0 = tmp_5_fu_460_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        f_Data_address0 = tmp_s_fu_411_p1;
    end else begin
        f_Data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        f_Data_ce0 = 1'b1;
    end else begin
        f_Data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1)))) begin
        full_flag_ap_ack = 1'b1;
    end else begin
        full_flag_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state7))) begin
        full_flag_blk_n = full_flag_ap_vld;
    end else begin
        full_flag_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (full_flag_ap_vld == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten1_fu_295_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((exitcond_flatten1_fu_295_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (full_flag_ap_vld == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond_flatten3_fu_495_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((exitcond_flatten3_fu_495_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == a_Data_1_ack_in) & (a_Data_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Data_1_ack_in = a_Data_1_state[1'd1];

assign a_Data_1_ack_out = a_Data_TREADY;

assign a_Data_1_load_A = (~a_Data_1_sel_wr & a_Data_1_state_cmp_full);

assign a_Data_1_load_B = (a_Data_1_state_cmp_full & a_Data_1_sel_wr);

assign a_Data_1_sel = a_Data_1_sel_rd;

assign a_Data_1_state_cmp_full = ((a_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign a_Data_1_vld_out = a_Data_1_state[1'd0];

assign a_Data_TDATA = a_Data_1_data_out;

assign a_Data_TVALID = a_Data_1_state[1'd0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_io = ((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state10_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((exitcond_flatten3_reg_777_pp1_iter1_reg == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state12_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((exitcond_flatten1_reg_704 == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((exitcond_flatten1_reg_704_pp0_iter1_reg == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((exitcond_flatten3_reg_777 == 1'd0) & (1'b0 == a_Data_1_ack_in));
end

assign ap_block_state9_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond_flatten1_fu_295_p2 = ((ap_phi_mux_indvar_flatten1_phi_fu_189_p4 == 9'd363) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_516_p2 = ((ap_phi_mux_indvar_flatten3_phi_fu_233_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_495_p2 = ((ap_phi_mux_indvar_flatten2_phi_fu_222_p4 == 9'd363) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_316_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_200_p4 == 6'd33) ? 1'b1 : 1'b0);

assign indvar_flatten32_op_fu_637_p2 = (ap_phi_mux_indvar_flatten3_phi_fu_233_p4 + 6'd1);

assign indvar_flatten_next1_fu_301_p2 = (ap_phi_mux_indvar_flatten1_phi_fu_189_p4 + 9'd1);

assign indvar_flatten_next2_fu_643_p3 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten32_op_fu_637_p2);

assign indvar_flatten_next3_fu_501_p2 = (ap_phi_mux_indvar_flatten2_phi_fu_222_p4 + 9'd1);

assign indvar_flatten_next_fu_443_p3 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_437_p2);

assign indvar_flatten_op_fu_437_p2 = (ap_phi_mux_indvar_flatten_phi_fu_200_p4 + 6'd1);

assign k3_mid2_fu_591_p3 = ((tmp_8_fu_585_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_k3_phi_fu_244_p4);

assign k_1_fu_475_p2 = (k_mid2_reg_713 + 2'd1);

assign k_2_fu_675_p2 = (k3_mid2_reg_786 + 2'd1);

assign k_mid2_fu_391_p3 = ((tmp_1_fu_385_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_k_phi_fu_211_p4);

assign not_exitcond_flatten_2_fu_567_p2 = (exitcond_flatten2_fu_516_p2 ^ 1'd1);

assign not_exitcond_flatten_fu_367_p2 = (exitcond_flatten_fu_316_p2 ^ 1'd1);

assign s_addr_0_10_mid_fu_558_p3 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? s_addr_0_s_fu_552_p2 : s_addr_2_3_fu_106);

assign s_addr_0_3_fu_416_p2 = (t_addr_fu_399_p5 + 16'd1);

assign s_addr_0_4_fu_616_p2 = (t_addr_1_fu_599_p5 + 16'd1);

assign s_addr_0_9_mid_fu_358_p3 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? s_addr_0_fu_352_p2 : s_addr_2_fu_94);

assign s_addr_0_fu_352_p2 = (s_addr_2_fu_94 + 16'd2);

assign s_addr_0_s_fu_552_p2 = (s_addr_2_3_fu_106 + 16'd2);

assign s_addr_1_6_mid_fu_543_p3 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? s_addr_1_s_fu_537_p2 : s_addr_2_4_fu_110);

assign s_addr_1_8_mid_fu_343_p3 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? s_addr_1_fu_337_p2 : s_addr_2_1_fu_98);

assign s_addr_1_fu_337_p2 = (s_addr_2_1_fu_98 + 16'd2);

assign s_addr_1_s_fu_537_p2 = (s_addr_2_4_fu_110 + 16'd2);

assign s_addr_26_fu_322_p2 = (s_addr_2_2_fu_102 + 16'd2);

assign s_addr_2_6_mid_fu_528_p3 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? s_addr_2_s_fu_522_p2 : s_addr_2_5_fu_114);

assign s_addr_2_8_mid_fu_328_p3 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? s_addr_26_fu_322_p2 : s_addr_2_2_fu_102);

assign s_addr_2_s_fu_522_p2 = (s_addr_2_5_fu_114 + 16'd2);

assign t_addr_1_fu_599_p1 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? s_addr_0_s_fu_552_p2 : s_addr_2_3_fu_106);

assign t_addr_1_fu_599_p2 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? s_addr_1_s_fu_537_p2 : s_addr_2_4_fu_110);

assign t_addr_1_fu_599_p3 = ((exitcond_flatten2_fu_516_p2[0:0] === 1'b1) ? s_addr_2_s_fu_522_p2 : s_addr_2_5_fu_114);

assign t_addr_1_fu_599_p4 = ((tmp_8_fu_585_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_k3_phi_fu_244_p4);

assign t_addr_fu_399_p1 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? s_addr_0_fu_352_p2 : s_addr_2_fu_94);

assign t_addr_fu_399_p2 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? s_addr_1_fu_337_p2 : s_addr_2_1_fu_98);

assign t_addr_fu_399_p3 = ((exitcond_flatten_fu_316_p2[0:0] === 1'b1) ? s_addr_26_fu_322_p2 : s_addr_2_2_fu_102);

assign t_addr_fu_399_p4 = ((tmp_1_fu_385_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_k_phi_fu_211_p4);

assign tmp_11_fu_611_p1 = t_addr_1_fu_599_p5;

assign tmp_12_fu_654_p2 = (tmp_14_cast_fu_651_p1 + 17'd1);

assign tmp_12_mid_fu_579_p2 = (tmp_3_fu_573_p2 & not_exitcond_flatten_2_fu_567_p2);

assign tmp_13_fu_660_p1 = tmp_12_fu_654_p2;

assign tmp_14_cast_fu_651_p1 = t_addr_1_reg_791;

assign tmp_14_fu_665_p2 = (tmp_14_cast_reg_806 + 17'd2);

assign tmp_15_fu_670_p1 = tmp_14_fu_665_p2;

assign tmp_1_fu_385_p2 = (tmp_8_mid_fu_379_p2 | exitcond_flatten_fu_316_p2);

assign tmp_2_fu_373_p2 = ((ap_phi_mux_k_phi_fu_211_p4 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_3_cast_fu_451_p1 = t_addr_reg_718;

assign tmp_3_fu_573_p2 = ((ap_phi_mux_k3_phi_fu_244_p4 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_4_fu_454_p2 = (tmp_3_cast_fu_451_p1 + 17'd1);

assign tmp_5_fu_460_p1 = tmp_4_fu_454_p2;

assign tmp_6_fu_465_p2 = (tmp_3_cast_reg_733 + 17'd2);

assign tmp_8_fu_585_p2 = (tmp_12_mid_fu_579_p2 | exitcond_flatten2_fu_516_p2);

assign tmp_8_mid_fu_379_p2 = (tmp_2_fu_373_p2 & not_exitcond_flatten_fu_367_p2);

assign tmp_9_fu_470_p1 = tmp_6_fu_465_p2;

assign tmp_s_fu_411_p1 = t_addr_fu_399_p5;

always @ (posedge ap_clk) begin
    tmp_3_cast_reg_733[16] <= 1'b0;
    tmp_14_cast_reg_806[16] <= 1'b0;
end

endmodule //Layer2_ReadBRAM
