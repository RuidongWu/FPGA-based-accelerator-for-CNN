// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer2_Kernel,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.593500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2443,HLS_SYN_LUT=1124,HLS_VERSION=2018_3}" *)

module Layer2_Kernel (
        ap_clk,
        ap_rst_n,
        weight_TDATA,
        weight_TVALID,
        weight_TREADY,
        b_Data_TDATA,
        b_Data_TVALID,
        b_Data_TREADY,
        Bias_Data
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state16 = 14'd8192;

input   ap_clk;
input   ap_rst_n;
input  [15:0] weight_TDATA;
input   weight_TVALID;
output   weight_TREADY;
output  [511:0] b_Data_TDATA;
output   b_Data_TVALID;
input   b_Data_TREADY;
output  [127:0] Bias_Data;

 reg    ap_rst_n_inv;
reg   [15:0] weight_0_data_out;
wire    weight_0_vld_in;
wire    weight_0_vld_out;
wire    weight_0_ack_in;
reg    weight_0_ack_out;
reg   [15:0] weight_0_payload_A;
reg   [15:0] weight_0_payload_B;
reg    weight_0_sel_rd;
reg    weight_0_sel_wr;
wire    weight_0_sel;
wire    weight_0_load_A;
wire    weight_0_load_B;
reg   [1:0] weight_0_state;
wire    weight_0_state_cmp_full;
reg   [511:0] b_Data_1_data_out;
reg    b_Data_1_vld_in;
wire    b_Data_1_vld_out;
wire    b_Data_1_ack_in;
wire    b_Data_1_ack_out;
reg   [511:0] b_Data_1_payload_A;
reg   [511:0] b_Data_1_payload_B;
reg    b_Data_1_sel_rd;
reg    b_Data_1_sel_wr;
wire    b_Data_1_sel;
wire    b_Data_1_load_A;
wire    b_Data_1_load_B;
reg   [1:0] b_Data_1_state;
wire    b_Data_1_state_cmp_full;
reg   [127:0] Bias_Data_1_data_reg;
reg    Bias_Data_1_vld_reg;
reg    Bias_Data_1_vld_in;
reg   [3:0] kernel_0_0_address0;
reg    kernel_0_0_ce0;
reg    kernel_0_0_we0;
wire   [15:0] kernel_0_0_q0;
reg   [3:0] kernel_1_0_address0;
reg    kernel_1_0_ce0;
reg    kernel_1_0_we0;
wire   [15:0] kernel_1_0_q0;
reg   [3:0] kernel_2_0_address0;
reg    kernel_2_0_ce0;
reg    kernel_2_0_we0;
wire   [15:0] kernel_2_0_q0;
reg   [3:0] kernel_3_0_address0;
reg    kernel_3_0_ce0;
reg    kernel_3_0_we0;
wire   [15:0] kernel_3_0_q0;
reg   [3:0] kernel_0_1_address0;
reg    kernel_0_1_ce0;
reg    kernel_0_1_we0;
wire   [15:0] kernel_0_1_q0;
reg   [3:0] kernel_1_1_address0;
reg    kernel_1_1_ce0;
reg    kernel_1_1_we0;
wire   [15:0] kernel_1_1_q0;
reg   [3:0] kernel_2_1_address0;
reg    kernel_2_1_ce0;
reg    kernel_2_1_we0;
wire   [15:0] kernel_2_1_q0;
reg   [3:0] kernel_3_1_address0;
reg    kernel_3_1_ce0;
reg    kernel_3_1_we0;
wire   [15:0] kernel_3_1_q0;
reg   [3:0] kernel_0_2_address0;
reg    kernel_0_2_ce0;
reg    kernel_0_2_we0;
wire   [15:0] kernel_0_2_q0;
reg   [3:0] kernel_1_2_address0;
reg    kernel_1_2_ce0;
reg    kernel_1_2_we0;
wire   [15:0] kernel_1_2_q0;
reg   [3:0] kernel_2_2_address0;
reg    kernel_2_2_ce0;
reg    kernel_2_2_we0;
wire   [15:0] kernel_2_2_q0;
reg   [3:0] kernel_3_2_address0;
reg    kernel_3_2_ce0;
reg    kernel_3_2_we0;
wire   [15:0] kernel_3_2_q0;
reg   [3:0] kernel_0_3_address0;
reg    kernel_0_3_ce0;
reg    kernel_0_3_we0;
wire   [15:0] kernel_0_3_q0;
reg   [3:0] kernel_1_3_address0;
reg    kernel_1_3_ce0;
reg    kernel_1_3_we0;
wire   [15:0] kernel_1_3_q0;
reg   [3:0] kernel_2_3_address0;
reg    kernel_2_3_ce0;
reg    kernel_2_3_we0;
wire   [15:0] kernel_2_3_q0;
reg   [3:0] kernel_3_3_address0;
reg    kernel_3_3_ce0;
reg    kernel_3_3_we0;
wire   [15:0] kernel_3_3_q0;
reg   [3:0] kernel_0_4_address0;
reg    kernel_0_4_ce0;
reg    kernel_0_4_we0;
wire   [15:0] kernel_0_4_q0;
reg   [3:0] kernel_1_4_address0;
reg    kernel_1_4_ce0;
reg    kernel_1_4_we0;
wire   [15:0] kernel_1_4_q0;
reg   [3:0] kernel_2_4_address0;
reg    kernel_2_4_ce0;
reg    kernel_2_4_we0;
wire   [15:0] kernel_2_4_q0;
reg   [3:0] kernel_3_4_address0;
reg    kernel_3_4_ce0;
reg    kernel_3_4_we0;
wire   [15:0] kernel_3_4_q0;
reg   [3:0] kernel_0_5_address0;
reg    kernel_0_5_ce0;
reg    kernel_0_5_we0;
wire   [15:0] kernel_0_5_q0;
reg   [3:0] kernel_1_5_address0;
reg    kernel_1_5_ce0;
reg    kernel_1_5_we0;
wire   [15:0] kernel_1_5_q0;
reg   [3:0] kernel_2_5_address0;
reg    kernel_2_5_ce0;
reg    kernel_2_5_we0;
wire   [15:0] kernel_2_5_q0;
reg   [3:0] kernel_3_5_address0;
reg    kernel_3_5_ce0;
reg    kernel_3_5_we0;
wire   [15:0] kernel_3_5_q0;
reg   [3:0] kernel_0_6_address0;
reg    kernel_0_6_ce0;
reg    kernel_0_6_we0;
wire   [15:0] kernel_0_6_q0;
reg   [3:0] kernel_1_6_address0;
reg    kernel_1_6_ce0;
reg    kernel_1_6_we0;
wire   [15:0] kernel_1_6_q0;
reg   [3:0] kernel_2_6_address0;
reg    kernel_2_6_ce0;
reg    kernel_2_6_we0;
wire   [15:0] kernel_2_6_q0;
reg   [3:0] kernel_3_6_address0;
reg    kernel_3_6_ce0;
reg    kernel_3_6_we0;
wire   [15:0] kernel_3_6_q0;
reg   [3:0] kernel_0_7_address0;
reg    kernel_0_7_ce0;
reg    kernel_0_7_we0;
wire   [15:0] kernel_0_7_q0;
reg   [3:0] kernel_1_7_address0;
reg    kernel_1_7_ce0;
reg    kernel_1_7_we0;
wire   [15:0] kernel_1_7_q0;
reg   [3:0] kernel_2_7_address0;
reg    kernel_2_7_ce0;
reg    kernel_2_7_we0;
wire   [15:0] kernel_2_7_q0;
reg   [3:0] kernel_3_7_address0;
reg    kernel_3_7_ce0;
reg    kernel_3_7_we0;
wire   [15:0] kernel_3_7_q0;
reg    weight_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_flatten1_fu_965_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    b_Data_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond4_reg_1375;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] exitcond4_reg_1375_pp1_iter1_reg;
reg   [3:0] i2_reg_949;
wire   [8:0] indvar_flatten_next1_fu_971_p2;
reg    ap_block_state2;
wire   [3:0] tmp_mid2_v_fu_997_p3;
wire   [2:0] m_mid2_fu_1103_p3;
wire   [3:0] n_fu_1115_p2;
wire   [6:0] indvar_flatten_next_fu_1127_p3;
reg   [15:0] weight_read_reg_1326;
reg   [15:0] weight_read_1_reg_1331;
reg   [15:0] weight_read_2_reg_1336;
reg   [15:0] weight_read_3_reg_1341;
reg   [15:0] weight_read_4_reg_1346;
reg   [15:0] weight_read_5_reg_1351;
reg   [15:0] weight_read_6_reg_1356;
wire   [127:0] tmp_1_fu_1135_p9;
reg   [31:0] iter_load_reg_1366;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond6_fu_1152_p2;
reg   [0:0] exitcond6_reg_1371;
wire   [0:0] exitcond4_fu_1158_p2;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state14_pp1_stage0_iter1;
reg    ap_block_state14_io;
wire    ap_block_state15_pp1_stage0_iter2;
reg    ap_block_state15_io;
reg    ap_block_pp1_stage0_11001;
wire   [3:0] i_1_fu_1164_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [511:0] tmp_6_fu_1206_p33;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
reg   [8:0] indvar_flatten1_reg_894;
wire    ap_CS_fsm_state1;
reg   [3:0] i_reg_905;
reg   [6:0] indvar_flatten_reg_916;
reg   [2:0] m_reg_927;
reg   [3:0] n2_reg_938;
wire   [63:0] tmp_mid2_fu_1005_p1;
wire   [1:0] m_t_mid2_fu_1095_p3;
wire   [2:0] tmp_4_fu_1111_p1;
wire   [63:0] p_23_rec_cast_fu_1170_p1;
reg   [31:0] iter_fu_166;
wire   [31:0] iter_1_fu_1275_p2;
wire    ap_CS_fsm_state16;
wire    ap_block_pp1_stage0_01001;
wire   [0:0] exitcond_flatten_fu_977_p2;
wire   [3:0] i_s_fu_991_p2;
wire   [1:0] tmp_2_fu_1041_p1;
wire   [0:0] exitcond_fu_1059_p2;
wire   [0:0] not_exitcond_flatten_fu_1053_p2;
wire   [2:0] m_mid_fu_983_p3;
wire   [0:0] exitcond7_mid_fu_1065_p2;
wire   [0:0] tmp_fu_1077_p2;
wire   [2:0] m_1_fu_1071_p2;
wire   [1:0] tmp_3_fu_1091_p1;
wire   [1:0] m_t_mid_fu_1045_p3;
wire   [3:0] n2_mid2_fu_1083_p3;
wire   [6:0] indvar_flatten_op_fu_1121_p2;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 weight_0_sel_rd = 1'b0;
#0 weight_0_sel_wr = 1'b0;
#0 weight_0_state = 2'd0;
#0 b_Data_1_sel_rd = 1'b0;
#0 b_Data_1_sel_wr = 1'b0;
#0 b_Data_1_state = 2'd0;
#0 Bias_Data_1_data_reg = 128'd0;
#0 Bias_Data_1_vld_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_0_address0),
    .ce0(kernel_0_0_ce0),
    .we0(kernel_0_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_0_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_0_address0),
    .ce0(kernel_1_0_ce0),
    .we0(kernel_1_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_0_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_0_address0),
    .ce0(kernel_2_0_ce0),
    .we0(kernel_2_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_0_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_0_address0),
    .ce0(kernel_3_0_ce0),
    .we0(kernel_3_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_0_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_1_address0),
    .ce0(kernel_0_1_ce0),
    .we0(kernel_0_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_1_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_1_address0),
    .ce0(kernel_1_1_ce0),
    .we0(kernel_1_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_1_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_1_address0),
    .ce0(kernel_2_1_ce0),
    .we0(kernel_2_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_1_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_1_address0),
    .ce0(kernel_3_1_ce0),
    .we0(kernel_3_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_1_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_2_address0),
    .ce0(kernel_0_2_ce0),
    .we0(kernel_0_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_2_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_2_address0),
    .ce0(kernel_1_2_ce0),
    .we0(kernel_1_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_2_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_2_address0),
    .ce0(kernel_2_2_ce0),
    .we0(kernel_2_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_2_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_2_address0),
    .ce0(kernel_3_2_ce0),
    .we0(kernel_3_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_2_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_3_address0),
    .ce0(kernel_0_3_ce0),
    .we0(kernel_0_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_3_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_3_address0),
    .ce0(kernel_1_3_ce0),
    .we0(kernel_1_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_3_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_3_address0),
    .ce0(kernel_2_3_ce0),
    .we0(kernel_2_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_3_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_3_address0),
    .ce0(kernel_3_3_ce0),
    .we0(kernel_3_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_3_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_4_address0),
    .ce0(kernel_0_4_ce0),
    .we0(kernel_0_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_4_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_4_address0),
    .ce0(kernel_1_4_ce0),
    .we0(kernel_1_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_4_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_4_address0),
    .ce0(kernel_2_4_ce0),
    .we0(kernel_2_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_4_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_4_address0),
    .ce0(kernel_3_4_ce0),
    .we0(kernel_3_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_4_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_5_address0),
    .ce0(kernel_0_5_ce0),
    .we0(kernel_0_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_5_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_5_address0),
    .ce0(kernel_1_5_ce0),
    .we0(kernel_1_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_5_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_5_address0),
    .ce0(kernel_2_5_ce0),
    .we0(kernel_2_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_5_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_5_address0),
    .ce0(kernel_3_5_ce0),
    .we0(kernel_3_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_5_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_6_address0),
    .ce0(kernel_0_6_ce0),
    .we0(kernel_0_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_6_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_6_address0),
    .ce0(kernel_1_6_ce0),
    .we0(kernel_1_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_6_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_6_address0),
    .ce0(kernel_2_6_ce0),
    .we0(kernel_2_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_6_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_6_address0),
    .ce0(kernel_3_6_ce0),
    .we0(kernel_3_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_6_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_7_address0),
    .ce0(kernel_0_7_ce0),
    .we0(kernel_0_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_7_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_7_address0),
    .ce0(kernel_1_7_ce0),
    .we0(kernel_1_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_7_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_7_address0),
    .ce0(kernel_2_7_ce0),
    .we0(kernel_2_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_7_q0)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_7_address0),
    .ce0(kernel_3_7_ce0),
    .we0(kernel_3_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_7_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((exitcond6_fu_1152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state13)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((exitcond6_fu_1152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((b_Data_1_ack_out == 1'b1) & (b_Data_1_vld_out == 1'b1))) begin
            b_Data_1_sel_rd <= ~b_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((b_Data_1_ack_in == 1'b1) & (b_Data_1_vld_in == 1'b1))) begin
            b_Data_1_sel_wr <= ~b_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_Data_1_state <= 2'd0;
    end else begin
        if ((((b_Data_1_state == 2'd2) & (b_Data_1_vld_in == 1'b0)) | ((b_Data_1_state == 2'd3) & (b_Data_1_vld_in == 1'b0) & (b_Data_1_ack_out == 1'b1)))) begin
            b_Data_1_state <= 2'd2;
        end else if ((((b_Data_1_state == 2'd1) & (b_Data_1_ack_out == 1'b0)) | ((b_Data_1_state == 2'd3) & (b_Data_1_ack_out == 1'b0) & (b_Data_1_vld_in == 1'b1)))) begin
            b_Data_1_state <= 2'd1;
        end else if (((~((b_Data_1_vld_in == 1'b0) & (b_Data_1_ack_out == 1'b1)) & ~((b_Data_1_ack_out == 1'b0) & (b_Data_1_vld_in == 1'b1)) & (b_Data_1_state == 2'd3)) | ((b_Data_1_state == 2'd1) & (b_Data_1_ack_out == 1'b1)) | ((b_Data_1_state == 2'd2) & (b_Data_1_vld_in == 1'b1)))) begin
            b_Data_1_state <= 2'd3;
        end else begin
            b_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_0_sel_rd <= 1'b0;
    end else begin
        if (((weight_0_ack_out == 1'b1) & (weight_0_vld_out == 1'b1))) begin
            weight_0_sel_rd <= ~weight_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_0_sel_wr <= 1'b0;
    end else begin
        if (((weight_0_ack_in == 1'b1) & (weight_0_vld_in == 1'b1))) begin
            weight_0_sel_wr <= ~weight_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_0_state <= 2'd0;
    end else begin
        if ((((weight_0_state == 2'd2) & (weight_0_vld_in == 1'b0)) | ((weight_0_state == 2'd3) & (weight_0_vld_in == 1'b0) & (weight_0_ack_out == 1'b1)))) begin
            weight_0_state <= 2'd2;
        end else if ((((weight_0_state == 2'd1) & (weight_0_ack_out == 1'b0)) | ((weight_0_state == 2'd3) & (weight_0_ack_out == 1'b0) & (weight_0_vld_in == 1'b1)))) begin
            weight_0_state <= 2'd1;
        end else if (((~((weight_0_vld_in == 1'b0) & (weight_0_ack_out == 1'b1)) & ~((weight_0_ack_out == 1'b0) & (weight_0_vld_in == 1'b1)) & (weight_0_state == 2'd3)) | ((weight_0_state == 2'd1) & (weight_0_ack_out == 1'b1)) | ((weight_0_state == 2'd2) & (weight_0_vld_in == 1'b1)))) begin
            weight_0_state <= 2'd3;
        end else begin
            weight_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_1152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i2_reg_949 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond4_fu_1158_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_reg_949 <= i_1_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_905 <= tmp_mid2_v_fu_997_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_905 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten1_reg_894 <= indvar_flatten_next1_fu_971_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten1_reg_894 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_916 <= indvar_flatten_next_fu_1127_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_916 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_reg_1371 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        iter_fu_166 <= iter_1_fu_1275_p2;
    end else if ((((exitcond6_fu_1152_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        iter_fu_166 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_reg_927 <= m_mid2_fu_1103_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        m_reg_927 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        n2_reg_938 <= n_fu_1115_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        n2_reg_938 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == Bias_Data_1_vld_reg) & (1'b1 == Bias_Data_1_vld_in)) | ((1'b1 == 1'b1) & (1'b1 == Bias_Data_1_vld_in) & (1'b1 == Bias_Data_1_vld_reg)))) begin
        Bias_Data_1_data_reg <= tmp_1_fu_1135_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((b_Data_1_load_A == 1'b1)) begin
        b_Data_1_payload_A <= tmp_6_fu_1206_p33;
    end
end

always @ (posedge ap_clk) begin
    if ((b_Data_1_load_B == 1'b1)) begin
        b_Data_1_payload_B <= tmp_6_fu_1206_p33;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond4_reg_1375 <= exitcond4_fu_1158_p2;
        exitcond4_reg_1375_pp1_iter1_reg <= exitcond4_reg_1375;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        exitcond6_reg_1371 <= exitcond6_fu_1152_p2;
        iter_load_reg_1366 <= iter_fu_166;
    end
end

always @ (posedge ap_clk) begin
    if ((weight_0_load_A == 1'b1)) begin
        weight_0_payload_A <= weight_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((weight_0_load_B == 1'b1)) begin
        weight_0_payload_B <= weight_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        weight_read_1_reg_1331 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_read_2_reg_1336 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        weight_read_3_reg_1341 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        weight_read_4_reg_1346 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        weight_read_5_reg_1351 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        weight_read_6_reg_1356 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        weight_read_reg_1326 <= weight_0_data_out;
    end
end

always @ (*) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        Bias_Data_1_vld_in = 1'b1;
    end else begin
        Bias_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1158_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((b_Data_1_sel == 1'b1)) begin
        b_Data_1_data_out = b_Data_1_payload_B;
    end else begin
        b_Data_1_data_out = b_Data_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond4_reg_1375 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        b_Data_1_vld_in = 1'b1;
    end else begin
        b_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (exitcond4_reg_1375_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (exitcond4_reg_1375 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        b_Data_TDATA_blk_n = b_Data_1_state[1'd1];
    end else begin
        b_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_0_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_0_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_0_ce0 = 1'b1;
    end else begin
        kernel_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd0) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_0_we0 = 1'b1;
    end else begin
        kernel_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_1_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_1_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_1_ce0 = 1'b1;
    end else begin
        kernel_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd1) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_1_we0 = 1'b1;
    end else begin
        kernel_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_2_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_2_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_2_ce0 = 1'b1;
    end else begin
        kernel_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd2) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_2_we0 = 1'b1;
    end else begin
        kernel_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_3_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_3_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_3_ce0 = 1'b1;
    end else begin
        kernel_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd3) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_3_we0 = 1'b1;
    end else begin
        kernel_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_4_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_4_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_4_ce0 = 1'b1;
    end else begin
        kernel_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd4) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_4_we0 = 1'b1;
    end else begin
        kernel_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_5_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_5_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_5_ce0 = 1'b1;
    end else begin
        kernel_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd5) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_5_we0 = 1'b1;
    end else begin
        kernel_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_6_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_6_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_6_ce0 = 1'b1;
    end else begin
        kernel_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd6) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_6_we0 = 1'b1;
    end else begin
        kernel_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_0_7_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_7_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_7_ce0 = 1'b1;
    end else begin
        kernel_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd7) & (m_t_mid2_fu_1095_p3 == 2'd0) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_7_we0 = 1'b1;
    end else begin
        kernel_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_0_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_0_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_0_ce0 = 1'b1;
    end else begin
        kernel_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd0) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_0_we0 = 1'b1;
    end else begin
        kernel_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_1_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_1_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_1_ce0 = 1'b1;
    end else begin
        kernel_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd1) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_1_we0 = 1'b1;
    end else begin
        kernel_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_2_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_2_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_2_ce0 = 1'b1;
    end else begin
        kernel_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd2) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_2_we0 = 1'b1;
    end else begin
        kernel_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_3_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_3_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_3_ce0 = 1'b1;
    end else begin
        kernel_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd3) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_3_we0 = 1'b1;
    end else begin
        kernel_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_4_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_4_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_4_ce0 = 1'b1;
    end else begin
        kernel_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd4) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_4_we0 = 1'b1;
    end else begin
        kernel_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_5_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_5_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_5_ce0 = 1'b1;
    end else begin
        kernel_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd5) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_5_we0 = 1'b1;
    end else begin
        kernel_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_6_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_6_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_6_ce0 = 1'b1;
    end else begin
        kernel_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd6) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_6_we0 = 1'b1;
    end else begin
        kernel_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_1_7_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_7_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_7_ce0 = 1'b1;
    end else begin
        kernel_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd7) & (m_t_mid2_fu_1095_p3 == 2'd1) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_7_we0 = 1'b1;
    end else begin
        kernel_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_0_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_0_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_0_ce0 = 1'b1;
    end else begin
        kernel_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd0) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_0_we0 = 1'b1;
    end else begin
        kernel_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_1_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_1_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_1_ce0 = 1'b1;
    end else begin
        kernel_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd1) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_1_we0 = 1'b1;
    end else begin
        kernel_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_2_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_2_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_2_ce0 = 1'b1;
    end else begin
        kernel_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd2) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_2_we0 = 1'b1;
    end else begin
        kernel_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_3_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_3_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_3_ce0 = 1'b1;
    end else begin
        kernel_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd3) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_3_we0 = 1'b1;
    end else begin
        kernel_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_4_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_4_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_4_ce0 = 1'b1;
    end else begin
        kernel_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd4) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_4_we0 = 1'b1;
    end else begin
        kernel_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_5_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_5_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_5_ce0 = 1'b1;
    end else begin
        kernel_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd5) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_5_we0 = 1'b1;
    end else begin
        kernel_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_6_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_6_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_6_ce0 = 1'b1;
    end else begin
        kernel_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd6) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_6_we0 = 1'b1;
    end else begin
        kernel_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_2_7_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_7_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_7_ce0 = 1'b1;
    end else begin
        kernel_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd7) & (m_t_mid2_fu_1095_p3 == 2'd2) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_7_we0 = 1'b1;
    end else begin
        kernel_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_0_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_0_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_0_ce0 = 1'b1;
    end else begin
        kernel_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd0) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_0_we0 = 1'b1;
    end else begin
        kernel_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_1_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_1_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_1_ce0 = 1'b1;
    end else begin
        kernel_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd1) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_1_we0 = 1'b1;
    end else begin
        kernel_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_2_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_2_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_2_ce0 = 1'b1;
    end else begin
        kernel_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd2) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_2_we0 = 1'b1;
    end else begin
        kernel_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_3_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_3_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_3_ce0 = 1'b1;
    end else begin
        kernel_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd3) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_3_we0 = 1'b1;
    end else begin
        kernel_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_4_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_4_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_4_ce0 = 1'b1;
    end else begin
        kernel_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd4) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_4_we0 = 1'b1;
    end else begin
        kernel_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_5_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_5_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_5_ce0 = 1'b1;
    end else begin
        kernel_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd5) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_5_we0 = 1'b1;
    end else begin
        kernel_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_6_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_6_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_6_ce0 = 1'b1;
    end else begin
        kernel_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd6) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_6_we0 = 1'b1;
    end else begin
        kernel_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kernel_3_7_address0 = p_23_rec_cast_fu_1170_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_7_address0 = tmp_mid2_fu_1005_p1;
    end else begin
        kernel_3_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_7_ce0 = 1'b1;
    end else begin
        kernel_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_4_fu_1111_p1 == 3'd7) & (m_t_mid2_fu_1095_p3 == 2'd3) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_7_we0 = 1'b1;
    end else begin
        kernel_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_0_ack_out = 1'b1;
    end else begin
        weight_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((weight_0_sel == 1'b1)) begin
        weight_0_data_out = weight_0_payload_B;
    end else begin
        weight_0_data_out = weight_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_TDATA_blk_n = weight_0_state[1'd0];
    end else begin
        weight_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_965_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((exitcond6_fu_1152_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond4_fu_1158_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond4_fu_1158_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Bias_Data = Bias_Data_1_data_reg;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = ((exitcond4_reg_1375 == 1'd0) & (b_Data_1_ack_in == 1'b0));
end

assign ap_block_state14_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_io = ((exitcond4_reg_1375_pp1_iter1_reg == 1'd0) & (b_Data_1_ack_in == 1'b0));
end

assign ap_block_state15_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((exitcond_flatten1_fu_965_p2 == 1'd0) & (weight_0_vld_out == 1'b0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b_Data_1_ack_in = b_Data_1_state[1'd1];

assign b_Data_1_ack_out = b_Data_TREADY;

assign b_Data_1_load_A = (~b_Data_1_sel_wr & b_Data_1_state_cmp_full);

assign b_Data_1_load_B = (b_Data_1_state_cmp_full & b_Data_1_sel_wr);

assign b_Data_1_sel = b_Data_1_sel_rd;

assign b_Data_1_state_cmp_full = ((b_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign b_Data_1_vld_out = b_Data_1_state[1'd0];

assign b_Data_TDATA = b_Data_1_data_out;

assign b_Data_TVALID = b_Data_1_state[1'd0];

assign exitcond4_fu_1158_p2 = ((i2_reg_949 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond6_fu_1152_p2 = ((iter_fu_166 == 32'd121) ? 1'b1 : 1'b0);

assign exitcond7_mid_fu_1065_p2 = (not_exitcond_flatten_fu_1053_p2 & exitcond_fu_1059_p2);

assign exitcond_flatten1_fu_965_p2 = ((indvar_flatten1_reg_894 == 9'd288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_977_p2 = ((indvar_flatten_reg_916 == 7'd32) ? 1'b1 : 1'b0);

assign exitcond_fu_1059_p2 = ((n2_reg_938 == 4'd8) ? 1'b1 : 1'b0);

assign i_1_fu_1164_p2 = (i2_reg_949 + 4'd1);

assign i_s_fu_991_p2 = (4'd1 + i_reg_905);

assign indvar_flatten_next1_fu_971_p2 = (indvar_flatten1_reg_894 + 9'd1);

assign indvar_flatten_next_fu_1127_p3 = ((exitcond_flatten_fu_977_p2[0:0] === 1'b1) ? 7'd1 : indvar_flatten_op_fu_1121_p2);

assign indvar_flatten_op_fu_1121_p2 = (indvar_flatten_reg_916 + 7'd1);

assign iter_1_fu_1275_p2 = (iter_load_reg_1366 + 32'd1);

assign m_1_fu_1071_p2 = (3'd1 + m_mid_fu_983_p3);

assign m_mid2_fu_1103_p3 = ((exitcond7_mid_fu_1065_p2[0:0] === 1'b1) ? m_1_fu_1071_p2 : m_mid_fu_983_p3);

assign m_mid_fu_983_p3 = ((exitcond_flatten_fu_977_p2[0:0] === 1'b1) ? 3'd0 : m_reg_927);

assign m_t_mid2_fu_1095_p3 = ((exitcond7_mid_fu_1065_p2[0:0] === 1'b1) ? tmp_3_fu_1091_p1 : m_t_mid_fu_1045_p3);

assign m_t_mid_fu_1045_p3 = ((exitcond_flatten_fu_977_p2[0:0] === 1'b1) ? 2'd0 : tmp_2_fu_1041_p1);

assign n2_mid2_fu_1083_p3 = ((tmp_fu_1077_p2[0:0] === 1'b1) ? 4'd0 : n2_reg_938);

assign n_fu_1115_p2 = (n2_mid2_fu_1083_p3 + 4'd1);

assign not_exitcond_flatten_fu_1053_p2 = (exitcond_flatten_fu_977_p2 ^ 1'd1);

assign p_23_rec_cast_fu_1170_p1 = i2_reg_949;

assign tmp_1_fu_1135_p9 = {{{{{{{{weight_0_data_out}, {weight_read_6_reg_1356}}, {weight_read_5_reg_1351}}, {weight_read_4_reg_1346}}, {weight_read_3_reg_1341}}, {weight_read_2_reg_1336}}, {weight_read_1_reg_1331}}, {weight_read_reg_1326}};

assign tmp_2_fu_1041_p1 = m_reg_927[1:0];

assign tmp_3_fu_1091_p1 = m_1_fu_1071_p2[1:0];

assign tmp_4_fu_1111_p1 = n2_mid2_fu_1083_p3[2:0];

assign tmp_6_fu_1206_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{kernel_3_7_q0}, {kernel_2_7_q0}}, {kernel_1_7_q0}}, {kernel_0_7_q0}}, {kernel_3_6_q0}}, {kernel_2_6_q0}}, {kernel_1_6_q0}}, {kernel_0_6_q0}}, {kernel_3_5_q0}}, {kernel_2_5_q0}}, {kernel_1_5_q0}}, {kernel_0_5_q0}}, {kernel_3_4_q0}}, {kernel_2_4_q0}}, {kernel_1_4_q0}}, {kernel_0_4_q0}}, {kernel_3_3_q0}}, {kernel_2_3_q0}}, {kernel_1_3_q0}}, {kernel_0_3_q0}}, {kernel_3_2_q0}}, {kernel_2_2_q0}}, {kernel_1_2_q0}}, {kernel_0_2_q0}}, {kernel_3_1_q0}}, {kernel_2_1_q0}}, {kernel_1_1_q0}}, {kernel_0_1_q0}}, {kernel_3_0_q0}}, {kernel_2_0_q0}}, {kernel_1_0_q0}}, {kernel_0_0_q0}};

assign tmp_fu_1077_p2 = (exitcond_flatten_fu_977_p2 | exitcond7_mid_fu_1065_p2);

assign tmp_mid2_fu_1005_p1 = tmp_mid2_v_fu_997_p3;

assign tmp_mid2_v_fu_997_p3 = ((exitcond_flatten_fu_977_p2[0:0] === 1'b1) ? i_s_fu_991_p2 : i_reg_905);

assign weight_0_ack_in = weight_0_state[1'd1];

assign weight_0_load_A = (weight_0_state_cmp_full & ~weight_0_sel_wr);

assign weight_0_load_B = (weight_0_state_cmp_full & weight_0_sel_wr);

assign weight_0_sel = weight_0_sel_rd;

assign weight_0_state_cmp_full = ((weight_0_state != 2'd1) ? 1'b1 : 1'b0);

assign weight_0_vld_in = weight_TVALID;

assign weight_0_vld_out = weight_0_state[1'd0];

assign weight_TREADY = weight_0_state[1'd1];

endmodule //Layer2_Kernel
