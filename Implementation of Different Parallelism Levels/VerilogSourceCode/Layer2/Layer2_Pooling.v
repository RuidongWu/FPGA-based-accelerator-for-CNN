// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer2_Pooling,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.382000,HLS_SYN_LAT=144,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1107,HLS_SYN_LUT=2029,HLS_VERSION=2018_3}" *)

module Layer2_Pooling (
        ap_clk,
        ap_rst_n,
        a_Data_TDATA,
        a_Data_TVALID,
        a_Data_TREADY,
        Pa_Data_TDATA,
        Pa_Data_TVALID,
        Pa_Data_TREADY
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_pp1_stage0 = 13'd32;
parameter    ap_ST_fsm_pp1_stage1 = 13'd64;
parameter    ap_ST_fsm_state9 = 13'd128;
parameter    ap_ST_fsm_state10 = 13'd256;
parameter    ap_ST_fsm_pp2_stage0 = 13'd512;
parameter    ap_ST_fsm_pp2_stage1 = 13'd1024;
parameter    ap_ST_fsm_state14 = 13'd2048;
parameter    ap_ST_fsm_state15 = 13'd4096;

input   ap_clk;
input   ap_rst_n;
input  [127:0] a_Data_TDATA;
input   a_Data_TVALID;
output   a_Data_TREADY;
output  [127:0] Pa_Data_TDATA;
output   Pa_Data_TVALID;
input   Pa_Data_TREADY;

 reg    ap_rst_n_inv;
reg   [127:0] a_Data_0_data_out;
wire    a_Data_0_vld_in;
wire    a_Data_0_vld_out;
wire    a_Data_0_ack_in;
reg    a_Data_0_ack_out;
reg   [127:0] a_Data_0_payload_A;
reg   [127:0] a_Data_0_payload_B;
reg    a_Data_0_sel_rd;
reg    a_Data_0_sel_wr;
wire    a_Data_0_sel;
wire    a_Data_0_load_A;
wire    a_Data_0_load_B;
reg   [1:0] a_Data_0_state;
wire    a_Data_0_state_cmp_full;
reg   [127:0] Pa_Data_1_data_in;
reg   [127:0] Pa_Data_1_data_out;
reg    Pa_Data_1_vld_in;
wire    Pa_Data_1_vld_out;
wire    Pa_Data_1_ack_in;
wire    Pa_Data_1_ack_out;
reg   [127:0] Pa_Data_1_payload_A;
reg   [127:0] Pa_Data_1_payload_B;
reg    Pa_Data_1_sel_rd;
reg    Pa_Data_1_sel_wr;
wire    Pa_Data_1_sel;
wire    Pa_Data_1_load_A;
wire    Pa_Data_1_load_B;
reg   [1:0] Pa_Data_1_state;
wire    Pa_Data_1_state_cmp_full;
reg   [2:0] C_0_address0;
reg    C_0_ce0;
reg    C_0_we0;
reg   [15:0] C_0_d0;
wire   [15:0] C_0_q0;
reg   [2:0] C_1_address0;
reg    C_1_ce0;
reg    C_1_we0;
reg   [15:0] C_1_d0;
wire   [15:0] C_1_q0;
reg   [2:0] C_2_address0;
reg    C_2_ce0;
reg    C_2_we0;
reg   [15:0] C_2_d0;
wire   [15:0] C_2_q0;
reg   [2:0] C_3_address0;
reg    C_3_ce0;
reg    C_3_we0;
reg   [15:0] C_3_d0;
wire   [15:0] C_3_q0;
reg   [2:0] C_4_address0;
reg    C_4_ce0;
reg    C_4_we0;
reg   [15:0] C_4_d0;
wire   [15:0] C_4_q0;
reg   [2:0] C_5_address0;
reg    C_5_ce0;
reg    C_5_we0;
reg   [15:0] C_5_d0;
wire   [15:0] C_5_q0;
reg   [2:0] C_6_address0;
reg    C_6_ce0;
reg    C_6_we0;
reg   [15:0] C_6_d0;
wire   [15:0] C_6_q0;
reg   [2:0] C_7_address0;
reg    C_7_ce0;
reg    C_7_we0;
reg   [15:0] C_7_d0;
wire   [15:0] C_7_q0;
reg    a_Data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond3_fu_703_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] exitcond6_fu_753_p2;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond6_reg_2006;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] exitcond4_fu_1435_p2;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_pp2_stage1;
reg   [0:0] exitcond4_reg_2071;
wire    ap_CS_fsm_state14;
reg    Pa_Data_TDATA_blk_n;
wire    ap_CS_fsm_state10;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state15;
reg   [2:0] c2_reg_389;
reg   [2:0] p_23_rec_reg_400;
wire   [15:0] grp_fu_411_p4;
reg   [15:0] reg_558;
reg    ap_block_state3;
reg    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
reg    ap_block_state8_io;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state11_pp2_stage0_iter0;
wire    ap_block_state13_pp2_stage0_iter1;
reg    ap_block_state13_io;
reg    ap_block_pp2_stage0_11001;
wire   [15:0] grp_fu_421_p4;
reg   [15:0] reg_562;
wire   [15:0] grp_fu_431_p4;
reg   [15:0] reg_566;
wire   [15:0] grp_fu_441_p4;
reg   [15:0] reg_570;
wire   [15:0] grp_fu_451_p4;
reg   [15:0] reg_574;
wire   [15:0] grp_fu_461_p4;
reg   [15:0] reg_578;
wire   [15:0] grp_fu_471_p4;
reg   [15:0] reg_582;
wire   [0:0] exitcond1_fu_691_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] r_1_fu_697_p2;
reg   [2:0] r_1_reg_1939;
wire   [2:0] c_1_fu_709_p2;
reg   [2:0] c_1_reg_1947;
wire   [15:0] tmp_110_fu_715_p1;
reg   [15:0] tmp_110_reg_1952;
wire   [15:0] tmp_109_fu_748_p1;
reg   [15:0] tmp_109_reg_1958;
wire   [15:0] grp_fu_481_p4;
reg   [15:0] tmp_32_reg_1964;
wire   [15:0] grp_fu_492_p4;
reg   [15:0] tmp_33_reg_1970;
wire   [15:0] grp_fu_503_p4;
reg   [15:0] tmp_34_reg_1976;
wire   [15:0] grp_fu_514_p4;
reg   [15:0] tmp_35_reg_1982;
wire   [15:0] grp_fu_525_p4;
reg   [15:0] tmp_36_reg_1988;
wire   [15:0] grp_fu_536_p4;
reg   [15:0] tmp_37_reg_1994;
wire   [15:0] grp_fu_547_p4;
reg   [15:0] tmp_38_reg_2000;
wire   [2:0] c_2_fu_759_p2;
reg   [2:0] c_2_reg_2010;
wire   [15:0] tmp_129_fu_765_p1;
reg   [15:0] tmp_129_reg_2015;
wire   [127:0] tmp_85_fu_1117_p1;
reg    ap_block_state7_pp1_stage1_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp1_stage1_11001;
wire   [127:0] tmp_65_fu_1430_p1;
wire   [2:0] p_rec_fu_1441_p2;
reg   [2:0] p_rec_reg_2075;
wire   [15:0] tmp_21_fu_1447_p1;
reg   [15:0] tmp_21_reg_2080;
wire   [127:0] tmp_30_fu_1675_p1;
reg    ap_block_state12_pp2_stage1_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp2_stage1_11001;
wire   [127:0] tmp_11_fu_1930_p1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state11;
reg    ap_block_pp2_stage1_subdone;
reg   [2:0] r_reg_366;
wire    ap_CS_fsm_state1;
reg   [2:0] c_reg_377;
reg   [2:0] ap_phi_mux_c2_phi_fu_393_p4;
reg   [2:0] ap_phi_mux_p_23_rec_phi_fu_404_p4;
wire   [63:0] tmp_fu_723_p1;
wire   [63:0] tmp_s_fu_769_p1;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp2_stage1_01001;
wire   [15:0] tmp_87_fu_740_p3;
wire   [15:0] grp_fu_592_p3;
wire   [15:0] grp_fu_607_p3;
wire   [15:0] grp_fu_622_p3;
wire   [15:0] grp_fu_637_p3;
wire   [15:0] grp_fu_652_p3;
wire   [15:0] grp_fu_667_p3;
wire   [15:0] grp_fu_682_p3;
wire   [0:0] grp_fu_586_p2;
wire   [0:0] grp_fu_601_p2;
wire   [0:0] grp_fu_616_p2;
wire   [0:0] grp_fu_631_p2;
wire   [0:0] grp_fu_646_p2;
wire   [0:0] grp_fu_661_p2;
wire   [0:0] grp_fu_676_p2;
wire   [15:0] tmp_111_fu_719_p1;
wire   [0:0] tmp_86_fu_735_p2;
wire   [15:0] tmp_130_fu_781_p1;
wire   [0:0] tmp_92_fu_785_p2;
wire   [15:0] tmp_93_fu_790_p3;
wire   [0:0] tmp_94_fu_797_p2;
wire   [15:0] tmp_95_fu_803_p3;
wire   [0:0] tmp_132_fu_815_p3;
wire   [14:0] tmp_131_fu_811_p1;
wire   [14:0] tmp_97_fu_823_p3;
wire   [0:0] tmp_21_1_fu_835_p2;
wire   [15:0] tmp_22_1_fu_841_p3;
wire   [0:0] tmp_134_fu_853_p3;
wire   [14:0] tmp_133_fu_849_p1;
wire   [14:0] tmp_24_1_fu_861_p3;
wire   [0:0] tmp_21_2_fu_873_p2;
wire   [15:0] tmp_22_2_fu_879_p3;
wire   [0:0] tmp_136_fu_891_p3;
wire   [14:0] tmp_135_fu_887_p1;
wire   [14:0] tmp_24_2_fu_899_p3;
wire   [0:0] tmp_21_3_fu_911_p2;
wire   [15:0] tmp_22_3_fu_917_p3;
wire   [0:0] tmp_138_fu_929_p3;
wire   [14:0] tmp_137_fu_925_p1;
wire   [14:0] tmp_24_3_fu_937_p3;
wire   [0:0] tmp_21_4_fu_949_p2;
wire   [15:0] tmp_22_4_fu_955_p3;
wire   [0:0] tmp_140_fu_967_p3;
wire   [14:0] tmp_139_fu_963_p1;
wire   [14:0] tmp_24_4_fu_975_p3;
wire   [0:0] tmp_21_5_fu_987_p2;
wire   [15:0] tmp_22_5_fu_993_p3;
wire   [0:0] tmp_142_fu_1005_p3;
wire   [14:0] tmp_141_fu_1001_p1;
wire   [14:0] tmp_24_5_fu_1013_p3;
wire   [0:0] tmp_21_6_fu_1025_p2;
wire   [15:0] tmp_22_6_fu_1031_p3;
wire   [0:0] tmp_144_fu_1043_p3;
wire   [14:0] tmp_143_fu_1039_p1;
wire   [14:0] tmp_24_6_fu_1051_p3;
wire   [0:0] tmp_21_7_fu_1063_p2;
wire   [15:0] tmp_22_7_fu_1069_p3;
wire   [0:0] tmp_146_fu_1081_p3;
wire   [14:0] tmp_145_fu_1077_p1;
wire   [14:0] tmp_24_7_fu_1089_p3;
wire   [15:0] tmp_24_6_cast_fu_1059_p1;
wire   [15:0] tmp_24_5_cast_fu_1021_p1;
wire   [15:0] tmp_24_4_cast_fu_983_p1;
wire   [15:0] tmp_24_3_cast_fu_945_p1;
wire   [15:0] tmp_24_2_cast_fu_907_p1;
wire   [15:0] tmp_24_1_cast_fu_869_p1;
wire   [15:0] tmp_97_cast_fu_831_p1;
wire   [126:0] tmp_101_fu_1097_p9;
wire   [15:0] tmp_112_fu_1122_p1;
wire   [0:0] tmp_88_fu_1126_p2;
wire   [15:0] tmp_89_fu_1131_p3;
wire   [0:0] tmp_114_fu_1142_p3;
wire   [14:0] tmp_113_fu_1138_p1;
wire   [14:0] tmp_91_fu_1150_p3;
wire   [0:0] tmp_14_1_fu_1162_p2;
wire   [15:0] tmp_15_1_fu_1167_p3;
wire   [0:0] tmp_116_fu_1178_p3;
wire   [14:0] tmp_115_fu_1174_p1;
wire   [14:0] tmp_17_1_fu_1186_p3;
wire   [0:0] tmp_14_2_fu_1198_p2;
wire   [15:0] tmp_15_2_fu_1203_p3;
wire   [0:0] tmp_118_fu_1214_p3;
wire   [14:0] tmp_117_fu_1210_p1;
wire   [14:0] tmp_17_2_fu_1222_p3;
wire   [0:0] tmp_14_3_fu_1234_p2;
wire   [15:0] tmp_15_3_fu_1239_p3;
wire   [0:0] tmp_120_fu_1250_p3;
wire   [14:0] tmp_119_fu_1246_p1;
wire   [14:0] tmp_17_3_fu_1258_p3;
wire   [0:0] tmp_14_4_fu_1270_p2;
wire   [15:0] tmp_15_4_fu_1275_p3;
wire   [0:0] tmp_122_fu_1286_p3;
wire   [14:0] tmp_121_fu_1282_p1;
wire   [14:0] tmp_17_4_fu_1294_p3;
wire   [0:0] tmp_14_5_fu_1306_p2;
wire   [15:0] tmp_15_5_fu_1311_p3;
wire   [0:0] tmp_124_fu_1322_p3;
wire   [14:0] tmp_123_fu_1318_p1;
wire   [14:0] tmp_17_5_fu_1330_p3;
wire   [0:0] tmp_14_6_fu_1342_p2;
wire   [15:0] tmp_15_6_fu_1347_p3;
wire   [0:0] tmp_126_fu_1358_p3;
wire   [14:0] tmp_125_fu_1354_p1;
wire   [14:0] tmp_17_6_fu_1366_p3;
wire   [0:0] tmp_14_7_fu_1378_p2;
wire   [15:0] tmp_15_7_fu_1383_p3;
wire   [0:0] tmp_128_fu_1394_p3;
wire   [14:0] tmp_127_fu_1390_p1;
wire   [14:0] tmp_17_7_fu_1402_p3;
wire   [15:0] tmp_17_6_cast_fu_1374_p1;
wire   [15:0] tmp_17_5_cast_fu_1338_p1;
wire   [15:0] tmp_17_4_cast_fu_1302_p1;
wire   [15:0] tmp_17_3_cast_fu_1266_p1;
wire   [15:0] tmp_17_2_cast_fu_1230_p1;
wire   [15:0] tmp_17_1_cast_fu_1194_p1;
wire   [15:0] tmp_91_cast_fu_1158_p1;
wire   [126:0] tmp_100_fu_1410_p9;
wire   [15:0] tmp_31_fu_1451_p1;
wire   [0:0] tmp_29_fu_1455_p2;
wire   [15:0] tmp_40_fu_1460_p3;
wire   [0:0] tmp_56_fu_1471_p3;
wire   [14:0] tmp_48_fu_1467_p1;
wire   [14:0] tmp_61_fu_1479_p3;
wire   [0:0] tmp_71_fu_1495_p3;
wire   [14:0] tmp_67_fu_1491_p1;
wire   [14:0] tmp_9_1_fu_1503_p3;
wire   [0:0] tmp_81_fu_1519_p3;
wire   [14:0] tmp_76_fu_1515_p1;
wire   [14:0] tmp_9_2_fu_1527_p3;
wire   [0:0] tmp_96_fu_1543_p3;
wire   [14:0] tmp_90_fu_1539_p1;
wire   [14:0] tmp_9_3_fu_1551_p3;
wire   [0:0] tmp_102_fu_1567_p3;
wire   [14:0] tmp_98_fu_1563_p1;
wire   [14:0] tmp_9_4_fu_1575_p3;
wire   [0:0] tmp_104_fu_1591_p3;
wire   [14:0] tmp_103_fu_1587_p1;
wire   [14:0] tmp_9_5_fu_1599_p3;
wire   [0:0] tmp_106_fu_1615_p3;
wire   [14:0] tmp_105_fu_1611_p1;
wire   [14:0] tmp_9_6_fu_1623_p3;
wire   [0:0] tmp_108_fu_1639_p3;
wire   [14:0] tmp_107_fu_1635_p1;
wire   [14:0] tmp_9_7_fu_1647_p3;
wire   [15:0] tmp_9_6_cast_fu_1631_p1;
wire   [15:0] tmp_9_5_cast_fu_1607_p1;
wire   [15:0] tmp_9_4_cast_fu_1583_p1;
wire   [15:0] tmp_9_3_cast_fu_1559_p1;
wire   [15:0] tmp_9_2_cast_fu_1535_p1;
wire   [15:0] tmp_9_1_cast_fu_1511_p1;
wire   [15:0] tmp_81_cast_fu_1487_p1;
wire   [126:0] tmp_99_fu_1655_p9;
wire   [0:0] tmp_2_fu_1684_p3;
wire   [14:0] tmp_1_fu_1680_p1;
wire   [14:0] tmp_3_fu_1692_p3;
wire   [0:0] tmp_4_fu_1714_p3;
wire   [14:0] tmp_4_cast_fu_1704_p4;
wire   [14:0] tmp_3_1_fu_1722_p3;
wire   [0:0] tmp_5_fu_1744_p3;
wire   [14:0] tmp_5_cast_fu_1734_p4;
wire   [14:0] tmp_3_2_fu_1752_p3;
wire   [0:0] tmp_6_fu_1774_p3;
wire   [14:0] tmp_6_cast_fu_1764_p4;
wire   [14:0] tmp_3_3_fu_1782_p3;
wire   [0:0] tmp_7_fu_1804_p3;
wire   [14:0] tmp_7_cast_fu_1794_p4;
wire   [14:0] tmp_3_4_fu_1812_p3;
wire   [0:0] tmp_8_fu_1834_p3;
wire   [14:0] tmp_8_cast_fu_1824_p4;
wire   [14:0] tmp_3_5_fu_1842_p3;
wire   [0:0] tmp_9_fu_1864_p3;
wire   [14:0] tmp_9_cast_fu_1854_p4;
wire   [14:0] tmp_3_6_fu_1872_p3;
wire   [0:0] tmp_10_fu_1894_p3;
wire   [14:0] tmp_10_cast_fu_1884_p4;
wire   [14:0] tmp_3_7_fu_1902_p3;
wire   [15:0] tmp_3_6_cast_fu_1880_p1;
wire   [15:0] tmp_3_5_cast_fu_1850_p1;
wire   [15:0] tmp_3_4_cast_fu_1820_p1;
wire   [15:0] tmp_3_3_cast_fu_1790_p1;
wire   [15:0] tmp_3_2_cast_fu_1760_p1;
wire   [15:0] tmp_3_1_cast_fu_1730_p1;
wire   [15:0] tmp_3_cast_fu_1700_p1;
wire   [126:0] tmp_13_fu_1910_p9;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 a_Data_0_sel_rd = 1'b0;
#0 a_Data_0_sel_wr = 1'b0;
#0 a_Data_0_state = 2'd0;
#0 Pa_Data_1_sel_rd = 1'b0;
#0 Pa_Data_1_sel_wr = 1'b0;
#0 Pa_Data_1_state = 2'd0;
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_0_address0),
    .ce0(C_0_ce0),
    .we0(C_0_we0),
    .d0(C_0_d0),
    .q0(C_0_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_1_address0),
    .ce0(C_1_ce0),
    .we0(C_1_we0),
    .d0(C_1_d0),
    .q0(C_1_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_2_address0),
    .ce0(C_2_ce0),
    .we0(C_2_we0),
    .d0(C_2_d0),
    .q0(C_2_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_3_address0),
    .ce0(C_3_ce0),
    .we0(C_3_we0),
    .d0(C_3_d0),
    .q0(C_3_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_4_address0),
    .ce0(C_4_ce0),
    .we0(C_4_we0),
    .d0(C_4_d0),
    .q0(C_4_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_5_address0),
    .ce0(C_5_ce0),
    .we0(C_5_we0),
    .d0(C_5_d0),
    .q0(C_5_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_6_address0),
    .ce0(C_6_ce0),
    .we0(C_6_we0),
    .d0(C_6_d0),
    .q0(C_6_q0)
);

Layer2_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
C_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_7_address0),
    .ce0(C_7_ce0),
    .we0(C_7_we0),
    .d0(C_7_d0),
    .q0(C_7_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_out))) begin
            Pa_Data_1_sel_rd <= ~Pa_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == Pa_Data_1_ack_in) & (1'b1 == Pa_Data_1_vld_in))) begin
            Pa_Data_1_sel_wr <= ~Pa_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_vld_in)) | ((2'd3 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_vld_in) & (1'b1 == Pa_Data_1_ack_out)))) begin
            Pa_Data_1_state <= 2'd2;
        end else if ((((2'd1 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_ack_out)) | ((2'd3 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_in)))) begin
            Pa_Data_1_state <= 2'd1;
        end else if (((~((1'b0 == Pa_Data_1_vld_in) & (1'b1 == Pa_Data_1_ack_out)) & ~((1'b0 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_in)) & (2'd3 == Pa_Data_1_state)) | ((2'd1 == Pa_Data_1_state) & (1'b1 == Pa_Data_1_ack_out)) | ((2'd2 == Pa_Data_1_state) & (1'b1 == Pa_Data_1_vld_in)))) begin
            Pa_Data_1_state <= 2'd3;
        end else begin
            Pa_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_out))) begin
            a_Data_0_sel_rd <= ~a_Data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_in) & (1'b1 == a_Data_0_vld_in))) begin
            a_Data_0_sel_wr <= ~a_Data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == a_Data_0_state) & (1'b0 == a_Data_0_vld_in)) | ((2'd3 == a_Data_0_state) & (1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)))) begin
            a_Data_0_state <= 2'd2;
        end else if ((((2'd1 == a_Data_0_state) & (1'b0 == a_Data_0_ack_out)) | ((2'd3 == a_Data_0_state) & (1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd1;
        end else if (((~((1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)) & ~((1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)) & (2'd3 == a_Data_0_state)) | ((2'd1 == a_Data_0_state) & (1'b1 == a_Data_0_ack_out)) | ((2'd2 == a_Data_0_state) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd3;
        end else begin
            a_Data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((exitcond1_fu_691_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((exitcond1_fu_691_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
        c2_reg_389 <= 3'd0;
    end else if (((exitcond6_reg_2006 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c2_reg_389 <= c_2_reg_2010;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c_reg_377 <= 3'd0;
    end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4))) begin
        c_reg_377 <= c_1_reg_1947;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_691_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_23_rec_reg_400 <= 3'd0;
    end else if (((exitcond4_reg_2071 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_23_rec_reg_400 <= p_rec_reg_2075;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Pa_Data_1_ack_in) & (1'b1 == ap_CS_fsm_state10))) begin
        r_reg_366 <= r_1_reg_1939;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        r_reg_366 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == Pa_Data_1_load_A)) begin
        Pa_Data_1_payload_A <= Pa_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == Pa_Data_1_load_B)) begin
        Pa_Data_1_payload_B <= Pa_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_A)) begin
        a_Data_0_payload_A <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_B)) begin
        a_Data_0_payload_B <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state3))) begin
        c_1_reg_1947 <= c_1_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_2_reg_2010 <= c_2_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond4_reg_2071 <= exitcond4_fu_1435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond6_reg_2006 <= exitcond6_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_rec_reg_2075 <= p_rec_fu_1441_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_1_reg_1939 <= r_1_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_558 <= {{a_Data_0_data_out[31:16]}};
        reg_562 <= {{a_Data_0_data_out[47:32]}};
        reg_566 <= {{a_Data_0_data_out[63:48]}};
        reg_570 <= {{a_Data_0_data_out[79:64]}};
        reg_574 <= {{a_Data_0_data_out[95:80]}};
        reg_578 <= {{a_Data_0_data_out[111:96]}};
        reg_582 <= {{a_Data_0_data_out[127:112]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_109_reg_1958 <= tmp_109_fu_748_p1;
        tmp_32_reg_1964 <= {{a_Data_0_data_out[31:16]}};
        tmp_33_reg_1970 <= {{a_Data_0_data_out[47:32]}};
        tmp_34_reg_1976 <= {{a_Data_0_data_out[63:48]}};
        tmp_35_reg_1982 <= {{a_Data_0_data_out[79:64]}};
        tmp_36_reg_1988 <= {{a_Data_0_data_out[95:80]}};
        tmp_37_reg_1994 <= {{a_Data_0_data_out[111:96]}};
        tmp_38_reg_2000 <= {{a_Data_0_data_out[127:112]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_110_reg_1952 <= tmp_110_fu_715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_129_reg_2015 <= tmp_129_fu_765_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_21_reg_2080 <= tmp_21_fu_1447_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_0_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_0_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_0_address0 = tmp_fu_723_p1;
    end else begin
        C_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_0_ce0 = 1'b1;
    end else begin
        C_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_0_d0 = tmp_109_fu_748_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_0_d0 = tmp_87_fu_740_p3;
    end else begin
        C_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_0_we0 = 1'b1;
    end else begin
        C_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_1_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_1_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_1_address0 = tmp_fu_723_p1;
    end else begin
        C_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_1_ce0 = 1'b1;
    end else begin
        C_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_1_d0 = {{a_Data_0_data_out[31:16]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_1_d0 = grp_fu_592_p3;
    end else begin
        C_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_1_we0 = 1'b1;
    end else begin
        C_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_2_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_2_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_2_address0 = tmp_fu_723_p1;
    end else begin
        C_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_2_ce0 = 1'b1;
    end else begin
        C_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_2_d0 = {{a_Data_0_data_out[47:32]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_2_d0 = grp_fu_607_p3;
    end else begin
        C_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_2_we0 = 1'b1;
    end else begin
        C_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_3_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_3_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_3_address0 = tmp_fu_723_p1;
    end else begin
        C_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_3_ce0 = 1'b1;
    end else begin
        C_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_3_d0 = {{a_Data_0_data_out[63:48]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_3_d0 = grp_fu_622_p3;
    end else begin
        C_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_3_we0 = 1'b1;
    end else begin
        C_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_4_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_4_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_4_address0 = tmp_fu_723_p1;
    end else begin
        C_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_4_ce0 = 1'b1;
    end else begin
        C_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_4_d0 = {{a_Data_0_data_out[79:64]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_4_d0 = grp_fu_637_p3;
    end else begin
        C_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_4_we0 = 1'b1;
    end else begin
        C_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_5_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_5_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_5_address0 = tmp_fu_723_p1;
    end else begin
        C_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_5_ce0 = 1'b1;
    end else begin
        C_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_5_d0 = {{a_Data_0_data_out[95:80]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_5_d0 = grp_fu_652_p3;
    end else begin
        C_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_5_we0 = 1'b1;
    end else begin
        C_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_6_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_6_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_6_address0 = tmp_fu_723_p1;
    end else begin
        C_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_6_ce0 = 1'b1;
    end else begin
        C_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_6_d0 = {{a_Data_0_data_out[111:96]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_6_d0 = grp_fu_667_p3;
    end else begin
        C_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_6_we0 = 1'b1;
    end else begin
        C_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_7_address0 = tmp_s_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_7_address0 = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_7_address0 = tmp_fu_723_p1;
    end else begin
        C_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_7_ce0 = 1'b1;
    end else begin
        C_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_7_d0 = {{a_Data_0_data_out[127:112]}};
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_7_d0 = grp_fu_682_p3;
    end else begin
        C_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        C_7_we0 = 1'b1;
    end else begin
        C_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
        Pa_Data_1_data_in = tmp_11_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp2_stage1_01001) & (exitcond4_reg_2071 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Pa_Data_1_data_in = tmp_30_fu_1675_p1;
    end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state9))) begin
        Pa_Data_1_data_in = tmp_65_fu_1430_p1;
    end else if (((1'b0 == ap_block_pp1_stage1_01001) & (exitcond6_reg_2006 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Pa_Data_1_data_in = tmp_85_fu_1117_p1;
    end else begin
        Pa_Data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == Pa_Data_1_sel)) begin
        Pa_Data_1_data_out = Pa_Data_1_payload_B;
    end else begin
        Pa_Data_1_data_out = Pa_Data_1_payload_A;
    end
end

always @ (*) begin
    if (((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_pp2_stage1_11001) & (exitcond4_reg_2071 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (exitcond6_reg_2006 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | (~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state9)))) begin
        Pa_Data_1_vld_in = 1'b1;
    end else begin
        Pa_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | ((exitcond4_reg_2071 == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond4_reg_2071 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond6_reg_2006 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond6_reg_2006 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Pa_Data_TDATA_blk_n = Pa_Data_1_state[1'd1];
    end else begin
        Pa_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_pp2_stage1_11001) & (exitcond4_reg_2071 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (exitcond6_reg_2006 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4)) | (~((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        a_Data_0_ack_out = 1'b1;
    end else begin
        a_Data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == a_Data_0_sel)) begin
        a_Data_0_data_out = a_Data_0_payload_B;
    end else begin
        a_Data_0_data_out = a_Data_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((exitcond4_reg_2071 == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond6_reg_2006 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_Data_TDATA_blk_n = a_Data_0_state[1'd0];
    end else begin
        a_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond6_fu_753_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1435_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_2006 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c2_phi_fu_393_p4 = c_2_reg_2010;
    end else begin
        ap_phi_mux_c2_phi_fu_393_p4 = c2_reg_389;
    end
end

always @ (*) begin
    if (((exitcond4_reg_2071 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_p_23_rec_phi_fu_404_p4 = p_rec_reg_2075;
    end else begin
        ap_phi_mux_p_23_rec_phi_fu_404_p4 = p_23_rec_reg_400;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_691_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond3_fu_703_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond6_fu_753_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond6_fu_753_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == Pa_Data_1_ack_in) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond4_fu_1435_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond4_fu_1435_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == Pa_Data_1_ack_in) & (Pa_Data_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Pa_Data_1_ack_in = Pa_Data_1_state[1'd1];

assign Pa_Data_1_ack_out = Pa_Data_TREADY;

assign Pa_Data_1_load_A = (~Pa_Data_1_sel_wr & Pa_Data_1_state_cmp_full);

assign Pa_Data_1_load_B = (Pa_Data_1_state_cmp_full & Pa_Data_1_sel_wr);

assign Pa_Data_1_sel = Pa_Data_1_sel_rd;

assign Pa_Data_1_state_cmp_full = ((Pa_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign Pa_Data_1_vld_out = Pa_Data_1_state[1'd0];

assign Pa_Data_TDATA = Pa_Data_1_data_out;

assign Pa_Data_TVALID = Pa_Data_1_state[1'd0];

assign a_Data_0_ack_in = a_Data_0_state[1'd1];

assign a_Data_0_load_A = (~a_Data_0_sel_wr & a_Data_0_state_cmp_full);

assign a_Data_0_load_B = (a_Data_0_state_cmp_full & a_Data_0_sel_wr);

assign a_Data_0_sel = a_Data_0_sel_rd;

assign a_Data_0_state_cmp_full = ((a_Data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign a_Data_0_vld_in = a_Data_TVALID;

assign a_Data_0_vld_out = a_Data_0_state[1'd0];

assign a_Data_TREADY = a_Data_0_state[1'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((exitcond6_reg_2006 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((exitcond6_reg_2006 == 1'd0) & (1'b0 == a_Data_0_vld_out))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((exitcond6_reg_2006 == 1'd0) & (1'b0 == a_Data_0_vld_out))));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_01001 = ((exitcond4_reg_2071 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond4_reg_2071 == 1'd0) & (1'b0 == a_Data_0_vld_out))));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond4_reg_2071 == 1'd0) & (1'b0 == a_Data_0_vld_out))));
end

always @ (*) begin
    ap_block_state11_pp2_stage0_iter0 = ((exitcond4_fu_1435_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state12_io = ((exitcond4_reg_2071 == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

always @ (*) begin
    ap_block_state12_pp2_stage1_iter0 = ((exitcond4_reg_2071 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state13_io = ((exitcond4_reg_2071 == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

assign ap_block_state13_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((exitcond3_fu_703_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state6_pp1_stage0_iter0 = ((exitcond6_fu_753_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state7_io = ((exitcond6_reg_2006 == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

always @ (*) begin
    ap_block_state7_pp1_stage1_iter0 = ((exitcond6_reg_2006 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state8_io = ((exitcond6_reg_2006 == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_1_fu_709_p2 = (c_reg_377 + 3'd1);

assign c_2_fu_759_p2 = (ap_phi_mux_c2_phi_fu_393_p4 + 3'd1);

assign exitcond1_fu_691_p2 = ((r_reg_366 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_703_p2 = ((c_reg_377 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_1435_p2 = ((ap_phi_mux_p_23_rec_phi_fu_404_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond6_fu_753_p2 = ((ap_phi_mux_c2_phi_fu_393_p4 == 3'd5) ? 1'b1 : 1'b0);

assign grp_fu_411_p4 = {{a_Data_0_data_out[31:16]}};

assign grp_fu_421_p4 = {{a_Data_0_data_out[47:32]}};

assign grp_fu_431_p4 = {{a_Data_0_data_out[63:48]}};

assign grp_fu_441_p4 = {{a_Data_0_data_out[79:64]}};

assign grp_fu_451_p4 = {{a_Data_0_data_out[95:80]}};

assign grp_fu_461_p4 = {{a_Data_0_data_out[111:96]}};

assign grp_fu_471_p4 = {{a_Data_0_data_out[127:112]}};

assign grp_fu_481_p4 = {{a_Data_0_data_out[31:16]}};

assign grp_fu_492_p4 = {{a_Data_0_data_out[47:32]}};

assign grp_fu_503_p4 = {{a_Data_0_data_out[63:48]}};

assign grp_fu_514_p4 = {{a_Data_0_data_out[79:64]}};

assign grp_fu_525_p4 = {{a_Data_0_data_out[95:80]}};

assign grp_fu_536_p4 = {{a_Data_0_data_out[111:96]}};

assign grp_fu_547_p4 = {{a_Data_0_data_out[127:112]}};

assign grp_fu_586_p2 = (($signed(reg_558) < $signed(grp_fu_411_p4)) ? 1'b1 : 1'b0);

assign grp_fu_592_p3 = ((grp_fu_586_p2[0:0] === 1'b1) ? grp_fu_411_p4 : reg_558);

assign grp_fu_601_p2 = (($signed(reg_562) < $signed(grp_fu_421_p4)) ? 1'b1 : 1'b0);

assign grp_fu_607_p3 = ((grp_fu_601_p2[0:0] === 1'b1) ? grp_fu_421_p4 : reg_562);

assign grp_fu_616_p2 = (($signed(reg_566) < $signed(grp_fu_431_p4)) ? 1'b1 : 1'b0);

assign grp_fu_622_p3 = ((grp_fu_616_p2[0:0] === 1'b1) ? grp_fu_431_p4 : reg_566);

assign grp_fu_631_p2 = (($signed(reg_570) < $signed(grp_fu_441_p4)) ? 1'b1 : 1'b0);

assign grp_fu_637_p3 = ((grp_fu_631_p2[0:0] === 1'b1) ? grp_fu_441_p4 : reg_570);

assign grp_fu_646_p2 = (($signed(reg_574) < $signed(grp_fu_451_p4)) ? 1'b1 : 1'b0);

assign grp_fu_652_p3 = ((grp_fu_646_p2[0:0] === 1'b1) ? grp_fu_451_p4 : reg_574);

assign grp_fu_661_p2 = (($signed(reg_578) < $signed(grp_fu_461_p4)) ? 1'b1 : 1'b0);

assign grp_fu_667_p3 = ((grp_fu_661_p2[0:0] === 1'b1) ? grp_fu_461_p4 : reg_578);

assign grp_fu_676_p2 = (($signed(reg_582) < $signed(grp_fu_471_p4)) ? 1'b1 : 1'b0);

assign grp_fu_682_p3 = ((grp_fu_676_p2[0:0] === 1'b1) ? grp_fu_471_p4 : reg_582);

assign p_rec_fu_1441_p2 = (ap_phi_mux_p_23_rec_phi_fu_404_p4 + 3'd1);

assign r_1_fu_697_p2 = (r_reg_366 + 3'd1);

assign tmp_100_fu_1410_p9 = {{{{{{{{tmp_17_7_fu_1402_p3}, {tmp_17_6_cast_fu_1374_p1}}, {tmp_17_5_cast_fu_1338_p1}}, {tmp_17_4_cast_fu_1302_p1}}, {tmp_17_3_cast_fu_1266_p1}}, {tmp_17_2_cast_fu_1230_p1}}, {tmp_17_1_cast_fu_1194_p1}}, {tmp_91_cast_fu_1158_p1}};

assign tmp_101_fu_1097_p9 = {{{{{{{{tmp_24_7_fu_1089_p3}, {tmp_24_6_cast_fu_1059_p1}}, {tmp_24_5_cast_fu_1021_p1}}, {tmp_24_4_cast_fu_983_p1}}, {tmp_24_3_cast_fu_945_p1}}, {tmp_24_2_cast_fu_907_p1}}, {tmp_24_1_cast_fu_869_p1}}, {tmp_97_cast_fu_831_p1}};

assign tmp_102_fu_1567_p3 = grp_fu_637_p3[32'd15];

assign tmp_103_fu_1587_p1 = grp_fu_652_p3[14:0];

assign tmp_104_fu_1591_p3 = grp_fu_652_p3[32'd15];

assign tmp_105_fu_1611_p1 = grp_fu_667_p3[14:0];

assign tmp_106_fu_1615_p3 = grp_fu_667_p3[32'd15];

assign tmp_107_fu_1635_p1 = grp_fu_682_p3[14:0];

assign tmp_108_fu_1639_p3 = grp_fu_682_p3[32'd15];

assign tmp_109_fu_748_p1 = a_Data_0_data_out[15:0];

assign tmp_10_cast_fu_1884_p4 = {{a_Data_0_data_out[126:112]}};

assign tmp_10_fu_1894_p3 = a_Data_0_data_out[9'd127];

assign tmp_110_fu_715_p1 = a_Data_0_data_out[15:0];

assign tmp_111_fu_719_p1 = a_Data_0_data_out[15:0];

assign tmp_112_fu_1122_p1 = a_Data_0_data_out[15:0];

assign tmp_113_fu_1138_p1 = tmp_89_fu_1131_p3[14:0];

assign tmp_114_fu_1142_p3 = tmp_89_fu_1131_p3[32'd15];

assign tmp_115_fu_1174_p1 = tmp_15_1_fu_1167_p3[14:0];

assign tmp_116_fu_1178_p3 = tmp_15_1_fu_1167_p3[32'd15];

assign tmp_117_fu_1210_p1 = tmp_15_2_fu_1203_p3[14:0];

assign tmp_118_fu_1214_p3 = tmp_15_2_fu_1203_p3[32'd15];

assign tmp_119_fu_1246_p1 = tmp_15_3_fu_1239_p3[14:0];

assign tmp_11_fu_1930_p1 = tmp_13_fu_1910_p9;

assign tmp_120_fu_1250_p3 = tmp_15_3_fu_1239_p3[32'd15];

assign tmp_121_fu_1282_p1 = tmp_15_4_fu_1275_p3[14:0];

assign tmp_122_fu_1286_p3 = tmp_15_4_fu_1275_p3[32'd15];

assign tmp_123_fu_1318_p1 = tmp_15_5_fu_1311_p3[14:0];

assign tmp_124_fu_1322_p3 = tmp_15_5_fu_1311_p3[32'd15];

assign tmp_125_fu_1354_p1 = tmp_15_6_fu_1347_p3[14:0];

assign tmp_126_fu_1358_p3 = tmp_15_6_fu_1347_p3[32'd15];

assign tmp_127_fu_1390_p1 = tmp_15_7_fu_1383_p3[14:0];

assign tmp_128_fu_1394_p3 = tmp_15_7_fu_1383_p3[32'd15];

assign tmp_129_fu_765_p1 = a_Data_0_data_out[15:0];

assign tmp_130_fu_781_p1 = a_Data_0_data_out[15:0];

assign tmp_131_fu_811_p1 = tmp_95_fu_803_p3[14:0];

assign tmp_132_fu_815_p3 = tmp_95_fu_803_p3[32'd15];

assign tmp_133_fu_849_p1 = tmp_22_1_fu_841_p3[14:0];

assign tmp_134_fu_853_p3 = tmp_22_1_fu_841_p3[32'd15];

assign tmp_135_fu_887_p1 = tmp_22_2_fu_879_p3[14:0];

assign tmp_136_fu_891_p3 = tmp_22_2_fu_879_p3[32'd15];

assign tmp_137_fu_925_p1 = tmp_22_3_fu_917_p3[14:0];

assign tmp_138_fu_929_p3 = tmp_22_3_fu_917_p3[32'd15];

assign tmp_139_fu_963_p1 = tmp_22_4_fu_955_p3[14:0];

assign tmp_13_fu_1910_p9 = {{{{{{{{tmp_3_7_fu_1902_p3}, {tmp_3_6_cast_fu_1880_p1}}, {tmp_3_5_cast_fu_1850_p1}}, {tmp_3_4_cast_fu_1820_p1}}, {tmp_3_3_cast_fu_1790_p1}}, {tmp_3_2_cast_fu_1760_p1}}, {tmp_3_1_cast_fu_1730_p1}}, {tmp_3_cast_fu_1700_p1}};

assign tmp_140_fu_967_p3 = tmp_22_4_fu_955_p3[32'd15];

assign tmp_141_fu_1001_p1 = tmp_22_5_fu_993_p3[14:0];

assign tmp_142_fu_1005_p3 = tmp_22_5_fu_993_p3[32'd15];

assign tmp_143_fu_1039_p1 = tmp_22_6_fu_1031_p3[14:0];

assign tmp_144_fu_1043_p3 = tmp_22_6_fu_1031_p3[32'd15];

assign tmp_145_fu_1077_p1 = tmp_22_7_fu_1069_p3[14:0];

assign tmp_146_fu_1081_p3 = tmp_22_7_fu_1069_p3[32'd15];

assign tmp_14_1_fu_1162_p2 = (($signed(grp_fu_481_p4) < $signed(tmp_32_reg_1964)) ? 1'b1 : 1'b0);

assign tmp_14_2_fu_1198_p2 = (($signed(grp_fu_492_p4) < $signed(tmp_33_reg_1970)) ? 1'b1 : 1'b0);

assign tmp_14_3_fu_1234_p2 = (($signed(grp_fu_503_p4) < $signed(tmp_34_reg_1976)) ? 1'b1 : 1'b0);

assign tmp_14_4_fu_1270_p2 = (($signed(grp_fu_514_p4) < $signed(tmp_35_reg_1982)) ? 1'b1 : 1'b0);

assign tmp_14_5_fu_1306_p2 = (($signed(grp_fu_525_p4) < $signed(tmp_36_reg_1988)) ? 1'b1 : 1'b0);

assign tmp_14_6_fu_1342_p2 = (($signed(grp_fu_536_p4) < $signed(tmp_37_reg_1994)) ? 1'b1 : 1'b0);

assign tmp_14_7_fu_1378_p2 = (($signed(grp_fu_547_p4) < $signed(tmp_38_reg_2000)) ? 1'b1 : 1'b0);

assign tmp_15_1_fu_1167_p3 = ((tmp_14_1_fu_1162_p2[0:0] === 1'b1) ? tmp_32_reg_1964 : grp_fu_481_p4);

assign tmp_15_2_fu_1203_p3 = ((tmp_14_2_fu_1198_p2[0:0] === 1'b1) ? tmp_33_reg_1970 : grp_fu_492_p4);

assign tmp_15_3_fu_1239_p3 = ((tmp_14_3_fu_1234_p2[0:0] === 1'b1) ? tmp_34_reg_1976 : grp_fu_503_p4);

assign tmp_15_4_fu_1275_p3 = ((tmp_14_4_fu_1270_p2[0:0] === 1'b1) ? tmp_35_reg_1982 : grp_fu_514_p4);

assign tmp_15_5_fu_1311_p3 = ((tmp_14_5_fu_1306_p2[0:0] === 1'b1) ? tmp_36_reg_1988 : grp_fu_525_p4);

assign tmp_15_6_fu_1347_p3 = ((tmp_14_6_fu_1342_p2[0:0] === 1'b1) ? tmp_37_reg_1994 : grp_fu_536_p4);

assign tmp_15_7_fu_1383_p3 = ((tmp_14_7_fu_1378_p2[0:0] === 1'b1) ? tmp_38_reg_2000 : grp_fu_547_p4);

assign tmp_17_1_cast_fu_1194_p1 = tmp_17_1_fu_1186_p3;

assign tmp_17_1_fu_1186_p3 = ((tmp_116_fu_1178_p3[0:0] === 1'b1) ? 15'd0 : tmp_115_fu_1174_p1);

assign tmp_17_2_cast_fu_1230_p1 = tmp_17_2_fu_1222_p3;

assign tmp_17_2_fu_1222_p3 = ((tmp_118_fu_1214_p3[0:0] === 1'b1) ? 15'd0 : tmp_117_fu_1210_p1);

assign tmp_17_3_cast_fu_1266_p1 = tmp_17_3_fu_1258_p3;

assign tmp_17_3_fu_1258_p3 = ((tmp_120_fu_1250_p3[0:0] === 1'b1) ? 15'd0 : tmp_119_fu_1246_p1);

assign tmp_17_4_cast_fu_1302_p1 = tmp_17_4_fu_1294_p3;

assign tmp_17_4_fu_1294_p3 = ((tmp_122_fu_1286_p3[0:0] === 1'b1) ? 15'd0 : tmp_121_fu_1282_p1);

assign tmp_17_5_cast_fu_1338_p1 = tmp_17_5_fu_1330_p3;

assign tmp_17_5_fu_1330_p3 = ((tmp_124_fu_1322_p3[0:0] === 1'b1) ? 15'd0 : tmp_123_fu_1318_p1);

assign tmp_17_6_cast_fu_1374_p1 = tmp_17_6_fu_1366_p3;

assign tmp_17_6_fu_1366_p3 = ((tmp_126_fu_1358_p3[0:0] === 1'b1) ? 15'd0 : tmp_125_fu_1354_p1);

assign tmp_17_7_fu_1402_p3 = ((tmp_128_fu_1394_p3[0:0] === 1'b1) ? 15'd0 : tmp_127_fu_1390_p1);

assign tmp_1_fu_1680_p1 = a_Data_0_data_out[14:0];

assign tmp_21_1_fu_835_p2 = (($signed(C_1_q0) < $signed(grp_fu_592_p3)) ? 1'b1 : 1'b0);

assign tmp_21_2_fu_873_p2 = (($signed(C_2_q0) < $signed(grp_fu_607_p3)) ? 1'b1 : 1'b0);

assign tmp_21_3_fu_911_p2 = (($signed(C_3_q0) < $signed(grp_fu_622_p3)) ? 1'b1 : 1'b0);

assign tmp_21_4_fu_949_p2 = (($signed(C_4_q0) < $signed(grp_fu_637_p3)) ? 1'b1 : 1'b0);

assign tmp_21_5_fu_987_p2 = (($signed(C_5_q0) < $signed(grp_fu_652_p3)) ? 1'b1 : 1'b0);

assign tmp_21_6_fu_1025_p2 = (($signed(C_6_q0) < $signed(grp_fu_667_p3)) ? 1'b1 : 1'b0);

assign tmp_21_7_fu_1063_p2 = (($signed(C_7_q0) < $signed(grp_fu_682_p3)) ? 1'b1 : 1'b0);

assign tmp_21_fu_1447_p1 = a_Data_0_data_out[15:0];

assign tmp_22_1_fu_841_p3 = ((tmp_21_1_fu_835_p2[0:0] === 1'b1) ? grp_fu_592_p3 : C_1_q0);

assign tmp_22_2_fu_879_p3 = ((tmp_21_2_fu_873_p2[0:0] === 1'b1) ? grp_fu_607_p3 : C_2_q0);

assign tmp_22_3_fu_917_p3 = ((tmp_21_3_fu_911_p2[0:0] === 1'b1) ? grp_fu_622_p3 : C_3_q0);

assign tmp_22_4_fu_955_p3 = ((tmp_21_4_fu_949_p2[0:0] === 1'b1) ? grp_fu_637_p3 : C_4_q0);

assign tmp_22_5_fu_993_p3 = ((tmp_21_5_fu_987_p2[0:0] === 1'b1) ? grp_fu_652_p3 : C_5_q0);

assign tmp_22_6_fu_1031_p3 = ((tmp_21_6_fu_1025_p2[0:0] === 1'b1) ? grp_fu_667_p3 : C_6_q0);

assign tmp_22_7_fu_1069_p3 = ((tmp_21_7_fu_1063_p2[0:0] === 1'b1) ? grp_fu_682_p3 : C_7_q0);

assign tmp_24_1_cast_fu_869_p1 = tmp_24_1_fu_861_p3;

assign tmp_24_1_fu_861_p3 = ((tmp_134_fu_853_p3[0:0] === 1'b1) ? 15'd0 : tmp_133_fu_849_p1);

assign tmp_24_2_cast_fu_907_p1 = tmp_24_2_fu_899_p3;

assign tmp_24_2_fu_899_p3 = ((tmp_136_fu_891_p3[0:0] === 1'b1) ? 15'd0 : tmp_135_fu_887_p1);

assign tmp_24_3_cast_fu_945_p1 = tmp_24_3_fu_937_p3;

assign tmp_24_3_fu_937_p3 = ((tmp_138_fu_929_p3[0:0] === 1'b1) ? 15'd0 : tmp_137_fu_925_p1);

assign tmp_24_4_cast_fu_983_p1 = tmp_24_4_fu_975_p3;

assign tmp_24_4_fu_975_p3 = ((tmp_140_fu_967_p3[0:0] === 1'b1) ? 15'd0 : tmp_139_fu_963_p1);

assign tmp_24_5_cast_fu_1021_p1 = tmp_24_5_fu_1013_p3;

assign tmp_24_5_fu_1013_p3 = ((tmp_142_fu_1005_p3[0:0] === 1'b1) ? 15'd0 : tmp_141_fu_1001_p1);

assign tmp_24_6_cast_fu_1059_p1 = tmp_24_6_fu_1051_p3;

assign tmp_24_6_fu_1051_p3 = ((tmp_144_fu_1043_p3[0:0] === 1'b1) ? 15'd0 : tmp_143_fu_1039_p1);

assign tmp_24_7_fu_1089_p3 = ((tmp_146_fu_1081_p3[0:0] === 1'b1) ? 15'd0 : tmp_145_fu_1077_p1);

assign tmp_29_fu_1455_p2 = (($signed(tmp_21_reg_2080) < $signed(tmp_31_fu_1451_p1)) ? 1'b1 : 1'b0);

assign tmp_2_fu_1684_p3 = a_Data_0_data_out[32'd15];

assign tmp_30_fu_1675_p1 = tmp_99_fu_1655_p9;

assign tmp_31_fu_1451_p1 = a_Data_0_data_out[15:0];

assign tmp_3_1_cast_fu_1730_p1 = tmp_3_1_fu_1722_p3;

assign tmp_3_1_fu_1722_p3 = ((tmp_4_fu_1714_p3[0:0] === 1'b1) ? 15'd0 : tmp_4_cast_fu_1704_p4);

assign tmp_3_2_cast_fu_1760_p1 = tmp_3_2_fu_1752_p3;

assign tmp_3_2_fu_1752_p3 = ((tmp_5_fu_1744_p3[0:0] === 1'b1) ? 15'd0 : tmp_5_cast_fu_1734_p4);

assign tmp_3_3_cast_fu_1790_p1 = tmp_3_3_fu_1782_p3;

assign tmp_3_3_fu_1782_p3 = ((tmp_6_fu_1774_p3[0:0] === 1'b1) ? 15'd0 : tmp_6_cast_fu_1764_p4);

assign tmp_3_4_cast_fu_1820_p1 = tmp_3_4_fu_1812_p3;

assign tmp_3_4_fu_1812_p3 = ((tmp_7_fu_1804_p3[0:0] === 1'b1) ? 15'd0 : tmp_7_cast_fu_1794_p4);

assign tmp_3_5_cast_fu_1850_p1 = tmp_3_5_fu_1842_p3;

assign tmp_3_5_fu_1842_p3 = ((tmp_8_fu_1834_p3[0:0] === 1'b1) ? 15'd0 : tmp_8_cast_fu_1824_p4);

assign tmp_3_6_cast_fu_1880_p1 = tmp_3_6_fu_1872_p3;

assign tmp_3_6_fu_1872_p3 = ((tmp_9_fu_1864_p3[0:0] === 1'b1) ? 15'd0 : tmp_9_cast_fu_1854_p4);

assign tmp_3_7_fu_1902_p3 = ((tmp_10_fu_1894_p3[0:0] === 1'b1) ? 15'd0 : tmp_10_cast_fu_1884_p4);

assign tmp_3_cast_fu_1700_p1 = tmp_3_fu_1692_p3;

assign tmp_3_fu_1692_p3 = ((tmp_2_fu_1684_p3[0:0] === 1'b1) ? 15'd0 : tmp_1_fu_1680_p1);

assign tmp_40_fu_1460_p3 = ((tmp_29_fu_1455_p2[0:0] === 1'b1) ? tmp_31_fu_1451_p1 : tmp_21_reg_2080);

assign tmp_48_fu_1467_p1 = tmp_40_fu_1460_p3[14:0];

assign tmp_4_cast_fu_1704_p4 = {{a_Data_0_data_out[30:16]}};

assign tmp_4_fu_1714_p3 = a_Data_0_data_out[9'd31];

assign tmp_56_fu_1471_p3 = tmp_40_fu_1460_p3[32'd15];

assign tmp_5_cast_fu_1734_p4 = {{a_Data_0_data_out[46:32]}};

assign tmp_5_fu_1744_p3 = a_Data_0_data_out[9'd47];

assign tmp_61_fu_1479_p3 = ((tmp_56_fu_1471_p3[0:0] === 1'b1) ? 15'd0 : tmp_48_fu_1467_p1);

assign tmp_65_fu_1430_p1 = tmp_100_fu_1410_p9;

assign tmp_67_fu_1491_p1 = grp_fu_592_p3[14:0];

assign tmp_6_cast_fu_1764_p4 = {{a_Data_0_data_out[62:48]}};

assign tmp_6_fu_1774_p3 = a_Data_0_data_out[9'd63];

assign tmp_71_fu_1495_p3 = grp_fu_592_p3[32'd15];

assign tmp_76_fu_1515_p1 = grp_fu_607_p3[14:0];

assign tmp_7_cast_fu_1794_p4 = {{a_Data_0_data_out[78:64]}};

assign tmp_7_fu_1804_p3 = a_Data_0_data_out[9'd79];

assign tmp_81_cast_fu_1487_p1 = tmp_61_fu_1479_p3;

assign tmp_81_fu_1519_p3 = grp_fu_607_p3[32'd15];

assign tmp_85_fu_1117_p1 = tmp_101_fu_1097_p9;

assign tmp_86_fu_735_p2 = (($signed(tmp_110_reg_1952) < $signed(tmp_111_fu_719_p1)) ? 1'b1 : 1'b0);

assign tmp_87_fu_740_p3 = ((tmp_86_fu_735_p2[0:0] === 1'b1) ? tmp_111_fu_719_p1 : tmp_110_reg_1952);

assign tmp_88_fu_1126_p2 = (($signed(tmp_112_fu_1122_p1) < $signed(tmp_109_reg_1958)) ? 1'b1 : 1'b0);

assign tmp_89_fu_1131_p3 = ((tmp_88_fu_1126_p2[0:0] === 1'b1) ? tmp_109_reg_1958 : tmp_112_fu_1122_p1);

assign tmp_8_cast_fu_1824_p4 = {{a_Data_0_data_out[94:80]}};

assign tmp_8_fu_1834_p3 = a_Data_0_data_out[9'd95];

assign tmp_90_fu_1539_p1 = grp_fu_622_p3[14:0];

assign tmp_91_cast_fu_1158_p1 = tmp_91_fu_1150_p3;

assign tmp_91_fu_1150_p3 = ((tmp_114_fu_1142_p3[0:0] === 1'b1) ? 15'd0 : tmp_113_fu_1138_p1);

assign tmp_92_fu_785_p2 = (($signed(tmp_129_reg_2015) < $signed(tmp_130_fu_781_p1)) ? 1'b1 : 1'b0);

assign tmp_93_fu_790_p3 = ((tmp_92_fu_785_p2[0:0] === 1'b1) ? tmp_130_fu_781_p1 : tmp_129_reg_2015);

assign tmp_94_fu_797_p2 = (($signed(C_0_q0) < $signed(tmp_93_fu_790_p3)) ? 1'b1 : 1'b0);

assign tmp_95_fu_803_p3 = ((tmp_94_fu_797_p2[0:0] === 1'b1) ? tmp_93_fu_790_p3 : C_0_q0);

assign tmp_96_fu_1543_p3 = grp_fu_622_p3[32'd15];

assign tmp_97_cast_fu_831_p1 = tmp_97_fu_823_p3;

assign tmp_97_fu_823_p3 = ((tmp_132_fu_815_p3[0:0] === 1'b1) ? 15'd0 : tmp_131_fu_811_p1);

assign tmp_98_fu_1563_p1 = grp_fu_637_p3[14:0];

assign tmp_99_fu_1655_p9 = {{{{{{{{tmp_9_7_fu_1647_p3}, {tmp_9_6_cast_fu_1631_p1}}, {tmp_9_5_cast_fu_1607_p1}}, {tmp_9_4_cast_fu_1583_p1}}, {tmp_9_3_cast_fu_1559_p1}}, {tmp_9_2_cast_fu_1535_p1}}, {tmp_9_1_cast_fu_1511_p1}}, {tmp_81_cast_fu_1487_p1}};

assign tmp_9_1_cast_fu_1511_p1 = tmp_9_1_fu_1503_p3;

assign tmp_9_1_fu_1503_p3 = ((tmp_71_fu_1495_p3[0:0] === 1'b1) ? 15'd0 : tmp_67_fu_1491_p1);

assign tmp_9_2_cast_fu_1535_p1 = tmp_9_2_fu_1527_p3;

assign tmp_9_2_fu_1527_p3 = ((tmp_81_fu_1519_p3[0:0] === 1'b1) ? 15'd0 : tmp_76_fu_1515_p1);

assign tmp_9_3_cast_fu_1559_p1 = tmp_9_3_fu_1551_p3;

assign tmp_9_3_fu_1551_p3 = ((tmp_96_fu_1543_p3[0:0] === 1'b1) ? 15'd0 : tmp_90_fu_1539_p1);

assign tmp_9_4_cast_fu_1583_p1 = tmp_9_4_fu_1575_p3;

assign tmp_9_4_fu_1575_p3 = ((tmp_102_fu_1567_p3[0:0] === 1'b1) ? 15'd0 : tmp_98_fu_1563_p1);

assign tmp_9_5_cast_fu_1607_p1 = tmp_9_5_fu_1599_p3;

assign tmp_9_5_fu_1599_p3 = ((tmp_104_fu_1591_p3[0:0] === 1'b1) ? 15'd0 : tmp_103_fu_1587_p1);

assign tmp_9_6_cast_fu_1631_p1 = tmp_9_6_fu_1623_p3;

assign tmp_9_6_fu_1623_p3 = ((tmp_106_fu_1615_p3[0:0] === 1'b1) ? 15'd0 : tmp_105_fu_1611_p1);

assign tmp_9_7_fu_1647_p3 = ((tmp_108_fu_1639_p3[0:0] === 1'b1) ? 15'd0 : tmp_107_fu_1635_p1);

assign tmp_9_cast_fu_1854_p4 = {{a_Data_0_data_out[110:96]}};

assign tmp_9_fu_1864_p3 = a_Data_0_data_out[9'd111];

assign tmp_fu_723_p1 = c_reg_377;

assign tmp_s_fu_769_p1 = ap_phi_mux_c2_phi_fu_393_p4;

endmodule //Layer2_Pooling
