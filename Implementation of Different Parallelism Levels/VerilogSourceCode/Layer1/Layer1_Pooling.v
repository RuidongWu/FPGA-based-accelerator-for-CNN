// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer1_Pooling,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.382000,HLS_SYN_LAT=30,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=994,HLS_SYN_LUT=1531,HLS_VERSION=2018_3}" *)

module Layer1_Pooling (
        ap_clk,
        ap_rst_n,
        a_Data_TDATA,
        a_Data_TVALID,
        a_Data_TREADY,
        Pa_Data_TDATA,
        Pa_Data_TVALID,
        Pa_Data_TREADY
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_pp0_stage1 = 8'd4;
parameter    ap_ST_fsm_state5 = 8'd8;
parameter    ap_ST_fsm_pp1_stage0 = 8'd16;
parameter    ap_ST_fsm_pp1_stage1 = 8'd32;
parameter    ap_ST_fsm_state10 = 8'd64;
parameter    ap_ST_fsm_state11 = 8'd128;

input   ap_clk;
input   ap_rst_n;
input  [255:0] a_Data_TDATA;
input   a_Data_TVALID;
output   a_Data_TREADY;
output  [63:0] Pa_Data_TDATA;
output   Pa_Data_TVALID;
input   Pa_Data_TREADY;

 reg    ap_rst_n_inv;
reg   [255:0] a_Data_0_data_out;
wire    a_Data_0_vld_in;
wire    a_Data_0_vld_out;
wire    a_Data_0_ack_in;
reg    a_Data_0_ack_out;
reg   [255:0] a_Data_0_payload_A;
reg   [255:0] a_Data_0_payload_B;
reg    a_Data_0_sel_rd;
reg    a_Data_0_sel_wr;
wire    a_Data_0_sel;
wire    a_Data_0_load_A;
wire    a_Data_0_load_B;
reg   [1:0] a_Data_0_state;
wire    a_Data_0_state_cmp_full;
reg   [63:0] Pa_Data_1_data_in;
reg   [63:0] Pa_Data_1_data_out;
reg    Pa_Data_1_vld_in;
wire    Pa_Data_1_vld_out;
wire    Pa_Data_1_ack_in;
wire    Pa_Data_1_ack_out;
reg   [63:0] Pa_Data_1_payload_A;
reg   [63:0] Pa_Data_1_payload_B;
reg    Pa_Data_1_sel_rd;
reg    Pa_Data_1_sel_wr;
wire    Pa_Data_1_sel;
wire    Pa_Data_1_load_A;
wire    Pa_Data_1_load_B;
reg   [1:0] Pa_Data_1_state;
wire    Pa_Data_1_state_cmp_full;
wire   [3:0] C_0_address0;
reg    C_0_ce0;
wire   [15:0] C_0_q0;
reg   [3:0] C_0_address1;
reg    C_0_ce1;
reg    C_0_we1;
reg   [15:0] C_0_d1;
wire   [15:0] C_0_q1;
wire   [3:0] C_1_address0;
reg    C_1_ce0;
wire   [15:0] C_1_q0;
reg   [3:0] C_1_address1;
reg    C_1_ce1;
reg    C_1_we1;
reg   [15:0] C_1_d1;
wire   [15:0] C_1_q1;
wire   [3:0] C_2_address0;
reg    C_2_ce0;
wire   [15:0] C_2_q0;
reg   [3:0] C_2_address1;
reg    C_2_ce1;
reg    C_2_we1;
reg   [15:0] C_2_d1;
wire   [15:0] C_2_q1;
wire   [3:0] C_3_address0;
reg    C_3_ce0;
wire   [15:0] C_3_q0;
reg   [3:0] C_3_address1;
reg    C_3_ce1;
reg    C_3_we1;
reg   [15:0] C_3_d1;
wire   [15:0] C_3_q1;
reg    a_Data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond5_reg_1389;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond3_reg_1448;
wire    ap_CS_fsm_state10;
reg    Pa_Data_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond3_reg_1448_pp1_iter1_reg;
wire    ap_CS_fsm_state11;
reg   [2:0] i_reg_362;
reg   [2:0] i3_reg_373;
wire   [0:0] exitcond5_fu_750_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] i_1_fu_756_p2;
reg   [2:0] i_1_reg_1393;
wire   [3:0] tmp_fu_762_p3;
reg   [3:0] tmp_reg_1398;
wire   [15:0] grp_fu_585_p3;
reg   [15:0] p_phi5_reg_1404;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [15:0] grp_fu_599_p3;
reg   [15:0] p_phi6_reg_1409;
wire   [15:0] grp_fu_613_p3;
reg   [15:0] p_phi7_reg_1414;
wire   [15:0] grp_fu_627_p3;
reg   [15:0] p_phi8_reg_1419;
wire   [15:0] tmp_6_fu_819_p3;
reg   [15:0] tmp_6_reg_1424;
wire   [15:0] grp_fu_671_p3;
reg   [15:0] tmp_6_1_reg_1430;
wire   [15:0] grp_fu_706_p3;
reg   [15:0] tmp_6_2_reg_1436;
wire   [15:0] grp_fu_741_p3;
reg   [15:0] tmp_6_3_reg_1442;
wire   [0:0] exitcond3_fu_828_p2;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
reg    ap_block_state8_io;
reg    ap_block_pp1_stage0_11001;
wire   [2:0] i_2_fu_834_p2;
reg   [2:0] i_2_reg_1452;
wire   [63:0] tmp_41_fu_1048_p1;
reg    ap_block_state7_pp1_stage1_iter0;
reg    ap_block_state7_io;
wire    ap_block_state9_pp1_stage1_iter1;
reg    ap_block_state9_io;
reg    ap_block_pp1_stage1_11001;
wire   [14:0] tmp_46_fu_1079_p3;
reg   [14:0] tmp_46_reg_1502;
wire   [14:0] tmp_52_1_fu_1113_p3;
reg   [14:0] tmp_52_1_reg_1507;
wire   [14:0] tmp_52_2_fu_1147_p3;
reg   [14:0] tmp_52_2_reg_1512;
wire   [14:0] tmp_52_3_fu_1181_p3;
reg   [14:0] tmp_52_3_reg_1517;
wire   [63:0] tmp_47_fu_1209_p1;
wire   [63:0] tmp_34_fu_1384_p1;
wire    ap_CS_fsm_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_block_pp1_stage1_subdone;
reg   [2:0] ap_phi_mux_i_phi_fu_366_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_i3_phi_fu_377_p4;
wire   [63:0] tmp_1_fu_774_p1;
wire   [63:0] tmp_9_fu_801_p1;
wire   [63:0] tmp_13_fu_848_p1;
wire   [63:0] tmp_17_fu_862_p1;
reg    ap_block_pp1_stage1_01001;
wire    ap_block_pp1_stage0_01001;
wire   [15:0] p_phi1_fu_787_p3;
wire   [15:0] grp_fu_540_p3;
wire   [15:0] grp_fu_555_p3;
wire   [15:0] grp_fu_570_p3;
wire   [15:0] grp_fu_384_p4;
wire   [15:0] grp_fu_424_p4;
wire   [0:0] grp_fu_534_p2;
wire   [15:0] grp_fu_394_p4;
wire   [15:0] grp_fu_434_p4;
wire   [0:0] grp_fu_549_p2;
wire   [15:0] grp_fu_404_p4;
wire   [15:0] grp_fu_444_p4;
wire   [0:0] grp_fu_564_p2;
wire   [15:0] grp_fu_454_p4;
wire   [15:0] grp_fu_494_p4;
wire   [0:0] grp_fu_579_p2;
wire   [15:0] grp_fu_464_p4;
wire   [15:0] grp_fu_504_p4;
wire   [0:0] grp_fu_593_p2;
wire   [15:0] grp_fu_474_p4;
wire   [15:0] grp_fu_514_p4;
wire   [0:0] grp_fu_607_p2;
wire   [15:0] grp_fu_484_p4;
wire   [15:0] grp_fu_524_p4;
wire   [0:0] grp_fu_621_p2;
wire   [15:0] grp_fu_645_p4;
wire   [15:0] grp_fu_655_p4;
wire   [0:0] grp_fu_665_p2;
wire   [15:0] grp_fu_680_p4;
wire   [15:0] grp_fu_690_p4;
wire   [0:0] grp_fu_700_p2;
wire   [15:0] grp_fu_715_p4;
wire   [15:0] grp_fu_725_p4;
wire   [0:0] grp_fu_735_p2;
wire   [15:0] a_t_Data_0_fu_770_p1;
wire   [15:0] grp_fu_414_p4;
wire   [0:0] tmp_18_fu_781_p2;
wire   [3:0] tmp_8_fu_796_p2;
wire   [15:0] tmp_2_fu_809_p1;
wire   [15:0] grp_fu_635_p4;
wire   [0:0] tmp_5_fu_813_p2;
wire   [3:0] tmp_s_fu_840_p3;
wire   [3:0] tmp_14_fu_856_p2;
wire   [15:0] a_t_Data_0_1_fu_870_p1;
wire   [0:0] tmp_36_fu_874_p2;
wire   [15:0] p_phi9_fu_880_p3;
wire   [0:0] tmp_37_fu_888_p2;
wire   [15:0] tmp_38_fu_894_p3;
wire   [0:0] tmp_59_fu_906_p3;
wire   [14:0] tmp_58_fu_902_p1;
wire   [14:0] tmp_40_fu_914_p3;
wire   [0:0] tmp_38_1_fu_926_p2;
wire   [15:0] tmp_39_1_fu_932_p3;
wire   [0:0] tmp_61_fu_944_p3;
wire   [14:0] tmp_60_fu_940_p1;
wire   [14:0] tmp_41_1_fu_952_p3;
wire   [0:0] tmp_38_2_fu_964_p2;
wire   [15:0] tmp_39_2_fu_970_p3;
wire   [0:0] tmp_63_fu_982_p3;
wire   [14:0] tmp_62_fu_978_p1;
wire   [14:0] tmp_41_2_fu_990_p3;
wire   [0:0] tmp_38_3_fu_1002_p2;
wire   [15:0] tmp_39_3_fu_1008_p3;
wire   [0:0] tmp_65_fu_1020_p3;
wire   [14:0] tmp_64_fu_1016_p1;
wire   [14:0] tmp_41_3_fu_1028_p3;
wire   [15:0] tmp_41_2_cast_fu_998_p1;
wire   [15:0] tmp_41_1_cast_fu_960_p1;
wire   [15:0] tmp_40_cast_fu_922_p1;
wire   [62:0] tmp_48_fu_1036_p5;
wire   [0:0] tmp_43_fu_1053_p2;
wire   [15:0] tmp_44_fu_1059_p3;
wire   [0:0] tmp_67_fu_1071_p3;
wire   [14:0] tmp_66_fu_1067_p1;
wire   [0:0] tmp_49_1_fu_1087_p2;
wire   [15:0] tmp_50_1_fu_1093_p3;
wire   [0:0] tmp_69_fu_1105_p3;
wire   [14:0] tmp_68_fu_1101_p1;
wire   [0:0] tmp_49_2_fu_1121_p2;
wire   [15:0] tmp_50_2_fu_1127_p3;
wire   [0:0] tmp_71_fu_1139_p3;
wire   [14:0] tmp_70_fu_1135_p1;
wire   [0:0] tmp_49_3_fu_1155_p2;
wire   [15:0] tmp_50_3_fu_1161_p3;
wire   [0:0] tmp_73_fu_1173_p3;
wire   [14:0] tmp_72_fu_1169_p1;
wire   [15:0] tmp_52_2_cast_fu_1195_p1;
wire   [15:0] tmp_52_1_cast_fu_1192_p1;
wire   [15:0] tmp_46_cast_fu_1189_p1;
wire   [62:0] tmp_49_fu_1198_p5;
wire   [15:0] tmp_26_fu_1214_p1;
wire   [0:0] tmp_21_fu_1218_p2;
wire   [15:0] tmp_22_fu_1224_p3;
wire   [0:0] tmp_23_fu_1232_p2;
wire   [15:0] tmp_24_fu_1237_p3;
wire   [0:0] tmp_45_fu_1248_p3;
wire   [14:0] tmp_39_fu_1244_p1;
wire   [14:0] tmp_25_fu_1256_p3;
wire   [0:0] tmp_27_1_fu_1268_p2;
wire   [15:0] tmp_28_1_fu_1273_p3;
wire   [0:0] tmp_52_fu_1284_p3;
wire   [14:0] tmp_51_fu_1280_p1;
wire   [14:0] tmp_30_1_fu_1292_p3;
wire   [0:0] tmp_27_2_fu_1304_p2;
wire   [15:0] tmp_28_2_fu_1309_p3;
wire   [0:0] tmp_54_fu_1320_p3;
wire   [14:0] tmp_53_fu_1316_p1;
wire   [14:0] tmp_30_2_fu_1328_p3;
wire   [0:0] tmp_27_3_fu_1340_p2;
wire   [15:0] tmp_28_3_fu_1345_p3;
wire   [0:0] tmp_56_fu_1356_p3;
wire   [14:0] tmp_55_fu_1352_p1;
wire   [14:0] tmp_30_3_fu_1364_p3;
wire   [15:0] tmp_30_2_cast_fu_1336_p1;
wire   [15:0] tmp_30_1_cast_fu_1300_p1;
wire   [15:0] tmp_27_cast_fu_1264_p1;
wire   [62:0] tmp_33_fu_1372_p5;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 a_Data_0_sel_rd = 1'b0;
#0 a_Data_0_sel_wr = 1'b0;
#0 a_Data_0_state = 2'd0;
#0 Pa_Data_1_sel_rd = 1'b0;
#0 Pa_Data_1_sel_wr = 1'b0;
#0 Pa_Data_1_state = 2'd0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Layer1_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
C_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_0_address0),
    .ce0(C_0_ce0),
    .q0(C_0_q0),
    .address1(C_0_address1),
    .ce1(C_0_ce1),
    .we1(C_0_we1),
    .d1(C_0_d1),
    .q1(C_0_q1)
);

Layer1_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
C_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_1_address0),
    .ce0(C_1_ce0),
    .q0(C_1_q0),
    .address1(C_1_address1),
    .ce1(C_1_ce1),
    .we1(C_1_we1),
    .d1(C_1_d1),
    .q1(C_1_q1)
);

Layer1_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
C_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_2_address0),
    .ce0(C_2_ce0),
    .q0(C_2_q0),
    .address1(C_2_address1),
    .ce1(C_2_ce1),
    .we1(C_2_we1),
    .d1(C_2_d1),
    .q1(C_2_q1)
);

Layer1_Pooling_C_0 #(
    .DataWidth( 16 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
C_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_3_address0),
    .ce0(C_3_ce0),
    .q0(C_3_q0),
    .address1(C_3_address1),
    .ce1(C_3_ce1),
    .we1(C_3_we1),
    .d1(C_3_d1),
    .q1(C_3_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_out))) begin
            Pa_Data_1_sel_rd <= ~Pa_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == Pa_Data_1_ack_in) & (1'b1 == Pa_Data_1_vld_in))) begin
            Pa_Data_1_sel_wr <= ~Pa_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        Pa_Data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_vld_in)) | ((2'd3 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_vld_in) & (1'b1 == Pa_Data_1_ack_out)))) begin
            Pa_Data_1_state <= 2'd2;
        end else if ((((2'd1 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_ack_out)) | ((2'd3 == Pa_Data_1_state) & (1'b0 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_in)))) begin
            Pa_Data_1_state <= 2'd1;
        end else if (((~((1'b0 == Pa_Data_1_vld_in) & (1'b1 == Pa_Data_1_ack_out)) & ~((1'b0 == Pa_Data_1_ack_out) & (1'b1 == Pa_Data_1_vld_in)) & (2'd3 == Pa_Data_1_state)) | ((2'd1 == Pa_Data_1_state) & (1'b1 == Pa_Data_1_ack_out)) | ((2'd2 == Pa_Data_1_state) & (1'b1 == Pa_Data_1_vld_in)))) begin
            Pa_Data_1_state <= 2'd3;
        end else begin
            Pa_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_out))) begin
            a_Data_0_sel_rd <= ~a_Data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_in) & (1'b1 == a_Data_0_vld_in))) begin
            a_Data_0_sel_wr <= ~a_Data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == a_Data_0_state) & (1'b0 == a_Data_0_vld_in)) | ((2'd3 == a_Data_0_state) & (1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)))) begin
            a_Data_0_state <= 2'd2;
        end else if ((((2'd1 == a_Data_0_state) & (1'b0 == a_Data_0_ack_out)) | ((2'd3 == a_Data_0_state) & (1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd1;
        end else if (((~((1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)) & ~((1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)) & (2'd3 == a_Data_0_state)) | ((2'd1 == a_Data_0_state) & (1'b1 == a_Data_0_ack_out)) | ((2'd2 == a_Data_0_state) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd3;
        end else begin
            a_Data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
        i3_reg_373 <= 3'd0;
    end else if (((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i3_reg_373 <= i_2_reg_1452;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_362 <= i_1_reg_1393;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_362 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == Pa_Data_1_load_A)) begin
        Pa_Data_1_payload_A <= Pa_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == Pa_Data_1_load_B)) begin
        Pa_Data_1_payload_B <= Pa_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_A)) begin
        a_Data_0_payload_A <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_B)) begin
        a_Data_0_payload_B <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond3_reg_1448 <= exitcond3_fu_828_p2;
        exitcond3_reg_1448_pp1_iter1_reg <= exitcond3_reg_1448;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond5_reg_1389 <= exitcond5_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_1_reg_1393 <= i_1_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_2_reg_1452 <= i_2_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_phi5_reg_1404 <= grp_fu_585_p3;
        p_phi6_reg_1409 <= grp_fu_599_p3;
        p_phi7_reg_1414 <= grp_fu_613_p3;
        p_phi8_reg_1419 <= grp_fu_627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp_46_reg_1502 <= tmp_46_fu_1079_p3;
        tmp_52_1_reg_1507 <= tmp_52_1_fu_1113_p3;
        tmp_52_2_reg_1512 <= tmp_52_2_fu_1147_p3;
        tmp_52_3_reg_1517 <= tmp_52_3_fu_1181_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_6_1_reg_1430 <= grp_fu_671_p3;
        tmp_6_2_reg_1436 <= grp_fu_706_p3;
        tmp_6_3_reg_1442 <= grp_fu_741_p3;
        tmp_6_reg_1424 <= tmp_6_fu_819_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_750_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_1398[3 : 1] <= tmp_fu_762_p3[3 : 1];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_0_address1 = tmp_17_fu_862_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_0_address1 = 4'd12;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_0_address1 = tmp_9_fu_801_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_0_address1 = tmp_1_fu_774_p1;
    end else begin
        C_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_0_ce0 = 1'b1;
    end else begin
        C_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_0_ce1 = 1'b1;
    end else begin
        C_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_0_d1 = tmp_6_fu_819_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_0_d1 = p_phi5_reg_1404;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_0_d1 = p_phi1_fu_787_p3;
    end else begin
        C_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_0_we1 = 1'b1;
    end else begin
        C_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_1_address1 = tmp_17_fu_862_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_1_address1 = 4'd12;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_1_address1 = tmp_9_fu_801_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_1_address1 = tmp_1_fu_774_p1;
    end else begin
        C_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_1_ce0 = 1'b1;
    end else begin
        C_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_1_ce1 = 1'b1;
    end else begin
        C_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_1_d1 = grp_fu_671_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_1_d1 = p_phi6_reg_1409;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_1_d1 = grp_fu_540_p3;
    end else begin
        C_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_1_we1 = 1'b1;
    end else begin
        C_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_2_address1 = tmp_17_fu_862_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_2_address1 = 4'd12;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_2_address1 = tmp_9_fu_801_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_2_address1 = tmp_1_fu_774_p1;
    end else begin
        C_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_2_ce0 = 1'b1;
    end else begin
        C_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_2_ce1 = 1'b1;
    end else begin
        C_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_2_d1 = grp_fu_706_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_2_d1 = p_phi7_reg_1414;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_2_d1 = grp_fu_555_p3;
    end else begin
        C_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_2_we1 = 1'b1;
    end else begin
        C_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_3_address1 = tmp_17_fu_862_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_3_address1 = 4'd12;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_3_address1 = tmp_9_fu_801_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_3_address1 = tmp_1_fu_774_p1;
    end else begin
        C_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        C_3_ce0 = 1'b1;
    end else begin
        C_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_3_ce1 = 1'b1;
    end else begin
        C_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        C_3_d1 = grp_fu_741_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_3_d1 = p_phi8_reg_1419;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_3_d1 = grp_fu_570_p3;
    end else begin
        C_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_3_we1 = 1'b1;
    end else begin
        C_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state10))) begin
        Pa_Data_1_data_in = tmp_34_fu_1384_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (exitcond3_reg_1448 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Pa_Data_1_data_in = tmp_47_fu_1209_p1;
    end else if (((1'b0 == ap_block_pp1_stage1_01001) & (exitcond3_reg_1448 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        Pa_Data_1_data_in = tmp_41_fu_1048_p1;
    end else begin
        Pa_Data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == Pa_Data_1_sel)) begin
        Pa_Data_1_data_out = Pa_Data_1_payload_B;
    end else begin
        Pa_Data_1_data_out = Pa_Data_1_payload_A;
    end
end

always @ (*) begin
    if (((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state10)) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        Pa_Data_1_vld_in = 1'b1;
    end else begin
        Pa_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond3_reg_1448_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        Pa_Data_TDATA_blk_n = Pa_Data_1_state[1'd1];
    end else begin
        Pa_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state10)) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_Data_0_ack_out = 1'b1;
    end else begin
        a_Data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == a_Data_0_sel)) begin
        a_Data_0_data_out = a_Data_0_payload_B;
    end else begin
        a_Data_0_data_out = a_Data_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((exitcond5_reg_1389 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_Data_TDATA_blk_n = a_Data_0_state[1'd0];
    end else begin
        a_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond5_fu_750_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_828_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i3_phi_fu_377_p4 = i_2_reg_1452;
    end else begin
        ap_phi_mux_i3_phi_fu_377_p4 = i3_reg_373;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond5_reg_1389 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_366_p4 = i_1_reg_1393;
    end else begin
        ap_phi_mux_i_phi_fu_366_p4 = i_reg_362;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond5_fu_750_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((exitcond5_fu_750_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond3_fu_828_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond3_fu_828_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((1'b0 == Pa_Data_1_ack_in) | (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == Pa_Data_1_ack_in) & (Pa_Data_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_0_address0 = tmp_13_fu_848_p1;

assign C_1_address0 = tmp_13_fu_848_p1;

assign C_2_address0 = tmp_13_fu_848_p1;

assign C_3_address0 = tmp_13_fu_848_p1;

assign Pa_Data_1_ack_in = Pa_Data_1_state[1'd1];

assign Pa_Data_1_ack_out = Pa_Data_TREADY;

assign Pa_Data_1_load_A = (~Pa_Data_1_sel_wr & Pa_Data_1_state_cmp_full);

assign Pa_Data_1_load_B = (Pa_Data_1_state_cmp_full & Pa_Data_1_sel_wr);

assign Pa_Data_1_sel = Pa_Data_1_sel_rd;

assign Pa_Data_1_state_cmp_full = ((Pa_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign Pa_Data_1_vld_out = Pa_Data_1_state[1'd0];

assign Pa_Data_TDATA = Pa_Data_1_data_out;

assign Pa_Data_TVALID = Pa_Data_1_state[1'd0];

assign a_Data_0_ack_in = a_Data_0_state[1'd1];

assign a_Data_0_load_A = (~a_Data_0_sel_wr & a_Data_0_state_cmp_full);

assign a_Data_0_load_B = (a_Data_0_state_cmp_full & a_Data_0_sel_wr);

assign a_Data_0_sel = a_Data_0_sel_rd;

assign a_Data_0_state_cmp_full = ((a_Data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign a_Data_0_vld_in = a_Data_TVALID;

assign a_Data_0_vld_out = a_Data_0_state[1'd0];

assign a_Data_TREADY = a_Data_0_state[1'd1];

assign a_t_Data_0_1_fu_870_p1 = a_Data_0_data_out[15:0];

assign a_t_Data_0_fu_770_p1 = a_Data_0_data_out[15:0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((exitcond5_reg_1389 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((exitcond5_reg_1389 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((exitcond3_reg_1448 == 1'd0) & (1'b0 == a_Data_0_vld_out) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == a_Data_0_vld_out)))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((exitcond3_reg_1448 == 1'd0) & (1'b0 == a_Data_0_vld_out)))));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((exitcond5_reg_1389 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((exitcond3_reg_1448 == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

always @ (*) begin
    ap_block_state7_pp1_stage1_iter0 = ((exitcond3_reg_1448 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state8_io = ((exitcond3_reg_1448 == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((exitcond3_reg_1448_pp1_iter1_reg == 1'd0) & (1'b0 == Pa_Data_1_ack_in));
end

assign ap_block_state9_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond3_fu_828_p2 = ((ap_phi_mux_i3_phi_fu_377_p4 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond5_fu_750_p2 = ((ap_phi_mux_i_phi_fu_366_p4 == 3'd6) ? 1'b1 : 1'b0);

assign grp_fu_384_p4 = {{a_Data_0_data_out[31:16]}};

assign grp_fu_394_p4 = {{a_Data_0_data_out[47:32]}};

assign grp_fu_404_p4 = {{a_Data_0_data_out[63:48]}};

assign grp_fu_414_p4 = {{a_Data_0_data_out[79:64]}};

assign grp_fu_424_p4 = {{a_Data_0_data_out[95:80]}};

assign grp_fu_434_p4 = {{a_Data_0_data_out[111:96]}};

assign grp_fu_444_p4 = {{a_Data_0_data_out[127:112]}};

assign grp_fu_454_p4 = {{a_Data_0_data_out[143:128]}};

assign grp_fu_464_p4 = {{a_Data_0_data_out[159:144]}};

assign grp_fu_474_p4 = {{a_Data_0_data_out[175:160]}};

assign grp_fu_484_p4 = {{a_Data_0_data_out[191:176]}};

assign grp_fu_494_p4 = {{a_Data_0_data_out[207:192]}};

assign grp_fu_504_p4 = {{a_Data_0_data_out[223:208]}};

assign grp_fu_514_p4 = {{a_Data_0_data_out[239:224]}};

assign grp_fu_524_p4 = {{a_Data_0_data_out[255:240]}};

assign grp_fu_534_p2 = (($signed(grp_fu_384_p4) < $signed(grp_fu_424_p4)) ? 1'b1 : 1'b0);

assign grp_fu_540_p3 = ((grp_fu_534_p2[0:0] === 1'b1) ? grp_fu_424_p4 : grp_fu_384_p4);

assign grp_fu_549_p2 = (($signed(grp_fu_394_p4) < $signed(grp_fu_434_p4)) ? 1'b1 : 1'b0);

assign grp_fu_555_p3 = ((grp_fu_549_p2[0:0] === 1'b1) ? grp_fu_434_p4 : grp_fu_394_p4);

assign grp_fu_564_p2 = (($signed(grp_fu_404_p4) < $signed(grp_fu_444_p4)) ? 1'b1 : 1'b0);

assign grp_fu_570_p3 = ((grp_fu_564_p2[0:0] === 1'b1) ? grp_fu_444_p4 : grp_fu_404_p4);

assign grp_fu_579_p2 = (($signed(grp_fu_454_p4) < $signed(grp_fu_494_p4)) ? 1'b1 : 1'b0);

assign grp_fu_585_p3 = ((grp_fu_579_p2[0:0] === 1'b1) ? grp_fu_494_p4 : grp_fu_454_p4);

assign grp_fu_593_p2 = (($signed(grp_fu_464_p4) < $signed(grp_fu_504_p4)) ? 1'b1 : 1'b0);

assign grp_fu_599_p3 = ((grp_fu_593_p2[0:0] === 1'b1) ? grp_fu_504_p4 : grp_fu_464_p4);

assign grp_fu_607_p2 = (($signed(grp_fu_474_p4) < $signed(grp_fu_514_p4)) ? 1'b1 : 1'b0);

assign grp_fu_613_p3 = ((grp_fu_607_p2[0:0] === 1'b1) ? grp_fu_514_p4 : grp_fu_474_p4);

assign grp_fu_621_p2 = (($signed(grp_fu_484_p4) < $signed(grp_fu_524_p4)) ? 1'b1 : 1'b0);

assign grp_fu_627_p3 = ((grp_fu_621_p2[0:0] === 1'b1) ? grp_fu_524_p4 : grp_fu_484_p4);

assign grp_fu_635_p4 = {{a_Data_0_data_out[79:64]}};

assign grp_fu_645_p4 = {{a_Data_0_data_out[31:16]}};

assign grp_fu_655_p4 = {{a_Data_0_data_out[95:80]}};

assign grp_fu_665_p2 = (($signed(grp_fu_645_p4) < $signed(grp_fu_655_p4)) ? 1'b1 : 1'b0);

assign grp_fu_671_p3 = ((grp_fu_665_p2[0:0] === 1'b1) ? grp_fu_655_p4 : grp_fu_645_p4);

assign grp_fu_680_p4 = {{a_Data_0_data_out[47:32]}};

assign grp_fu_690_p4 = {{a_Data_0_data_out[111:96]}};

assign grp_fu_700_p2 = (($signed(grp_fu_680_p4) < $signed(grp_fu_690_p4)) ? 1'b1 : 1'b0);

assign grp_fu_706_p3 = ((grp_fu_700_p2[0:0] === 1'b1) ? grp_fu_690_p4 : grp_fu_680_p4);

assign grp_fu_715_p4 = {{a_Data_0_data_out[63:48]}};

assign grp_fu_725_p4 = {{a_Data_0_data_out[127:112]}};

assign grp_fu_735_p2 = (($signed(grp_fu_715_p4) < $signed(grp_fu_725_p4)) ? 1'b1 : 1'b0);

assign grp_fu_741_p3 = ((grp_fu_735_p2[0:0] === 1'b1) ? grp_fu_725_p4 : grp_fu_715_p4);

assign i_1_fu_756_p2 = (ap_phi_mux_i_phi_fu_366_p4 + 3'd1);

assign i_2_fu_834_p2 = (ap_phi_mux_i3_phi_fu_377_p4 + 3'd1);

assign p_phi1_fu_787_p3 = ((tmp_18_fu_781_p2[0:0] === 1'b1) ? grp_fu_414_p4 : a_t_Data_0_fu_770_p1);

assign p_phi9_fu_880_p3 = ((tmp_36_fu_874_p2[0:0] === 1'b1) ? grp_fu_414_p4 : a_t_Data_0_1_fu_870_p1);

assign tmp_13_fu_848_p1 = tmp_s_fu_840_p3;

assign tmp_14_fu_856_p2 = (tmp_s_fu_840_p3 | 4'd1);

assign tmp_17_fu_862_p1 = tmp_14_fu_856_p2;

assign tmp_18_fu_781_p2 = (($signed(a_t_Data_0_fu_770_p1) < $signed(grp_fu_414_p4)) ? 1'b1 : 1'b0);

assign tmp_1_fu_774_p1 = tmp_reg_1398;

assign tmp_21_fu_1218_p2 = (($signed(tmp_26_fu_1214_p1) < $signed(grp_fu_635_p4)) ? 1'b1 : 1'b0);

assign tmp_22_fu_1224_p3 = ((tmp_21_fu_1218_p2[0:0] === 1'b1) ? grp_fu_635_p4 : tmp_26_fu_1214_p1);

assign tmp_23_fu_1232_p2 = (($signed(tmp_6_reg_1424) < $signed(tmp_22_fu_1224_p3)) ? 1'b1 : 1'b0);

assign tmp_24_fu_1237_p3 = ((tmp_23_fu_1232_p2[0:0] === 1'b1) ? tmp_22_fu_1224_p3 : tmp_6_reg_1424);

assign tmp_25_fu_1256_p3 = ((tmp_45_fu_1248_p3[0:0] === 1'b1) ? 15'd0 : tmp_39_fu_1244_p1);

assign tmp_26_fu_1214_p1 = a_Data_0_data_out[15:0];

assign tmp_27_1_fu_1268_p2 = (($signed(tmp_6_1_reg_1430) < $signed(grp_fu_671_p3)) ? 1'b1 : 1'b0);

assign tmp_27_2_fu_1304_p2 = (($signed(tmp_6_2_reg_1436) < $signed(grp_fu_706_p3)) ? 1'b1 : 1'b0);

assign tmp_27_3_fu_1340_p2 = (($signed(tmp_6_3_reg_1442) < $signed(grp_fu_741_p3)) ? 1'b1 : 1'b0);

assign tmp_27_cast_fu_1264_p1 = tmp_25_fu_1256_p3;

assign tmp_28_1_fu_1273_p3 = ((tmp_27_1_fu_1268_p2[0:0] === 1'b1) ? grp_fu_671_p3 : tmp_6_1_reg_1430);

assign tmp_28_2_fu_1309_p3 = ((tmp_27_2_fu_1304_p2[0:0] === 1'b1) ? grp_fu_706_p3 : tmp_6_2_reg_1436);

assign tmp_28_3_fu_1345_p3 = ((tmp_27_3_fu_1340_p2[0:0] === 1'b1) ? grp_fu_741_p3 : tmp_6_3_reg_1442);

assign tmp_2_fu_809_p1 = a_Data_0_data_out[15:0];

assign tmp_30_1_cast_fu_1300_p1 = tmp_30_1_fu_1292_p3;

assign tmp_30_1_fu_1292_p3 = ((tmp_52_fu_1284_p3[0:0] === 1'b1) ? 15'd0 : tmp_51_fu_1280_p1);

assign tmp_30_2_cast_fu_1336_p1 = tmp_30_2_fu_1328_p3;

assign tmp_30_2_fu_1328_p3 = ((tmp_54_fu_1320_p3[0:0] === 1'b1) ? 15'd0 : tmp_53_fu_1316_p1);

assign tmp_30_3_fu_1364_p3 = ((tmp_56_fu_1356_p3[0:0] === 1'b1) ? 15'd0 : tmp_55_fu_1352_p1);

assign tmp_33_fu_1372_p5 = {{{{tmp_30_3_fu_1364_p3}, {tmp_30_2_cast_fu_1336_p1}}, {tmp_30_1_cast_fu_1300_p1}}, {tmp_27_cast_fu_1264_p1}};

assign tmp_34_fu_1384_p1 = tmp_33_fu_1372_p5;

assign tmp_36_fu_874_p2 = (($signed(a_t_Data_0_1_fu_870_p1) < $signed(grp_fu_414_p4)) ? 1'b1 : 1'b0);

assign tmp_37_fu_888_p2 = (($signed(C_0_q0) < $signed(p_phi9_fu_880_p3)) ? 1'b1 : 1'b0);

assign tmp_38_1_fu_926_p2 = (($signed(C_1_q0) < $signed(grp_fu_540_p3)) ? 1'b1 : 1'b0);

assign tmp_38_2_fu_964_p2 = (($signed(C_2_q0) < $signed(grp_fu_555_p3)) ? 1'b1 : 1'b0);

assign tmp_38_3_fu_1002_p2 = (($signed(C_3_q0) < $signed(grp_fu_570_p3)) ? 1'b1 : 1'b0);

assign tmp_38_fu_894_p3 = ((tmp_37_fu_888_p2[0:0] === 1'b1) ? p_phi9_fu_880_p3 : C_0_q0);

assign tmp_39_1_fu_932_p3 = ((tmp_38_1_fu_926_p2[0:0] === 1'b1) ? grp_fu_540_p3 : C_1_q0);

assign tmp_39_2_fu_970_p3 = ((tmp_38_2_fu_964_p2[0:0] === 1'b1) ? grp_fu_555_p3 : C_2_q0);

assign tmp_39_3_fu_1008_p3 = ((tmp_38_3_fu_1002_p2[0:0] === 1'b1) ? grp_fu_570_p3 : C_3_q0);

assign tmp_39_fu_1244_p1 = tmp_24_fu_1237_p3[14:0];

assign tmp_40_cast_fu_922_p1 = tmp_40_fu_914_p3;

assign tmp_40_fu_914_p3 = ((tmp_59_fu_906_p3[0:0] === 1'b1) ? 15'd0 : tmp_58_fu_902_p1);

assign tmp_41_1_cast_fu_960_p1 = tmp_41_1_fu_952_p3;

assign tmp_41_1_fu_952_p3 = ((tmp_61_fu_944_p3[0:0] === 1'b1) ? 15'd0 : tmp_60_fu_940_p1);

assign tmp_41_2_cast_fu_998_p1 = tmp_41_2_fu_990_p3;

assign tmp_41_2_fu_990_p3 = ((tmp_63_fu_982_p3[0:0] === 1'b1) ? 15'd0 : tmp_62_fu_978_p1);

assign tmp_41_3_fu_1028_p3 = ((tmp_65_fu_1020_p3[0:0] === 1'b1) ? 15'd0 : tmp_64_fu_1016_p1);

assign tmp_41_fu_1048_p1 = tmp_48_fu_1036_p5;

assign tmp_43_fu_1053_p2 = (($signed(C_0_q1) < $signed(grp_fu_585_p3)) ? 1'b1 : 1'b0);

assign tmp_44_fu_1059_p3 = ((tmp_43_fu_1053_p2[0:0] === 1'b1) ? grp_fu_585_p3 : C_0_q1);

assign tmp_45_fu_1248_p3 = tmp_24_fu_1237_p3[32'd15];

assign tmp_46_cast_fu_1189_p1 = tmp_46_reg_1502;

assign tmp_46_fu_1079_p3 = ((tmp_67_fu_1071_p3[0:0] === 1'b1) ? 15'd0 : tmp_66_fu_1067_p1);

assign tmp_47_fu_1209_p1 = tmp_49_fu_1198_p5;

assign tmp_48_fu_1036_p5 = {{{{tmp_41_3_fu_1028_p3}, {tmp_41_2_cast_fu_998_p1}}, {tmp_41_1_cast_fu_960_p1}}, {tmp_40_cast_fu_922_p1}};

assign tmp_49_1_fu_1087_p2 = (($signed(C_1_q1) < $signed(grp_fu_599_p3)) ? 1'b1 : 1'b0);

assign tmp_49_2_fu_1121_p2 = (($signed(C_2_q1) < $signed(grp_fu_613_p3)) ? 1'b1 : 1'b0);

assign tmp_49_3_fu_1155_p2 = (($signed(C_3_q1) < $signed(grp_fu_627_p3)) ? 1'b1 : 1'b0);

assign tmp_49_fu_1198_p5 = {{{{tmp_52_3_reg_1517}, {tmp_52_2_cast_fu_1195_p1}}, {tmp_52_1_cast_fu_1192_p1}}, {tmp_46_cast_fu_1189_p1}};

assign tmp_50_1_fu_1093_p3 = ((tmp_49_1_fu_1087_p2[0:0] === 1'b1) ? grp_fu_599_p3 : C_1_q1);

assign tmp_50_2_fu_1127_p3 = ((tmp_49_2_fu_1121_p2[0:0] === 1'b1) ? grp_fu_613_p3 : C_2_q1);

assign tmp_50_3_fu_1161_p3 = ((tmp_49_3_fu_1155_p2[0:0] === 1'b1) ? grp_fu_627_p3 : C_3_q1);

assign tmp_51_fu_1280_p1 = tmp_28_1_fu_1273_p3[14:0];

assign tmp_52_1_cast_fu_1192_p1 = tmp_52_1_reg_1507;

assign tmp_52_1_fu_1113_p3 = ((tmp_69_fu_1105_p3[0:0] === 1'b1) ? 15'd0 : tmp_68_fu_1101_p1);

assign tmp_52_2_cast_fu_1195_p1 = tmp_52_2_reg_1512;

assign tmp_52_2_fu_1147_p3 = ((tmp_71_fu_1139_p3[0:0] === 1'b1) ? 15'd0 : tmp_70_fu_1135_p1);

assign tmp_52_3_fu_1181_p3 = ((tmp_73_fu_1173_p3[0:0] === 1'b1) ? 15'd0 : tmp_72_fu_1169_p1);

assign tmp_52_fu_1284_p3 = tmp_28_1_fu_1273_p3[32'd15];

assign tmp_53_fu_1316_p1 = tmp_28_2_fu_1309_p3[14:0];

assign tmp_54_fu_1320_p3 = tmp_28_2_fu_1309_p3[32'd15];

assign tmp_55_fu_1352_p1 = tmp_28_3_fu_1345_p3[14:0];

assign tmp_56_fu_1356_p3 = tmp_28_3_fu_1345_p3[32'd15];

assign tmp_58_fu_902_p1 = tmp_38_fu_894_p3[14:0];

assign tmp_59_fu_906_p3 = tmp_38_fu_894_p3[32'd15];

assign tmp_5_fu_813_p2 = (($signed(tmp_2_fu_809_p1) < $signed(grp_fu_635_p4)) ? 1'b1 : 1'b0);

assign tmp_60_fu_940_p1 = tmp_39_1_fu_932_p3[14:0];

assign tmp_61_fu_944_p3 = tmp_39_1_fu_932_p3[32'd15];

assign tmp_62_fu_978_p1 = tmp_39_2_fu_970_p3[14:0];

assign tmp_63_fu_982_p3 = tmp_39_2_fu_970_p3[32'd15];

assign tmp_64_fu_1016_p1 = tmp_39_3_fu_1008_p3[14:0];

assign tmp_65_fu_1020_p3 = tmp_39_3_fu_1008_p3[32'd15];

assign tmp_66_fu_1067_p1 = tmp_44_fu_1059_p3[14:0];

assign tmp_67_fu_1071_p3 = tmp_44_fu_1059_p3[32'd15];

assign tmp_68_fu_1101_p1 = tmp_50_1_fu_1093_p3[14:0];

assign tmp_69_fu_1105_p3 = tmp_50_1_fu_1093_p3[32'd15];

assign tmp_6_fu_819_p3 = ((tmp_5_fu_813_p2[0:0] === 1'b1) ? grp_fu_635_p4 : tmp_2_fu_809_p1);

assign tmp_70_fu_1135_p1 = tmp_50_2_fu_1127_p3[14:0];

assign tmp_71_fu_1139_p3 = tmp_50_2_fu_1127_p3[32'd15];

assign tmp_72_fu_1169_p1 = tmp_50_3_fu_1161_p3[14:0];

assign tmp_73_fu_1173_p3 = tmp_50_3_fu_1161_p3[32'd15];

assign tmp_8_fu_796_p2 = (tmp_reg_1398 | 4'd1);

assign tmp_9_fu_801_p1 = tmp_8_fu_796_p2;

assign tmp_fu_762_p3 = {{ap_phi_mux_i_phi_fu_366_p4}, {1'd0}};

assign tmp_s_fu_840_p3 = {{ap_phi_mux_i3_phi_fu_377_p4}, {1'd0}};

always @ (posedge ap_clk) begin
    tmp_reg_1398[0] <= 1'b0;
end

endmodule //Layer1_Pooling
