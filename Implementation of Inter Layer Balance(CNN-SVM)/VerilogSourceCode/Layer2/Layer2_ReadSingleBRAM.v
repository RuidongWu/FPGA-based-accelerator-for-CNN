// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer2_ReadSingleBRAM,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.249250,HLS_SYN_LAT=600,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2568,HLS_SYN_LUT=1143,HLS_VERSION=2018_3}" *)

module Layer2_ReadSingleBRAM (
        ap_clk,
        ap_rst_n,
        full_flag,
        full_flag_ap_vld,
        full_flag_ap_ack,
        f_Data_address0,
        f_Data_ce0,
        f_Data_q0,
        a_Data_TDATA,
        a_Data_TVALID,
        a_Data_TREADY
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_pp0_stage0 = 21'd2;
parameter    ap_ST_fsm_pp0_stage1 = 21'd4;
parameter    ap_ST_fsm_pp0_stage2 = 21'd8;
parameter    ap_ST_fsm_pp0_stage3 = 21'd16;
parameter    ap_ST_fsm_pp0_stage4 = 21'd32;
parameter    ap_ST_fsm_pp0_stage5 = 21'd64;
parameter    ap_ST_fsm_pp0_stage6 = 21'd128;
parameter    ap_ST_fsm_pp0_stage7 = 21'd256;
parameter    ap_ST_fsm_pp0_stage8 = 21'd512;
parameter    ap_ST_fsm_state13 = 21'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 21'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 21'd4096;
parameter    ap_ST_fsm_pp1_stage2 = 21'd8192;
parameter    ap_ST_fsm_pp1_stage3 = 21'd16384;
parameter    ap_ST_fsm_pp1_stage4 = 21'd32768;
parameter    ap_ST_fsm_pp1_stage5 = 21'd65536;
parameter    ap_ST_fsm_pp1_stage6 = 21'd131072;
parameter    ap_ST_fsm_pp1_stage7 = 21'd262144;
parameter    ap_ST_fsm_pp1_stage8 = 21'd524288;
parameter    ap_ST_fsm_state25 = 21'd1048576;

input   ap_clk;
input   ap_rst_n;
input   full_flag;
input   full_flag_ap_vld;
output   full_flag_ap_ack;
output  [6:0] f_Data_address0;
output   f_Data_ce0;
input  [255:0] f_Data_q0;
output  [255:0] a_Data_TDATA;
output   a_Data_TVALID;
input   a_Data_TREADY;

reg full_flag_ap_ack;
reg[6:0] f_Data_address0;
reg f_Data_ce0;

 reg    ap_rst_n_inv;
reg   [255:0] a_Data_1_data_in;
reg   [255:0] a_Data_1_data_out;
reg    a_Data_1_vld_in;
wire    a_Data_1_vld_out;
wire    a_Data_1_ack_in;
wire    a_Data_1_ack_out;
reg   [255:0] a_Data_1_payload_A;
reg   [255:0] a_Data_1_payload_B;
reg    a_Data_1_sel_rd;
reg    a_Data_1_sel_wr;
wire    a_Data_1_sel;
wire    a_Data_1_load_A;
wire    a_Data_1_load_B;
reg   [1:0] a_Data_1_state;
wire    a_Data_1_state_cmp_full;
reg    full_flag_blk_n;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state13;
reg    a_Data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_pp1_stage8;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [5:0] tmp_2_dup1_reg_217;
reg   [5:0] tmp_1_dup1_reg_228;
reg   [5:0] tmp_dup1_reg_239;
reg   [0:0] exitcond_reg_250;
reg   [1:0] c_reg_261;
reg   [5:0] s_addr_0_s_reg_272;
reg   [5:0] s_addr_1_s_reg_283;
reg   [5:0] s_addr_2_s_reg_294;
reg   [5:0] s_addr_reg_305;
reg   [5:0] s_addr_s_reg_316;
reg   [5:0] s_addr_1_reg_327;
reg   [5:0] indvar_flatten_reg_338;
reg   [6:0] tmp_6_dup1_reg_350;
reg   [6:0] tmp_5_dup1_reg_361;
reg   [6:0] tmp_4_dup1_reg_372;
reg   [0:0] exitcond2_reg_383;
reg   [1:0] c2_reg_394;
reg   [6:0] s_addr_0_1_reg_405;
reg   [6:0] s_addr_1_1_reg_416;
reg   [6:0] s_addr_2_1_reg_427;
reg   [6:0] s_addr_0_2_reg_438;
reg   [6:0] s_addr_1_2_reg_449;
reg   [6:0] s_addr_2_2_reg_460;
reg   [5:0] indvar_flatten1_reg_471;
reg   [255:0] reg_503;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state15_pp1_stage1_iter0;
wire    ap_block_state24_pp1_stage1_iter1;
reg    ap_block_pp1_stage1_11001;
wire    ap_block_state17_pp1_stage3_iter0;
reg    ap_block_pp1_stage3_11001;
wire    ap_block_state19_pp1_stage5_iter0;
reg    ap_block_pp1_stage5_11001;
reg   [191:0] reg_508;
reg   [127:0] reg_512;
reg   [127:0] reg_516;
wire   [5:0] s_addr_2_1_mid2_fu_520_p3;
reg   [5:0] s_addr_2_1_mid2_reg_940;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] s_addr_1_1_mid2_fu_528_p3;
reg   [5:0] s_addr_1_1_mid2_reg_946;
wire   [5:0] s_addr_0_1_mid2_fu_536_p3;
reg   [5:0] s_addr_0_1_mid2_reg_952;
wire   [5:0] s_addr_2_mid2_fu_544_p3;
reg   [5:0] s_addr_2_mid2_reg_957;
wire   [5:0] s_addr_1_mid2_fu_552_p3;
reg   [5:0] s_addr_1_mid2_reg_963;
wire   [5:0] s_addr_mid2_fu_560_p3;
reg   [5:0] s_addr_mid2_reg_969;
wire   [1:0] c_1_fu_579_p3;
reg   [1:0] c_1_reg_980;
wire   [5:0] s_addr_0_fu_587_p2;
reg   [5:0] s_addr_0_reg_986;
wire   [255:0] tmp_6_fu_601_p3;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [127:0] tmp_1_fu_610_p1;
reg   [127:0] tmp_1_reg_1001;
wire   [255:0] tmp_4_fu_618_p3;
wire   [5:0] s_addr_1_13_fu_626_p2;
reg   [5:0] s_addr_1_13_reg_1016;
wire   [63:0] tmp_7_fu_636_p1;
reg   [63:0] tmp_7_reg_1026;
wire    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
wire   [127:0] tmp_11_fu_640_p1;
reg   [127:0] tmp_11_reg_1031;
wire   [255:0] tmp_10_fu_648_p3;
wire   [5:0] s_addr_2_fu_656_p2;
reg   [5:0] s_addr_2_reg_1046;
wire   [255:0] tmp_13_fu_666_p3;
wire    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [63:0] tmp_14_fu_674_p1;
reg   [63:0] tmp_14_reg_1061;
wire   [127:0] tmp_17_fu_678_p1;
reg   [127:0] tmp_17_reg_1066;
wire   [255:0] tmp_16_fu_682_p3;
wire    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
wire   [0:0] exitcond5_fu_690_p2;
reg   [0:0] exitcond5_reg_1076;
wire   [5:0] tmp_dup_fu_695_p2;
reg   [5:0] tmp_dup_reg_1081;
wire   [5:0] tmp_1_dup_fu_700_p2;
reg   [5:0] tmp_1_dup_reg_1086;
wire   [5:0] tmp_2_dup_fu_705_p2;
reg   [5:0] tmp_2_dup_reg_1091;
wire   [0:0] exitcond_flatten_fu_710_p2;
reg   [0:0] exitcond_flatten_reg_1096;
wire   [255:0] tmp_19_fu_716_p3;
wire   [5:0] indvar_flatten_next_fu_724_p2;
wire   [6:0] s_addr_2_3_mid2_fu_730_p3;
reg   [6:0] s_addr_2_3_mid2_reg_1110;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state23_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] s_addr_1_3_mid2_fu_738_p3;
reg   [6:0] s_addr_1_3_mid2_reg_1116;
wire   [6:0] s_addr_0_3_mid2_fu_746_p3;
reg   [6:0] s_addr_0_3_mid2_reg_1122;
wire   [6:0] s_addr_2_2_mid2_fu_754_p3;
reg   [6:0] s_addr_2_2_mid2_reg_1127;
wire   [6:0] s_addr_1_2_mid2_fu_762_p3;
reg   [6:0] s_addr_1_2_mid2_reg_1133;
wire   [6:0] s_addr_0_2_mid2_fu_770_p3;
reg   [6:0] s_addr_0_2_mid2_reg_1139;
wire   [1:0] c_2_fu_789_p3;
reg   [1:0] c_2_reg_1150;
wire   [6:0] s_addr_0_1_16_fu_797_p2;
reg   [6:0] s_addr_0_1_16_reg_1156;
wire   [255:0] tmp_25_fu_811_p3;
wire    ap_block_state16_pp1_stage2_iter0;
reg    ap_block_pp1_stage2_11001;
wire   [127:0] tmp_26_fu_820_p1;
reg   [127:0] tmp_26_reg_1171;
wire   [255:0] tmp_28_fu_828_p3;
wire   [6:0] s_addr_1_1_17_fu_836_p2;
reg   [6:0] s_addr_1_1_17_reg_1186;
wire   [63:0] tmp_29_fu_846_p1;
reg   [63:0] tmp_29_reg_1196;
wire    ap_block_state18_pp1_stage4_iter0;
reg    ap_block_pp1_stage4_11001;
wire   [127:0] tmp_32_fu_850_p1;
reg   [127:0] tmp_32_reg_1201;
wire   [255:0] tmp_31_fu_858_p3;
wire   [6:0] s_addr_2_1_18_fu_866_p2;
reg   [6:0] s_addr_2_1_18_reg_1216;
wire   [255:0] tmp_34_fu_876_p3;
wire    ap_block_state20_pp1_stage6_iter0;
reg    ap_block_pp1_stage6_11001;
wire   [63:0] tmp_35_fu_884_p1;
reg   [63:0] tmp_35_reg_1231;
wire   [127:0] tmp_38_fu_888_p1;
reg   [127:0] tmp_38_reg_1236;
wire   [255:0] tmp_37_fu_892_p3;
wire    ap_block_state22_pp1_stage8_iter0;
reg    ap_block_pp1_stage8_11001;
wire   [0:0] exitcond1_fu_900_p2;
reg   [0:0] exitcond1_reg_1246;
wire   [6:0] tmp_4_dup_fu_905_p2;
reg   [6:0] tmp_4_dup_reg_1251;
wire   [6:0] tmp_5_dup_fu_910_p2;
reg   [6:0] tmp_5_dup_reg_1256;
wire   [6:0] tmp_6_dup_fu_915_p2;
reg   [6:0] tmp_6_dup_reg_1261;
wire   [0:0] exitcond_flatten8_fu_920_p2;
reg   [0:0] exitcond_flatten8_reg_1266;
wire   [255:0] tmp_40_fu_926_p3;
wire   [5:0] indvar_flatten_next7_fu_934_p2;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp1_stage8_subdone;
reg    ap_block_pp1_stage1_subdone;
reg   [5:0] ap_phi_mux_tmp_2_dup1_phi_fu_221_p4;
reg   [5:0] ap_phi_mux_tmp_1_dup1_phi_fu_232_p4;
reg   [5:0] ap_phi_mux_tmp_dup1_phi_fu_243_p4;
reg   [0:0] ap_phi_mux_exitcond_phi_fu_254_p4;
reg   [1:0] ap_phi_mux_c_phi_fu_265_p4;
reg   [5:0] ap_phi_mux_s_addr_0_s_phi_fu_276_p4;
reg   [5:0] ap_phi_mux_s_addr_1_s_phi_fu_287_p4;
reg   [5:0] ap_phi_mux_s_addr_2_s_phi_fu_298_p4;
reg   [5:0] ap_phi_mux_s_addr_phi_fu_309_p4;
reg   [5:0] ap_phi_mux_s_addr_s_phi_fu_320_p4;
reg   [5:0] ap_phi_mux_s_addr_1_phi_fu_331_p4;
reg   [6:0] ap_phi_mux_tmp_6_dup1_phi_fu_354_p4;
reg   [6:0] ap_phi_mux_tmp_5_dup1_phi_fu_365_p4;
reg   [6:0] ap_phi_mux_tmp_4_dup1_phi_fu_376_p4;
reg   [0:0] ap_phi_mux_exitcond2_phi_fu_387_p4;
reg   [1:0] ap_phi_mux_c2_phi_fu_398_p4;
reg   [6:0] ap_phi_mux_s_addr_0_1_phi_fu_409_p4;
reg   [6:0] ap_phi_mux_s_addr_1_1_phi_fu_420_p4;
reg   [6:0] ap_phi_mux_s_addr_2_1_phi_fu_431_p4;
reg   [6:0] ap_phi_mux_s_addr_0_2_phi_fu_442_p4;
reg   [6:0] ap_phi_mux_s_addr_1_2_phi_fu_453_p4;
reg   [6:0] ap_phi_mux_s_addr_2_2_phi_fu_464_p4;
wire   [63:0] tmp_s_fu_568_p1;
wire   [63:0] tmp_2_fu_592_p1;
wire   [63:0] tmp_1_12_fu_614_p1;
wire   [63:0] tmp_8_1_fu_631_p1;
wire   [63:0] tmp_2_14_fu_644_p1;
wire   [63:0] tmp_8_2_fu_661_p1;
wire   [63:0] tmp_21_fu_778_p1;
wire   [63:0] tmp_22_fu_802_p1;
wire   [63:0] tmp_12_1_fu_824_p1;
wire   [63:0] tmp_15_1_fu_841_p1;
wire   [63:0] tmp_12_2_fu_854_p1;
wire   [63:0] tmp_15_2_fu_871_p1;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage3_01001;
wire    ap_block_pp0_stage4_01001;
wire    ap_block_pp0_stage5_01001;
wire    ap_block_pp0_stage6_01001;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_01001;
wire    ap_block_pp0_stage8_01001;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp1_stage1_01001;
wire    ap_block_pp1_stage2_01001;
wire    ap_block_pp1_stage3_01001;
wire    ap_block_pp1_stage4_01001;
wire    ap_block_pp1_stage5_01001;
wire    ap_block_pp1_stage6_01001;
wire    ap_block_state21_pp1_stage7_iter0;
wire    ap_block_pp1_stage7_01001;
wire    ap_block_pp1_stage8_01001;
wire    ap_block_pp1_stage0_01001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp1_stage7_11001;
wire   [1:0] c_op_fu_573_p2;
wire   [63:0] tmp_fu_597_p1;
wire   [1:0] c2_op_fu_783_p2;
wire   [63:0] tmp_23_fu_807_p1;
reg   [20:0] ap_NS_fsm;
wire    ap_CS_fsm_state25;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_block_pp1_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 a_Data_1_sel_rd = 1'b0;
#0 a_Data_1_sel_wr = 1'b0;
#0 a_Data_1_state = 2'd0;
#0 ap_CS_fsm = 21'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_1_ack_out) & (1'b1 == a_Data_1_vld_out))) begin
            a_Data_1_sel_rd <= ~a_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_1_ack_in) & (1'b1 == a_Data_1_vld_in))) begin
            a_Data_1_sel_wr <= ~a_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == a_Data_1_state) & (1'b0 == a_Data_1_vld_in)) | ((2'd3 == a_Data_1_state) & (1'b0 == a_Data_1_vld_in) & (1'b1 == a_Data_1_ack_out)))) begin
            a_Data_1_state <= 2'd2;
        end else if ((((2'd1 == a_Data_1_state) & (1'b0 == a_Data_1_ack_out)) | ((2'd3 == a_Data_1_state) & (1'b0 == a_Data_1_ack_out) & (1'b1 == a_Data_1_vld_in)))) begin
            a_Data_1_state <= 2'd1;
        end else if (((~((1'b0 == a_Data_1_vld_in) & (1'b1 == a_Data_1_ack_out)) & ~((1'b0 == a_Data_1_ack_out) & (1'b1 == a_Data_1_vld_in)) & (2'd3 == a_Data_1_state)) | ((2'd1 == a_Data_1_state) & (1'b1 == a_Data_1_ack_out)) | ((2'd2 == a_Data_1_state) & (1'b1 == a_Data_1_vld_in)))) begin
            a_Data_1_state <= 2'd3;
        end else begin
            a_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (exitcond_flatten_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage8_subdone) & (exitcond_flatten8_fu_920_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage8_subdone) & (1'b1 == ap_CS_fsm_pp1_stage8)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c2_reg_394 <= c_2_reg_1150;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        c2_reg_394 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_reg_261 <= c_1_reg_980;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_261 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond2_reg_383 <= exitcond1_reg_1246;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        exitcond2_reg_383 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_reg_250 <= exitcond5_reg_1076;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        exitcond_reg_250 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        indvar_flatten1_reg_471 <= indvar_flatten_next7_fu_934_p2;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        indvar_flatten1_reg_471 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_reg_338 <= indvar_flatten_next_fu_724_p2;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_338 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_0_1_reg_405 <= s_addr_0_1_16_reg_1156;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_0_1_reg_405 <= 7'd52;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_0_2_reg_438 <= s_addr_0_2_mid2_reg_1139;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_0_2_reg_438 <= 7'd52;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_0_s_reg_272 <= s_addr_0_reg_986;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_addr_0_s_reg_272 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_1_1_reg_416 <= s_addr_1_1_17_reg_1186;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_1_1_reg_416 <= 7'd56;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_1_2_reg_449 <= s_addr_1_2_mid2_reg_1133;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_1_2_reg_449 <= 7'd56;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_1_reg_327 <= s_addr_2_mid2_reg_957;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_addr_1_reg_327 <= 6'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_1_s_reg_283 <= s_addr_1_13_reg_1016;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_addr_1_s_reg_283 <= 6'd4;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_2_1_reg_427 <= s_addr_2_1_18_reg_1216;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_2_1_reg_427 <= 7'd60;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_2_2_reg_460 <= s_addr_2_2_mid2_reg_1127;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_2_2_reg_460 <= 7'd60;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_2_s_reg_294 <= s_addr_2_reg_1046;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_addr_2_s_reg_294 <= 6'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_reg_305 <= s_addr_mid2_reg_969;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_addr_reg_305 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_s_reg_316 <= s_addr_1_mid2_reg_963;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        s_addr_s_reg_316 <= 6'd4;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_dup1_reg_228 <= tmp_1_dup_reg_1086;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_1_dup1_reg_228 <= 6'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_dup1_reg_217 <= tmp_2_dup_reg_1091;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_2_dup1_reg_217 <= 6'd12;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_4_dup1_reg_372 <= tmp_4_dup_reg_1251;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_4_dup1_reg_372 <= 7'd56;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_5_dup1_reg_361 <= tmp_5_dup_reg_1256;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_5_dup1_reg_361 <= 7'd60;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_6_dup1_reg_350 <= tmp_6_dup_reg_1261;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_6_dup1_reg_350 <= 7'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dup1_reg_239 <= tmp_dup_reg_1081;
    end else if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_dup1_reg_239 <= 6'd4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_1_load_A)) begin
        a_Data_1_payload_A <= a_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_1_load_B)) begin
        a_Data_1_payload_B <= a_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c_1_reg_980 <= c_1_fu_579_p3;
        s_addr_1_mid2_reg_963 <= s_addr_1_mid2_fu_552_p3;
        s_addr_2_mid2_reg_957 <= s_addr_2_mid2_fu_544_p3;
        s_addr_mid2_reg_969 <= s_addr_mid2_fu_560_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c_2_reg_1150 <= c_2_fu_789_p3;
        s_addr_0_2_mid2_reg_1139 <= s_addr_0_2_mid2_fu_770_p3;
        s_addr_1_2_mid2_reg_1133 <= s_addr_1_2_mid2_fu_762_p3;
        s_addr_2_2_mid2_reg_1127 <= s_addr_2_2_mid2_fu_754_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage8_11001) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        exitcond1_reg_1246 <= exitcond1_fu_900_p2;
        tmp_4_dup_reg_1251 <= tmp_4_dup_fu_905_p2;
        tmp_5_dup_reg_1256 <= tmp_5_dup_fu_910_p2;
        tmp_6_dup_reg_1261 <= tmp_6_dup_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exitcond5_reg_1076 <= exitcond5_fu_690_p2;
        tmp_1_dup_reg_1086 <= tmp_1_dup_fu_700_p2;
        tmp_2_dup_reg_1091 <= tmp_2_dup_fu_705_p2;
        tmp_dup_reg_1081 <= tmp_dup_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage8_11001) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
        exitcond_flatten8_reg_1266 <= exitcond_flatten8_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        exitcond_flatten_reg_1096 <= exitcond_flatten_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_503 <= f_Data_q0;
        reg_508 <= {{f_Data_q0[255:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_512 <= {{f_Data_q0[255:128]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_516 <= {{f_Data_q0[255:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        s_addr_0_1_16_reg_1156 <= s_addr_0_1_16_fu_797_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_addr_0_1_mid2_reg_952 <= s_addr_0_1_mid2_fu_536_p3;
        s_addr_1_1_mid2_reg_946 <= s_addr_1_1_mid2_fu_528_p3;
        s_addr_2_1_mid2_reg_940 <= s_addr_2_1_mid2_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_addr_0_3_mid2_reg_1122 <= s_addr_0_3_mid2_fu_746_p3;
        s_addr_1_3_mid2_reg_1116 <= s_addr_1_3_mid2_fu_738_p3;
        s_addr_2_3_mid2_reg_1110 <= s_addr_2_3_mid2_fu_730_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_addr_0_reg_986 <= s_addr_0_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        s_addr_1_13_reg_1016 <= s_addr_1_13_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        s_addr_1_1_17_reg_1186 <= s_addr_1_1_17_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        s_addr_2_1_18_reg_1216 <= s_addr_2_1_18_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        s_addr_2_reg_1046 <= s_addr_2_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_11_reg_1031 <= tmp_11_fu_640_p1;
        tmp_7_reg_1026 <= tmp_7_fu_636_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_14_reg_1061 <= tmp_14_fu_674_p1;
        tmp_17_reg_1066 <= tmp_17_fu_678_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_1_reg_1001 <= tmp_1_fu_610_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        tmp_26_reg_1171 <= tmp_26_fu_820_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        tmp_29_reg_1196 <= tmp_29_fu_846_p1;
        tmp_32_reg_1201 <= tmp_32_fu_850_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
        tmp_35_reg_1231 <= tmp_35_fu_884_p1;
        tmp_38_reg_1236 <= tmp_38_fu_888_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_Data_1_data_in = tmp_40_fu_926_p3;
    end else if (((1'b0 == ap_block_pp1_stage8_01001) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_37_fu_892_p3;
    end else if (((1'b0 == ap_block_pp1_stage6_01001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_34_fu_876_p3;
    end else if (((1'b0 == ap_block_pp1_stage5_01001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_31_fu_858_p3;
    end else if (((1'b0 == ap_block_pp1_stage3_01001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_28_fu_828_p3;
    end else if (((1'b0 == ap_block_pp1_stage2_01001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_25_fu_811_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_Data_1_data_in = tmp_19_fu_716_p3;
    end else if (((1'b0 == ap_block_pp0_stage8_01001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_16_fu_682_p3;
    end else if (((1'b0 == ap_block_pp0_stage6_01001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_13_fu_666_p3;
    end else if (((1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_10_fu_648_p3;
    end else if ((((1'b0 == ap_block_pp1_stage7_01001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_01001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        a_Data_1_data_in = reg_503;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_4_fu_618_p3;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_Data_1_data_in = tmp_6_fu_601_p3;
    end else if ((((1'b0 == ap_block_pp1_stage1_01001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_Data_1_data_in = f_Data_q0;
    end else begin
        a_Data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == a_Data_1_sel)) begin
        a_Data_1_data_out = a_Data_1_payload_B;
    end else begin
        a_Data_1_data_out = a_Data_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage8_11001) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_Data_1_vld_in = 1'b1;
    end else begin
        a_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        a_Data_TDATA_blk_n = a_Data_1_state[1'd1];
    end else begin
        a_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_c2_phi_fu_398_p4 = c_2_reg_1150;
    end else begin
        ap_phi_mux_c2_phi_fu_398_p4 = c2_reg_394;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_phi_fu_265_p4 = c_1_reg_980;
    end else begin
        ap_phi_mux_c_phi_fu_265_p4 = c_reg_261;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_exitcond2_phi_fu_387_p4 = exitcond1_reg_1246;
    end else begin
        ap_phi_mux_exitcond2_phi_fu_387_p4 = exitcond2_reg_383;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_exitcond_phi_fu_254_p4 = exitcond5_reg_1076;
    end else begin
        ap_phi_mux_exitcond_phi_fu_254_p4 = exitcond_reg_250;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_s_addr_0_1_phi_fu_409_p4 = s_addr_0_1_16_reg_1156;
    end else begin
        ap_phi_mux_s_addr_0_1_phi_fu_409_p4 = s_addr_0_1_reg_405;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_s_addr_0_2_phi_fu_442_p4 = s_addr_0_2_mid2_reg_1139;
    end else begin
        ap_phi_mux_s_addr_0_2_phi_fu_442_p4 = s_addr_0_2_reg_438;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_s_addr_0_s_phi_fu_276_p4 = s_addr_0_reg_986;
    end else begin
        ap_phi_mux_s_addr_0_s_phi_fu_276_p4 = s_addr_0_s_reg_272;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_s_addr_1_1_phi_fu_420_p4 = s_addr_1_1_17_reg_1186;
    end else begin
        ap_phi_mux_s_addr_1_1_phi_fu_420_p4 = s_addr_1_1_reg_416;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_s_addr_1_2_phi_fu_453_p4 = s_addr_1_2_mid2_reg_1133;
    end else begin
        ap_phi_mux_s_addr_1_2_phi_fu_453_p4 = s_addr_1_2_reg_449;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_s_addr_1_phi_fu_331_p4 = s_addr_2_mid2_reg_957;
    end else begin
        ap_phi_mux_s_addr_1_phi_fu_331_p4 = s_addr_1_reg_327;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_s_addr_1_s_phi_fu_287_p4 = s_addr_1_13_reg_1016;
    end else begin
        ap_phi_mux_s_addr_1_s_phi_fu_287_p4 = s_addr_1_s_reg_283;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_s_addr_2_1_phi_fu_431_p4 = s_addr_2_1_18_reg_1216;
    end else begin
        ap_phi_mux_s_addr_2_1_phi_fu_431_p4 = s_addr_2_1_reg_427;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_s_addr_2_2_phi_fu_464_p4 = s_addr_2_2_mid2_reg_1127;
    end else begin
        ap_phi_mux_s_addr_2_2_phi_fu_464_p4 = s_addr_2_2_reg_460;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_s_addr_2_s_phi_fu_298_p4 = s_addr_2_reg_1046;
    end else begin
        ap_phi_mux_s_addr_2_s_phi_fu_298_p4 = s_addr_2_s_reg_294;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_s_addr_phi_fu_309_p4 = s_addr_mid2_reg_969;
    end else begin
        ap_phi_mux_s_addr_phi_fu_309_p4 = s_addr_reg_305;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_s_addr_s_phi_fu_320_p4 = s_addr_1_mid2_reg_963;
    end else begin
        ap_phi_mux_s_addr_s_phi_fu_320_p4 = s_addr_s_reg_316;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_1_dup1_phi_fu_232_p4 = tmp_1_dup_reg_1086;
    end else begin
        ap_phi_mux_tmp_1_dup1_phi_fu_232_p4 = tmp_1_dup1_reg_228;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_2_dup1_phi_fu_221_p4 = tmp_2_dup_reg_1091;
    end else begin
        ap_phi_mux_tmp_2_dup1_phi_fu_221_p4 = tmp_2_dup1_reg_217;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_tmp_4_dup1_phi_fu_376_p4 = tmp_4_dup_reg_1251;
    end else begin
        ap_phi_mux_tmp_4_dup1_phi_fu_376_p4 = tmp_4_dup1_reg_372;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_tmp_5_dup1_phi_fu_365_p4 = tmp_5_dup_reg_1256;
    end else begin
        ap_phi_mux_tmp_5_dup1_phi_fu_365_p4 = tmp_5_dup1_reg_361;
    end
end

always @ (*) begin
    if (((exitcond_flatten8_reg_1266 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_tmp_6_dup1_phi_fu_354_p4 = tmp_6_dup_reg_1261;
    end else begin
        ap_phi_mux_tmp_6_dup1_phi_fu_354_p4 = tmp_6_dup1_reg_350;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_dup1_phi_fu_243_p4 = tmp_dup_reg_1081;
    end else begin
        ap_phi_mux_tmp_dup1_phi_fu_243_p4 = tmp_dup1_reg_239;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        f_Data_address0 = tmp_15_2_fu_871_p1;
    end else if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        f_Data_address0 = tmp_12_2_fu_854_p1;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        f_Data_address0 = tmp_15_1_fu_841_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        f_Data_address0 = tmp_12_1_fu_824_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        f_Data_address0 = tmp_22_fu_802_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        f_Data_address0 = tmp_21_fu_778_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        f_Data_address0 = tmp_8_2_fu_661_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        f_Data_address0 = tmp_2_14_fu_644_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        f_Data_address0 = tmp_8_1_fu_631_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        f_Data_address0 = tmp_1_12_fu_614_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        f_Data_address0 = tmp_2_fu_592_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        f_Data_address0 = tmp_s_fu_568_p1;
    end else begin
        f_Data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        f_Data_ce0 = 1'b1;
    end else begin
        f_Data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        full_flag_ap_ack = 1'b1;
    end else begin
        full_flag_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state1))) begin
        full_flag_blk_n = full_flag_ap_vld;
    end else begin
        full_flag_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((full_flag_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((1'b0 == ap_block_pp1_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == a_Data_1_ack_in) & (a_Data_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Data_1_ack_in = a_Data_1_state[1'd1];

assign a_Data_1_ack_out = a_Data_TREADY;

assign a_Data_1_load_A = (~a_Data_1_sel_wr & a_Data_1_state_cmp_full);

assign a_Data_1_load_B = (a_Data_1_state_cmp_full & a_Data_1_sel_wr);

assign a_Data_1_sel = a_Data_1_sel_rd;

assign a_Data_1_state_cmp_full = ((a_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign a_Data_1_vld_out = a_Data_1_state[1'd0];

assign a_Data_TDATA = a_Data_1_data_out;

assign a_Data_TVALID = a_Data_1_state[1'd0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage7_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage8_11001 = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage8_subdone = ((1'b0 == a_Data_1_ack_in) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c2_op_fu_783_p2 = (2'd1 + ap_phi_mux_c2_phi_fu_398_p4);

assign c_1_fu_579_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? 2'd1 : c_op_fu_573_p2);

assign c_2_fu_789_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? 2'd1 : c2_op_fu_783_p2);

assign c_op_fu_573_p2 = (2'd1 + ap_phi_mux_c_phi_fu_265_p4);

assign exitcond1_fu_900_p2 = ((c_2_reg_1150 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond5_fu_690_p2 = ((c_1_reg_980 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_920_p2 = ((indvar_flatten1_reg_471 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_710_p2 = ((indvar_flatten_reg_338 == 6'd32) ? 1'b1 : 1'b0);

assign indvar_flatten_next7_fu_934_p2 = (6'd1 + indvar_flatten1_reg_471);

assign indvar_flatten_next_fu_724_p2 = (6'd1 + indvar_flatten_reg_338);

assign s_addr_0_1_16_fu_797_p2 = (7'd1 + s_addr_0_3_mid2_reg_1122);

assign s_addr_0_1_mid2_fu_536_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_dup1_phi_fu_243_p4 : ap_phi_mux_s_addr_0_s_phi_fu_276_p4);

assign s_addr_0_2_mid2_fu_770_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_4_dup1_phi_fu_376_p4 : ap_phi_mux_s_addr_0_2_phi_fu_442_p4);

assign s_addr_0_3_mid2_fu_746_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_4_dup1_phi_fu_376_p4 : ap_phi_mux_s_addr_0_1_phi_fu_409_p4);

assign s_addr_0_fu_587_p2 = (6'd1 + s_addr_0_1_mid2_reg_952);

assign s_addr_1_13_fu_626_p2 = (6'd1 + s_addr_1_1_mid2_reg_946);

assign s_addr_1_1_17_fu_836_p2 = (7'd1 + s_addr_1_3_mid2_reg_1116);

assign s_addr_1_1_mid2_fu_528_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_1_dup1_phi_fu_232_p4 : ap_phi_mux_s_addr_1_s_phi_fu_287_p4);

assign s_addr_1_2_mid2_fu_762_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_5_dup1_phi_fu_365_p4 : ap_phi_mux_s_addr_1_2_phi_fu_453_p4);

assign s_addr_1_3_mid2_fu_738_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_5_dup1_phi_fu_365_p4 : ap_phi_mux_s_addr_1_1_phi_fu_420_p4);

assign s_addr_1_mid2_fu_552_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_1_dup1_phi_fu_232_p4 : ap_phi_mux_s_addr_s_phi_fu_320_p4);

assign s_addr_2_1_18_fu_866_p2 = (7'd1 + s_addr_2_3_mid2_reg_1110);

assign s_addr_2_1_mid2_fu_520_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_2_dup1_phi_fu_221_p4 : ap_phi_mux_s_addr_2_s_phi_fu_298_p4);

assign s_addr_2_2_mid2_fu_754_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_6_dup1_phi_fu_354_p4 : ap_phi_mux_s_addr_2_2_phi_fu_464_p4);

assign s_addr_2_3_mid2_fu_730_p3 = ((ap_phi_mux_exitcond2_phi_fu_387_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_6_dup1_phi_fu_354_p4 : ap_phi_mux_s_addr_2_1_phi_fu_431_p4);

assign s_addr_2_fu_656_p2 = (6'd1 + s_addr_2_1_mid2_reg_940);

assign s_addr_2_mid2_fu_544_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_2_dup1_phi_fu_221_p4 : ap_phi_mux_s_addr_1_phi_fu_331_p4);

assign s_addr_mid2_fu_560_p3 = ((ap_phi_mux_exitcond_phi_fu_254_p4[0:0] === 1'b1) ? ap_phi_mux_tmp_dup1_phi_fu_243_p4 : ap_phi_mux_s_addr_phi_fu_309_p4);

assign tmp_10_fu_648_p3 = {{tmp_7_reg_1026}, {reg_508}};

assign tmp_11_fu_640_p1 = f_Data_q0[127:0];

assign tmp_12_1_fu_824_p1 = s_addr_1_3_mid2_reg_1116;

assign tmp_12_2_fu_854_p1 = s_addr_2_3_mid2_reg_1110;

assign tmp_13_fu_666_p3 = {{tmp_11_reg_1031}, {reg_512}};

assign tmp_14_fu_674_p1 = f_Data_q0[63:0];

assign tmp_15_1_fu_841_p1 = s_addr_1_1_17_fu_836_p2;

assign tmp_15_2_fu_871_p1 = s_addr_2_1_18_fu_866_p2;

assign tmp_16_fu_682_p3 = {{tmp_14_reg_1061}, {reg_508}};

assign tmp_17_fu_678_p1 = f_Data_q0[127:0];

assign tmp_19_fu_716_p3 = {{tmp_17_reg_1066}, {reg_516}};

assign tmp_1_12_fu_614_p1 = s_addr_1_1_mid2_reg_946;

assign tmp_1_dup_fu_700_p2 = (6'd4 + s_addr_1_mid2_reg_963);

assign tmp_1_fu_610_p1 = f_Data_q0[127:0];

assign tmp_21_fu_778_p1 = s_addr_0_3_mid2_fu_746_p3;

assign tmp_22_fu_802_p1 = s_addr_0_1_16_fu_797_p2;

assign tmp_23_fu_807_p1 = f_Data_q0[63:0];

assign tmp_25_fu_811_p3 = {{tmp_23_fu_807_p1}, {reg_508}};

assign tmp_26_fu_820_p1 = f_Data_q0[127:0];

assign tmp_28_fu_828_p3 = {{tmp_26_reg_1171}, {reg_512}};

assign tmp_29_fu_846_p1 = f_Data_q0[63:0];

assign tmp_2_14_fu_644_p1 = s_addr_2_1_mid2_reg_940;

assign tmp_2_dup_fu_705_p2 = (6'd4 + s_addr_2_mid2_reg_957);

assign tmp_2_fu_592_p1 = s_addr_0_fu_587_p2;

assign tmp_31_fu_858_p3 = {{tmp_29_reg_1196}, {reg_508}};

assign tmp_32_fu_850_p1 = f_Data_q0[127:0];

assign tmp_34_fu_876_p3 = {{tmp_32_reg_1201}, {reg_512}};

assign tmp_35_fu_884_p1 = f_Data_q0[63:0];

assign tmp_37_fu_892_p3 = {{tmp_35_reg_1231}, {reg_508}};

assign tmp_38_fu_888_p1 = f_Data_q0[127:0];

assign tmp_40_fu_926_p3 = {{tmp_38_reg_1236}, {reg_516}};

assign tmp_4_dup_fu_905_p2 = (7'd4 + s_addr_0_2_mid2_reg_1139);

assign tmp_4_fu_618_p3 = {{tmp_1_reg_1001}, {reg_512}};

assign tmp_5_dup_fu_910_p2 = (7'd4 + s_addr_1_2_mid2_reg_1133);

assign tmp_6_dup_fu_915_p2 = (7'd4 + s_addr_2_2_mid2_reg_1127);

assign tmp_6_fu_601_p3 = {{tmp_fu_597_p1}, {reg_508}};

assign tmp_7_fu_636_p1 = f_Data_q0[63:0];

assign tmp_8_1_fu_631_p1 = s_addr_1_13_fu_626_p2;

assign tmp_8_2_fu_661_p1 = s_addr_2_fu_656_p2;

assign tmp_dup_fu_695_p2 = (6'd4 + s_addr_mid2_reg_969);

assign tmp_fu_597_p1 = f_Data_q0[63:0];

assign tmp_s_fu_568_p1 = s_addr_0_1_mid2_fu_536_p3;

endmodule //Layer2_ReadSingleBRAM
