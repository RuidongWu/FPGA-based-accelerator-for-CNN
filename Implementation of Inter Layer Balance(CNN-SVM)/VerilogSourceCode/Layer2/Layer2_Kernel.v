// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer2_Kernel,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.593500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4425,HLS_SYN_LUT=3014,HLS_VERSION=2018_3}" *)

module Layer2_Kernel (
        ap_clk,
        ap_rst_n,
        weight_TDATA,
        weight_TVALID,
        weight_TREADY,
        b_Data_TDATA,
        b_Data_TVALID,
        b_Data_TREADY,
        Bias_Data
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 20'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 20'd4096;
parameter    ap_ST_fsm_pp1_stage2 = 20'd8192;
parameter    ap_ST_fsm_pp1_stage3 = 20'd16384;
parameter    ap_ST_fsm_pp1_stage4 = 20'd32768;
parameter    ap_ST_fsm_pp1_stage5 = 20'd65536;
parameter    ap_ST_fsm_pp1_stage6 = 20'd131072;
parameter    ap_ST_fsm_pp1_stage7 = 20'd262144;
parameter    ap_ST_fsm_pp1_stage8 = 20'd524288;

input   ap_clk;
input   ap_rst_n;
input  [15:0] weight_TDATA;
input   weight_TVALID;
output   weight_TREADY;
output  [511:0] b_Data_TDATA;
output   b_Data_TVALID;
input   b_Data_TREADY;
output  [127:0] Bias_Data;

 reg    ap_rst_n_inv;
reg   [15:0] weight_0_data_out;
wire    weight_0_vld_in;
wire    weight_0_vld_out;
wire    weight_0_ack_in;
reg    weight_0_ack_out;
reg   [15:0] weight_0_payload_A;
reg   [15:0] weight_0_payload_B;
reg    weight_0_sel_rd;
reg    weight_0_sel_wr;
wire    weight_0_sel;
wire    weight_0_load_A;
wire    weight_0_load_B;
reg   [1:0] weight_0_state;
wire    weight_0_state_cmp_full;
reg   [511:0] b_Data_1_data_in;
reg   [511:0] b_Data_1_data_out;
reg    b_Data_1_vld_in;
wire    b_Data_1_vld_out;
wire    b_Data_1_ack_in;
wire    b_Data_1_ack_out;
reg   [511:0] b_Data_1_payload_A;
reg   [511:0] b_Data_1_payload_B;
reg    b_Data_1_sel_rd;
reg    b_Data_1_sel_wr;
wire    b_Data_1_sel;
wire    b_Data_1_load_A;
wire    b_Data_1_load_B;
reg   [1:0] b_Data_1_state;
wire    b_Data_1_state_cmp_full;
reg   [127:0] Bias_Data_1_data_reg;
reg    Bias_Data_1_vld_reg;
reg    Bias_Data_1_vld_in;
reg   [3:0] kernel_0_0_address0;
reg    kernel_0_0_ce0;
reg    kernel_0_0_we0;
wire   [15:0] kernel_0_0_q0;
reg   [3:0] kernel_0_0_address1;
reg    kernel_0_0_ce1;
wire   [15:0] kernel_0_0_q1;
reg   [3:0] kernel_0_1_address0;
reg    kernel_0_1_ce0;
reg    kernel_0_1_we0;
wire   [15:0] kernel_0_1_q0;
reg   [3:0] kernel_0_1_address1;
reg    kernel_0_1_ce1;
wire   [15:0] kernel_0_1_q1;
reg   [3:0] kernel_0_2_address0;
reg    kernel_0_2_ce0;
reg    kernel_0_2_we0;
wire   [15:0] kernel_0_2_q0;
reg   [3:0] kernel_0_2_address1;
reg    kernel_0_2_ce1;
wire   [15:0] kernel_0_2_q1;
reg   [3:0] kernel_0_3_address0;
reg    kernel_0_3_ce0;
reg    kernel_0_3_we0;
wire   [15:0] kernel_0_3_q0;
reg   [3:0] kernel_0_3_address1;
reg    kernel_0_3_ce1;
wire   [15:0] kernel_0_3_q1;
reg   [3:0] kernel_0_4_address0;
reg    kernel_0_4_ce0;
reg    kernel_0_4_we0;
wire   [15:0] kernel_0_4_q0;
reg   [3:0] kernel_0_4_address1;
reg    kernel_0_4_ce1;
wire   [15:0] kernel_0_4_q1;
reg   [3:0] kernel_0_5_address0;
reg    kernel_0_5_ce0;
reg    kernel_0_5_we0;
wire   [15:0] kernel_0_5_q0;
reg   [3:0] kernel_0_5_address1;
reg    kernel_0_5_ce1;
wire   [15:0] kernel_0_5_q1;
reg   [3:0] kernel_0_6_address0;
reg    kernel_0_6_ce0;
reg    kernel_0_6_we0;
wire   [15:0] kernel_0_6_q0;
reg   [3:0] kernel_0_6_address1;
reg    kernel_0_6_ce1;
wire   [15:0] kernel_0_6_q1;
reg   [3:0] kernel_0_7_address0;
reg    kernel_0_7_ce0;
reg    kernel_0_7_we0;
wire   [15:0] kernel_0_7_q0;
reg   [3:0] kernel_0_7_address1;
reg    kernel_0_7_ce1;
wire   [15:0] kernel_0_7_q1;
reg   [3:0] kernel_1_0_address0;
reg    kernel_1_0_ce0;
reg    kernel_1_0_we0;
wire   [15:0] kernel_1_0_q0;
reg   [3:0] kernel_1_0_address1;
reg    kernel_1_0_ce1;
wire   [15:0] kernel_1_0_q1;
reg   [3:0] kernel_1_1_address0;
reg    kernel_1_1_ce0;
reg    kernel_1_1_we0;
wire   [15:0] kernel_1_1_q0;
reg   [3:0] kernel_1_1_address1;
reg    kernel_1_1_ce1;
wire   [15:0] kernel_1_1_q1;
reg   [3:0] kernel_1_2_address0;
reg    kernel_1_2_ce0;
reg    kernel_1_2_we0;
wire   [15:0] kernel_1_2_q0;
reg   [3:0] kernel_1_2_address1;
reg    kernel_1_2_ce1;
wire   [15:0] kernel_1_2_q1;
reg   [3:0] kernel_1_3_address0;
reg    kernel_1_3_ce0;
reg    kernel_1_3_we0;
wire   [15:0] kernel_1_3_q0;
reg   [3:0] kernel_1_3_address1;
reg    kernel_1_3_ce1;
wire   [15:0] kernel_1_3_q1;
reg   [3:0] kernel_1_4_address0;
reg    kernel_1_4_ce0;
reg    kernel_1_4_we0;
wire   [15:0] kernel_1_4_q0;
reg   [3:0] kernel_1_4_address1;
reg    kernel_1_4_ce1;
wire   [15:0] kernel_1_4_q1;
reg   [3:0] kernel_1_5_address0;
reg    kernel_1_5_ce0;
reg    kernel_1_5_we0;
wire   [15:0] kernel_1_5_q0;
reg   [3:0] kernel_1_5_address1;
reg    kernel_1_5_ce1;
wire   [15:0] kernel_1_5_q1;
reg   [3:0] kernel_1_6_address0;
reg    kernel_1_6_ce0;
reg    kernel_1_6_we0;
wire   [15:0] kernel_1_6_q0;
reg   [3:0] kernel_1_6_address1;
reg    kernel_1_6_ce1;
wire   [15:0] kernel_1_6_q1;
reg   [3:0] kernel_1_7_address0;
reg    kernel_1_7_ce0;
reg    kernel_1_7_we0;
wire   [15:0] kernel_1_7_q0;
reg   [3:0] kernel_1_7_address1;
reg    kernel_1_7_ce1;
wire   [15:0] kernel_1_7_q1;
reg   [3:0] kernel_2_0_address0;
reg    kernel_2_0_ce0;
reg    kernel_2_0_we0;
wire   [15:0] kernel_2_0_q0;
reg   [3:0] kernel_2_0_address1;
reg    kernel_2_0_ce1;
wire   [15:0] kernel_2_0_q1;
reg   [3:0] kernel_2_1_address0;
reg    kernel_2_1_ce0;
reg    kernel_2_1_we0;
wire   [15:0] kernel_2_1_q0;
reg   [3:0] kernel_2_1_address1;
reg    kernel_2_1_ce1;
wire   [15:0] kernel_2_1_q1;
reg   [3:0] kernel_2_2_address0;
reg    kernel_2_2_ce0;
reg    kernel_2_2_we0;
wire   [15:0] kernel_2_2_q0;
reg   [3:0] kernel_2_2_address1;
reg    kernel_2_2_ce1;
wire   [15:0] kernel_2_2_q1;
reg   [3:0] kernel_2_3_address0;
reg    kernel_2_3_ce0;
reg    kernel_2_3_we0;
wire   [15:0] kernel_2_3_q0;
reg   [3:0] kernel_2_3_address1;
reg    kernel_2_3_ce1;
wire   [15:0] kernel_2_3_q1;
reg   [3:0] kernel_2_4_address0;
reg    kernel_2_4_ce0;
reg    kernel_2_4_we0;
wire   [15:0] kernel_2_4_q0;
reg   [3:0] kernel_2_4_address1;
reg    kernel_2_4_ce1;
wire   [15:0] kernel_2_4_q1;
reg   [3:0] kernel_2_5_address0;
reg    kernel_2_5_ce0;
reg    kernel_2_5_we0;
wire   [15:0] kernel_2_5_q0;
reg   [3:0] kernel_2_5_address1;
reg    kernel_2_5_ce1;
wire   [15:0] kernel_2_5_q1;
reg   [3:0] kernel_2_6_address0;
reg    kernel_2_6_ce0;
reg    kernel_2_6_we0;
wire   [15:0] kernel_2_6_q0;
reg   [3:0] kernel_2_6_address1;
reg    kernel_2_6_ce1;
wire   [15:0] kernel_2_6_q1;
reg   [3:0] kernel_2_7_address0;
reg    kernel_2_7_ce0;
reg    kernel_2_7_we0;
wire   [15:0] kernel_2_7_q0;
reg   [3:0] kernel_2_7_address1;
reg    kernel_2_7_ce1;
wire   [15:0] kernel_2_7_q1;
reg   [3:0] kernel_3_0_address0;
reg    kernel_3_0_ce0;
reg    kernel_3_0_we0;
wire   [15:0] kernel_3_0_q0;
reg   [3:0] kernel_3_0_address1;
reg    kernel_3_0_ce1;
wire   [15:0] kernel_3_0_q1;
reg   [3:0] kernel_3_1_address0;
reg    kernel_3_1_ce0;
reg    kernel_3_1_we0;
wire   [15:0] kernel_3_1_q0;
reg   [3:0] kernel_3_1_address1;
reg    kernel_3_1_ce1;
wire   [15:0] kernel_3_1_q1;
reg   [3:0] kernel_3_2_address0;
reg    kernel_3_2_ce0;
reg    kernel_3_2_we0;
wire   [15:0] kernel_3_2_q0;
reg   [3:0] kernel_3_2_address1;
reg    kernel_3_2_ce1;
wire   [15:0] kernel_3_2_q1;
reg   [3:0] kernel_3_3_address0;
reg    kernel_3_3_ce0;
reg    kernel_3_3_we0;
wire   [15:0] kernel_3_3_q0;
reg   [3:0] kernel_3_3_address1;
reg    kernel_3_3_ce1;
wire   [15:0] kernel_3_3_q1;
reg   [3:0] kernel_3_4_address0;
reg    kernel_3_4_ce0;
reg    kernel_3_4_we0;
wire   [15:0] kernel_3_4_q0;
reg   [3:0] kernel_3_4_address1;
reg    kernel_3_4_ce1;
wire   [15:0] kernel_3_4_q1;
reg   [3:0] kernel_3_5_address0;
reg    kernel_3_5_ce0;
reg    kernel_3_5_we0;
wire   [15:0] kernel_3_5_q0;
reg   [3:0] kernel_3_5_address1;
reg    kernel_3_5_ce1;
wire   [15:0] kernel_3_5_q1;
reg   [3:0] kernel_3_6_address0;
reg    kernel_3_6_ce0;
reg    kernel_3_6_we0;
wire   [15:0] kernel_3_6_q0;
reg   [3:0] kernel_3_6_address1;
reg    kernel_3_6_ce1;
wire   [15:0] kernel_3_6_q1;
reg   [3:0] kernel_3_7_address0;
reg    kernel_3_7_ce0;
reg    kernel_3_7_we0;
wire   [15:0] kernel_3_7_q0;
reg   [3:0] kernel_3_7_address1;
reg    kernel_3_7_ce1;
wire   [15:0] kernel_3_7_q1;
reg    weight_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_flatten1_fu_1961_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    b_Data_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_pp1_stage8;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [15:0] reg_1673;
wire    ap_block_state13_pp1_stage1_iter0;
wire    ap_block_state22_pp1_stage1_iter1;
reg    ap_block_pp1_stage1_11001;
wire    ap_block_state14_pp1_stage2_iter0;
reg    ap_block_pp1_stage2_11001;
wire    ap_block_state15_pp1_stage3_iter0;
reg    ap_block_pp1_stage3_11001;
wire    ap_block_state17_pp1_stage5_iter0;
reg    ap_block_pp1_stage5_11001;
reg   [15:0] reg_1677;
reg   [15:0] reg_1681;
reg   [15:0] reg_1685;
reg   [15:0] reg_1689;
reg   [15:0] reg_1693;
reg   [15:0] reg_1697;
reg   [15:0] reg_1701;
reg   [15:0] reg_1705;
reg   [15:0] reg_1709;
reg   [15:0] reg_1713;
reg   [15:0] reg_1717;
reg   [15:0] reg_1721;
reg   [15:0] reg_1725;
reg   [15:0] reg_1729;
reg   [15:0] reg_1733;
reg   [15:0] reg_1737;
reg   [15:0] reg_1741;
reg   [15:0] reg_1745;
reg   [15:0] reg_1749;
reg   [15:0] reg_1753;
reg   [15:0] reg_1757;
reg   [15:0] reg_1761;
reg   [15:0] reg_1765;
reg   [15:0] reg_1769;
reg   [15:0] reg_1773;
reg   [15:0] reg_1777;
reg   [15:0] reg_1781;
reg   [15:0] reg_1785;
reg   [15:0] reg_1789;
reg   [15:0] reg_1793;
reg   [15:0] reg_1797;
reg   [15:0] reg_1801;
wire    ap_block_state16_pp1_stage4_iter0;
reg    ap_block_pp1_stage4_11001;
reg   [15:0] reg_1806;
reg   [15:0] reg_1811;
reg   [15:0] reg_1816;
reg   [15:0] reg_1821;
reg   [15:0] reg_1826;
reg   [15:0] reg_1831;
reg   [15:0] reg_1836;
reg   [15:0] reg_1841;
reg   [15:0] reg_1846;
reg   [15:0] reg_1851;
reg   [15:0] reg_1856;
reg   [15:0] reg_1861;
reg   [15:0] reg_1866;
reg   [15:0] reg_1871;
reg   [15:0] reg_1876;
reg   [15:0] reg_1881;
reg   [15:0] reg_1886;
reg   [15:0] reg_1891;
reg   [15:0] reg_1896;
reg   [15:0] reg_1901;
reg   [15:0] reg_1906;
reg   [15:0] reg_1911;
reg   [15:0] reg_1916;
reg   [15:0] reg_1921;
reg   [15:0] reg_1926;
reg   [15:0] reg_1931;
reg   [15:0] reg_1936;
reg   [15:0] reg_1941;
reg   [15:0] reg_1946;
reg   [15:0] reg_1951;
reg   [15:0] reg_1956;
wire   [8:0] indvar_flatten_next1_fu_1967_p2;
reg    ap_block_state2;
wire   [3:0] tmp_mid2_v_fu_1993_p3;
wire   [2:0] m_mid2_fu_2099_p3;
wire   [3:0] n_fu_2111_p2;
wire   [6:0] indvar_flatten_next_fu_2123_p3;
reg   [15:0] weight_read_reg_2736;
reg   [15:0] weight_read_1_reg_2741;
reg   [15:0] weight_read_2_reg_2746;
reg   [15:0] weight_read_3_reg_2751;
reg   [15:0] weight_read_4_reg_2756;
reg   [15:0] weight_read_5_reg_2761;
reg   [15:0] weight_read_6_reg_2766;
wire   [127:0] tmp_1_fu_2131_p9;
wire   [511:0] tmp_5_fu_2145_p33;
wire   [511:0] tmp_6_fu_2214_p33;
wire   [511:0] tmp_7_fu_2283_p33;
reg   [15:0] kernel_0_0_load_5_reg_2791;
reg   [15:0] kernel_1_0_load_5_reg_2796;
reg   [15:0] kernel_2_0_load_5_reg_2801;
reg   [15:0] kernel_3_0_load_5_reg_2806;
reg   [15:0] kernel_0_1_load_5_reg_2811;
reg   [15:0] kernel_1_1_load_5_reg_2816;
reg   [15:0] kernel_2_1_load_5_reg_2821;
reg   [15:0] kernel_3_1_load_5_reg_2826;
reg   [15:0] kernel_0_2_load_5_reg_2831;
reg   [15:0] kernel_1_2_load_5_reg_2836;
reg   [15:0] kernel_2_2_load_5_reg_2841;
reg   [15:0] kernel_3_2_load_5_reg_2846;
reg   [15:0] kernel_0_3_load_5_reg_2851;
reg   [15:0] kernel_1_3_load_5_reg_2856;
reg   [15:0] kernel_2_3_load_5_reg_2861;
reg   [15:0] kernel_3_3_load_5_reg_2866;
reg   [15:0] kernel_0_4_load_5_reg_2871;
reg   [15:0] kernel_1_4_load_5_reg_2876;
reg   [15:0] kernel_2_4_load_5_reg_2881;
reg   [15:0] kernel_3_4_load_5_reg_2886;
reg   [15:0] kernel_0_5_load_5_reg_2891;
reg   [15:0] kernel_1_5_load_5_reg_2896;
reg   [15:0] kernel_2_5_load_5_reg_2901;
reg   [15:0] kernel_3_5_load_5_reg_2906;
reg   [15:0] kernel_0_6_load_5_reg_2911;
reg   [15:0] kernel_1_6_load_5_reg_2916;
reg   [15:0] kernel_2_6_load_5_reg_2921;
reg   [15:0] kernel_3_6_load_5_reg_2926;
reg   [15:0] kernel_0_7_load_5_reg_2931;
reg   [15:0] kernel_1_7_load_5_reg_2936;
reg   [15:0] kernel_2_7_load_5_reg_2941;
reg   [15:0] kernel_3_7_load_5_reg_2946;
wire   [511:0] tmp_8_fu_2352_p33;
reg   [15:0] kernel_0_0_load_7_reg_2956;
reg   [15:0] kernel_1_0_load_7_reg_2961;
reg   [15:0] kernel_2_0_load_7_reg_2966;
reg   [15:0] kernel_3_0_load_7_reg_2971;
reg   [15:0] kernel_0_1_load_7_reg_2976;
reg   [15:0] kernel_1_1_load_7_reg_2981;
reg   [15:0] kernel_2_1_load_7_reg_2986;
reg   [15:0] kernel_3_1_load_7_reg_2991;
reg   [15:0] kernel_0_2_load_7_reg_2996;
reg   [15:0] kernel_1_2_load_7_reg_3001;
reg   [15:0] kernel_2_2_load_7_reg_3006;
reg   [15:0] kernel_3_2_load_7_reg_3011;
reg   [15:0] kernel_0_3_load_7_reg_3016;
reg   [15:0] kernel_1_3_load_7_reg_3021;
reg   [15:0] kernel_2_3_load_7_reg_3026;
reg   [15:0] kernel_3_3_load_7_reg_3031;
reg   [15:0] kernel_0_4_load_7_reg_3036;
reg   [15:0] kernel_1_4_load_7_reg_3041;
reg   [15:0] kernel_2_4_load_7_reg_3046;
reg   [15:0] kernel_3_4_load_7_reg_3051;
reg   [15:0] kernel_0_5_load_7_reg_3056;
reg   [15:0] kernel_1_5_load_7_reg_3061;
reg   [15:0] kernel_2_5_load_7_reg_3066;
reg   [15:0] kernel_3_5_load_7_reg_3071;
reg   [15:0] kernel_0_6_load_7_reg_3076;
reg   [15:0] kernel_1_6_load_7_reg_3081;
reg   [15:0] kernel_2_6_load_7_reg_3086;
reg   [15:0] kernel_3_6_load_7_reg_3091;
reg   [15:0] kernel_0_7_load_7_reg_3096;
reg   [15:0] kernel_1_7_load_7_reg_3101;
reg   [15:0] kernel_2_7_load_7_reg_3106;
reg   [15:0] kernel_3_7_load_7_reg_3111;
wire   [511:0] tmp_9_fu_2421_p33;
wire   [511:0] tmp_s_fu_2490_p33;
wire    ap_block_state18_pp1_stage6_iter0;
reg    ap_block_pp1_stage6_11001;
wire   [511:0] tmp_10_fu_2527_p33;
wire    ap_block_state19_pp1_stage7_iter0;
reg    ap_block_pp1_stage7_11001;
wire   [511:0] tmp_11_fu_2596_p33;
wire    ap_block_state20_pp1_stage8_iter0;
reg    ap_block_pp1_stage8_11001;
wire   [511:0] tmp_12_fu_2633_p33;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire    ap_CS_fsm_state11;
reg    ap_block_pp1_stage8_subdone;
reg   [8:0] indvar_flatten1_reg_1618;
wire    ap_CS_fsm_state1;
reg   [3:0] i_reg_1629;
reg   [6:0] indvar_flatten_reg_1640;
reg   [2:0] m_reg_1651;
reg   [3:0] n2_reg_1662;
wire   [63:0] tmp_mid2_fu_2001_p1;
wire   [1:0] m_t_mid2_fu_2091_p3;
wire   [2:0] tmp_14_fu_2107_p1;
wire    ap_block_pp1_stage1_01001;
wire    ap_block_pp1_stage2_01001;
wire    ap_block_pp1_stage3_01001;
wire    ap_block_pp1_stage4_01001;
wire    ap_block_pp1_stage5_01001;
wire    ap_block_pp1_stage6_01001;
wire    ap_block_pp1_stage7_01001;
wire    ap_block_pp1_stage8_01001;
wire    ap_block_pp1_stage0_01001;
wire   [0:0] exitcond_flatten_fu_1973_p2;
wire   [3:0] i_s_fu_1987_p2;
wire   [1:0] tmp_2_fu_2037_p1;
wire   [0:0] exitcond_fu_2055_p2;
wire   [0:0] not_exitcond_flatten_fu_2049_p2;
wire   [2:0] m_mid_fu_1979_p3;
wire   [0:0] exitcond2_mid_fu_2061_p2;
wire   [0:0] tmp_fu_2073_p2;
wire   [2:0] m_1_fu_2067_p2;
wire   [1:0] tmp_4_fu_2087_p1;
wire   [1:0] m_t_mid_fu_2041_p3;
wire   [3:0] n2_mid2_fu_2079_p3;
wire   [6:0] indvar_flatten_op_fu_2117_p2;
reg   [19:0] ap_NS_fsm;
reg    ap_block_pp1_stage0_subdone;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_block_pp1_stage7_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 weight_0_sel_rd = 1'b0;
#0 weight_0_sel_wr = 1'b0;
#0 weight_0_state = 2'd0;
#0 b_Data_1_sel_rd = 1'b0;
#0 b_Data_1_sel_wr = 1'b0;
#0 b_Data_1_state = 2'd0;
#0 Bias_Data_1_data_reg = 128'd0;
#0 Bias_Data_1_vld_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_0_address0),
    .ce0(kernel_0_0_ce0),
    .we0(kernel_0_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_0_q0),
    .address1(kernel_0_0_address1),
    .ce1(kernel_0_0_ce1),
    .q1(kernel_0_0_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_1_address0),
    .ce0(kernel_0_1_ce0),
    .we0(kernel_0_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_1_q0),
    .address1(kernel_0_1_address1),
    .ce1(kernel_0_1_ce1),
    .q1(kernel_0_1_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_2_address0),
    .ce0(kernel_0_2_ce0),
    .we0(kernel_0_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_2_q0),
    .address1(kernel_0_2_address1),
    .ce1(kernel_0_2_ce1),
    .q1(kernel_0_2_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_3_address0),
    .ce0(kernel_0_3_ce0),
    .we0(kernel_0_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_3_q0),
    .address1(kernel_0_3_address1),
    .ce1(kernel_0_3_ce1),
    .q1(kernel_0_3_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_4_address0),
    .ce0(kernel_0_4_ce0),
    .we0(kernel_0_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_4_q0),
    .address1(kernel_0_4_address1),
    .ce1(kernel_0_4_ce1),
    .q1(kernel_0_4_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_5_address0),
    .ce0(kernel_0_5_ce0),
    .we0(kernel_0_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_5_q0),
    .address1(kernel_0_5_address1),
    .ce1(kernel_0_5_ce1),
    .q1(kernel_0_5_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_6_address0),
    .ce0(kernel_0_6_ce0),
    .we0(kernel_0_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_6_q0),
    .address1(kernel_0_6_address1),
    .ce1(kernel_0_6_ce1),
    .q1(kernel_0_6_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_0_7_address0),
    .ce0(kernel_0_7_ce0),
    .we0(kernel_0_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_0_7_q0),
    .address1(kernel_0_7_address1),
    .ce1(kernel_0_7_ce1),
    .q1(kernel_0_7_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_0_address0),
    .ce0(kernel_1_0_ce0),
    .we0(kernel_1_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_0_q0),
    .address1(kernel_1_0_address1),
    .ce1(kernel_1_0_ce1),
    .q1(kernel_1_0_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_1_address0),
    .ce0(kernel_1_1_ce0),
    .we0(kernel_1_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_1_q0),
    .address1(kernel_1_1_address1),
    .ce1(kernel_1_1_ce1),
    .q1(kernel_1_1_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_2_address0),
    .ce0(kernel_1_2_ce0),
    .we0(kernel_1_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_2_q0),
    .address1(kernel_1_2_address1),
    .ce1(kernel_1_2_ce1),
    .q1(kernel_1_2_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_3_address0),
    .ce0(kernel_1_3_ce0),
    .we0(kernel_1_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_3_q0),
    .address1(kernel_1_3_address1),
    .ce1(kernel_1_3_ce1),
    .q1(kernel_1_3_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_4_address0),
    .ce0(kernel_1_4_ce0),
    .we0(kernel_1_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_4_q0),
    .address1(kernel_1_4_address1),
    .ce1(kernel_1_4_ce1),
    .q1(kernel_1_4_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_5_address0),
    .ce0(kernel_1_5_ce0),
    .we0(kernel_1_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_5_q0),
    .address1(kernel_1_5_address1),
    .ce1(kernel_1_5_ce1),
    .q1(kernel_1_5_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_6_address0),
    .ce0(kernel_1_6_ce0),
    .we0(kernel_1_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_6_q0),
    .address1(kernel_1_6_address1),
    .ce1(kernel_1_6_ce1),
    .q1(kernel_1_6_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_1_7_address0),
    .ce0(kernel_1_7_ce0),
    .we0(kernel_1_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_1_7_q0),
    .address1(kernel_1_7_address1),
    .ce1(kernel_1_7_ce1),
    .q1(kernel_1_7_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_0_address0),
    .ce0(kernel_2_0_ce0),
    .we0(kernel_2_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_0_q0),
    .address1(kernel_2_0_address1),
    .ce1(kernel_2_0_ce1),
    .q1(kernel_2_0_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_1_address0),
    .ce0(kernel_2_1_ce0),
    .we0(kernel_2_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_1_q0),
    .address1(kernel_2_1_address1),
    .ce1(kernel_2_1_ce1),
    .q1(kernel_2_1_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_2_address0),
    .ce0(kernel_2_2_ce0),
    .we0(kernel_2_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_2_q0),
    .address1(kernel_2_2_address1),
    .ce1(kernel_2_2_ce1),
    .q1(kernel_2_2_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_3_address0),
    .ce0(kernel_2_3_ce0),
    .we0(kernel_2_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_3_q0),
    .address1(kernel_2_3_address1),
    .ce1(kernel_2_3_ce1),
    .q1(kernel_2_3_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_4_address0),
    .ce0(kernel_2_4_ce0),
    .we0(kernel_2_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_4_q0),
    .address1(kernel_2_4_address1),
    .ce1(kernel_2_4_ce1),
    .q1(kernel_2_4_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_5_address0),
    .ce0(kernel_2_5_ce0),
    .we0(kernel_2_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_5_q0),
    .address1(kernel_2_5_address1),
    .ce1(kernel_2_5_ce1),
    .q1(kernel_2_5_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_6_address0),
    .ce0(kernel_2_6_ce0),
    .we0(kernel_2_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_6_q0),
    .address1(kernel_2_6_address1),
    .ce1(kernel_2_6_ce1),
    .q1(kernel_2_6_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_2_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_2_7_address0),
    .ce0(kernel_2_7_ce0),
    .we0(kernel_2_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_2_7_q0),
    .address1(kernel_2_7_address1),
    .ce1(kernel_2_7_ce1),
    .q1(kernel_2_7_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_0_address0),
    .ce0(kernel_3_0_ce0),
    .we0(kernel_3_0_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_0_q0),
    .address1(kernel_3_0_address1),
    .ce1(kernel_3_0_ce1),
    .q1(kernel_3_0_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_1_address0),
    .ce0(kernel_3_1_ce0),
    .we0(kernel_3_1_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_1_q0),
    .address1(kernel_3_1_address1),
    .ce1(kernel_3_1_ce1),
    .q1(kernel_3_1_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_2_address0),
    .ce0(kernel_3_2_ce0),
    .we0(kernel_3_2_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_2_q0),
    .address1(kernel_3_2_address1),
    .ce1(kernel_3_2_ce1),
    .q1(kernel_3_2_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_3_address0),
    .ce0(kernel_3_3_ce0),
    .we0(kernel_3_3_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_3_q0),
    .address1(kernel_3_3_address1),
    .ce1(kernel_3_3_ce1),
    .q1(kernel_3_3_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_4_address0),
    .ce0(kernel_3_4_ce0),
    .we0(kernel_3_4_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_4_q0),
    .address1(kernel_3_4_address1),
    .ce1(kernel_3_4_ce1),
    .q1(kernel_3_4_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_5_address0),
    .ce0(kernel_3_5_ce0),
    .we0(kernel_3_5_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_5_q0),
    .address1(kernel_3_5_address1),
    .ce1(kernel_3_5_ce1),
    .q1(kernel_3_5_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_6_address0),
    .ce0(kernel_3_6_ce0),
    .we0(kernel_3_6_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_6_q0),
    .address1(kernel_3_6_address1),
    .ce1(kernel_3_6_ce1),
    .q1(kernel_3_6_q1)
);

Layer2_Kernel_kerbkb #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_3_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernel_3_7_address0),
    .ce0(kernel_3_7_ce0),
    .we0(kernel_3_7_we0),
    .d0(weight_0_data_out),
    .q0(kernel_3_7_q0),
    .address1(kernel_3_7_address1),
    .ce1(kernel_3_7_ce1),
    .q1(kernel_3_7_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage8_subdone) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_Data_1_sel_rd <= 1'b0;
    end else begin
        if (((b_Data_1_ack_out == 1'b1) & (b_Data_1_vld_out == 1'b1))) begin
            b_Data_1_sel_rd <= ~b_Data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_Data_1_sel_wr <= 1'b0;
    end else begin
        if (((b_Data_1_ack_in == 1'b1) & (b_Data_1_vld_in == 1'b1))) begin
            b_Data_1_sel_wr <= ~b_Data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_Data_1_state <= 2'd0;
    end else begin
        if ((((b_Data_1_state == 2'd2) & (b_Data_1_vld_in == 1'b0)) | ((b_Data_1_state == 2'd3) & (b_Data_1_vld_in == 1'b0) & (b_Data_1_ack_out == 1'b1)))) begin
            b_Data_1_state <= 2'd2;
        end else if ((((b_Data_1_state == 2'd1) & (b_Data_1_ack_out == 1'b0)) | ((b_Data_1_state == 2'd3) & (b_Data_1_ack_out == 1'b0) & (b_Data_1_vld_in == 1'b1)))) begin
            b_Data_1_state <= 2'd1;
        end else if (((~((b_Data_1_vld_in == 1'b0) & (b_Data_1_ack_out == 1'b1)) & ~((b_Data_1_ack_out == 1'b0) & (b_Data_1_vld_in == 1'b1)) & (b_Data_1_state == 2'd3)) | ((b_Data_1_state == 2'd1) & (b_Data_1_ack_out == 1'b1)) | ((b_Data_1_state == 2'd2) & (b_Data_1_vld_in == 1'b1)))) begin
            b_Data_1_state <= 2'd3;
        end else begin
            b_Data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_0_sel_rd <= 1'b0;
    end else begin
        if (((weight_0_ack_out == 1'b1) & (weight_0_vld_out == 1'b1))) begin
            weight_0_sel_rd <= ~weight_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_0_sel_wr <= 1'b0;
    end else begin
        if (((weight_0_ack_in == 1'b1) & (weight_0_vld_in == 1'b1))) begin
            weight_0_sel_wr <= ~weight_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_0_state <= 2'd0;
    end else begin
        if ((((weight_0_state == 2'd2) & (weight_0_vld_in == 1'b0)) | ((weight_0_state == 2'd3) & (weight_0_vld_in == 1'b0) & (weight_0_ack_out == 1'b1)))) begin
            weight_0_state <= 2'd2;
        end else if ((((weight_0_state == 2'd1) & (weight_0_ack_out == 1'b0)) | ((weight_0_state == 2'd3) & (weight_0_ack_out == 1'b0) & (weight_0_vld_in == 1'b1)))) begin
            weight_0_state <= 2'd1;
        end else if (((~((weight_0_vld_in == 1'b0) & (weight_0_ack_out == 1'b1)) & ~((weight_0_ack_out == 1'b0) & (weight_0_vld_in == 1'b1)) & (weight_0_state == 2'd3)) | ((weight_0_state == 2'd1) & (weight_0_ack_out == 1'b1)) | ((weight_0_state == 2'd2) & (weight_0_vld_in == 1'b1)))) begin
            weight_0_state <= 2'd3;
        end else begin
            weight_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_1629 <= tmp_mid2_v_fu_1993_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_1629 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten1_reg_1618 <= indvar_flatten_next1_fu_1967_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten1_reg_1618 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_1640 <= indvar_flatten_next_fu_2123_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_1640 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_reg_1651 <= m_mid2_fu_2099_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        m_reg_1651 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        n2_reg_1662 <= n_fu_2111_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        n2_reg_1662 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1801 <= kernel_0_0_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1801 <= kernel_0_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1806 <= kernel_1_0_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1806 <= kernel_1_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1811 <= kernel_2_0_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1811 <= kernel_2_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1816 <= kernel_3_0_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1816 <= kernel_3_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1821 <= kernel_0_1_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1821 <= kernel_0_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1826 <= kernel_1_1_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1826 <= kernel_1_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1831 <= kernel_2_1_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1831 <= kernel_2_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1836 <= kernel_3_1_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1836 <= kernel_3_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1841 <= kernel_0_2_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1841 <= kernel_0_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1846 <= kernel_1_2_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1846 <= kernel_1_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1851 <= kernel_2_2_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1851 <= kernel_2_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1856 <= kernel_3_2_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1856 <= kernel_3_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1861 <= kernel_0_3_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1861 <= kernel_0_3_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1866 <= kernel_1_3_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1866 <= kernel_1_3_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1871 <= kernel_2_3_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1871 <= kernel_2_3_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1876 <= kernel_3_3_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1876 <= kernel_3_3_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1881 <= kernel_0_4_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1881 <= kernel_0_4_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1886 <= kernel_1_4_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1886 <= kernel_1_4_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1891 <= kernel_2_4_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1891 <= kernel_2_4_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1896 <= kernel_3_4_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1896 <= kernel_3_4_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1901 <= kernel_0_5_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1901 <= kernel_0_5_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1906 <= kernel_1_5_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1906 <= kernel_1_5_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1911 <= kernel_2_5_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1911 <= kernel_2_5_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1916 <= kernel_3_5_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1916 <= kernel_3_5_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1921 <= kernel_0_6_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1921 <= kernel_0_6_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1926 <= kernel_1_6_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1926 <= kernel_1_6_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1931 <= kernel_2_6_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1931 <= kernel_2_6_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1936 <= kernel_3_6_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1936 <= kernel_3_6_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1941 <= kernel_0_7_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1941 <= kernel_0_7_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1946 <= kernel_1_7_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1946 <= kernel_1_7_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1951 <= kernel_2_7_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1951 <= kernel_2_7_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            reg_1956 <= kernel_3_7_q1;
        end else if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            reg_1956 <= kernel_3_7_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == Bias_Data_1_vld_reg) & (1'b1 == Bias_Data_1_vld_in)) | ((1'b1 == 1'b1) & (1'b1 == Bias_Data_1_vld_in) & (1'b1 == Bias_Data_1_vld_reg)))) begin
        Bias_Data_1_data_reg <= tmp_1_fu_2131_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((b_Data_1_load_A == 1'b1)) begin
        b_Data_1_payload_A <= b_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((b_Data_1_load_B == 1'b1)) begin
        b_Data_1_payload_B <= b_Data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_0_load_5_reg_2791 <= kernel_0_0_q0;
        kernel_0_1_load_5_reg_2811 <= kernel_0_1_q0;
        kernel_0_2_load_5_reg_2831 <= kernel_0_2_q0;
        kernel_0_3_load_5_reg_2851 <= kernel_0_3_q0;
        kernel_0_4_load_5_reg_2871 <= kernel_0_4_q0;
        kernel_0_5_load_5_reg_2891 <= kernel_0_5_q0;
        kernel_0_6_load_5_reg_2911 <= kernel_0_6_q0;
        kernel_0_7_load_5_reg_2931 <= kernel_0_7_q0;
        kernel_1_0_load_5_reg_2796 <= kernel_1_0_q0;
        kernel_1_1_load_5_reg_2816 <= kernel_1_1_q0;
        kernel_1_2_load_5_reg_2836 <= kernel_1_2_q0;
        kernel_1_3_load_5_reg_2856 <= kernel_1_3_q0;
        kernel_1_4_load_5_reg_2876 <= kernel_1_4_q0;
        kernel_1_5_load_5_reg_2896 <= kernel_1_5_q0;
        kernel_1_6_load_5_reg_2916 <= kernel_1_6_q0;
        kernel_1_7_load_5_reg_2936 <= kernel_1_7_q0;
        kernel_2_0_load_5_reg_2801 <= kernel_2_0_q0;
        kernel_2_1_load_5_reg_2821 <= kernel_2_1_q0;
        kernel_2_2_load_5_reg_2841 <= kernel_2_2_q0;
        kernel_2_3_load_5_reg_2861 <= kernel_2_3_q0;
        kernel_2_4_load_5_reg_2881 <= kernel_2_4_q0;
        kernel_2_5_load_5_reg_2901 <= kernel_2_5_q0;
        kernel_2_6_load_5_reg_2921 <= kernel_2_6_q0;
        kernel_2_7_load_5_reg_2941 <= kernel_2_7_q0;
        kernel_3_0_load_5_reg_2806 <= kernel_3_0_q0;
        kernel_3_1_load_5_reg_2826 <= kernel_3_1_q0;
        kernel_3_2_load_5_reg_2846 <= kernel_3_2_q0;
        kernel_3_3_load_5_reg_2866 <= kernel_3_3_q0;
        kernel_3_4_load_5_reg_2886 <= kernel_3_4_q0;
        kernel_3_5_load_5_reg_2906 <= kernel_3_5_q0;
        kernel_3_6_load_5_reg_2926 <= kernel_3_6_q0;
        kernel_3_7_load_5_reg_2946 <= kernel_3_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_0_load_7_reg_2956 <= kernel_0_0_q0;
        kernel_0_1_load_7_reg_2976 <= kernel_0_1_q0;
        kernel_0_2_load_7_reg_2996 <= kernel_0_2_q0;
        kernel_0_3_load_7_reg_3016 <= kernel_0_3_q0;
        kernel_0_4_load_7_reg_3036 <= kernel_0_4_q0;
        kernel_0_5_load_7_reg_3056 <= kernel_0_5_q0;
        kernel_0_6_load_7_reg_3076 <= kernel_0_6_q0;
        kernel_0_7_load_7_reg_3096 <= kernel_0_7_q0;
        kernel_1_0_load_7_reg_2961 <= kernel_1_0_q0;
        kernel_1_1_load_7_reg_2981 <= kernel_1_1_q0;
        kernel_1_2_load_7_reg_3001 <= kernel_1_2_q0;
        kernel_1_3_load_7_reg_3021 <= kernel_1_3_q0;
        kernel_1_4_load_7_reg_3041 <= kernel_1_4_q0;
        kernel_1_5_load_7_reg_3061 <= kernel_1_5_q0;
        kernel_1_6_load_7_reg_3081 <= kernel_1_6_q0;
        kernel_1_7_load_7_reg_3101 <= kernel_1_7_q0;
        kernel_2_0_load_7_reg_2966 <= kernel_2_0_q0;
        kernel_2_1_load_7_reg_2986 <= kernel_2_1_q0;
        kernel_2_2_load_7_reg_3006 <= kernel_2_2_q0;
        kernel_2_3_load_7_reg_3026 <= kernel_2_3_q0;
        kernel_2_4_load_7_reg_3046 <= kernel_2_4_q0;
        kernel_2_5_load_7_reg_3066 <= kernel_2_5_q0;
        kernel_2_6_load_7_reg_3086 <= kernel_2_6_q0;
        kernel_2_7_load_7_reg_3106 <= kernel_2_7_q0;
        kernel_3_0_load_7_reg_2971 <= kernel_3_0_q0;
        kernel_3_1_load_7_reg_2991 <= kernel_3_1_q0;
        kernel_3_2_load_7_reg_3011 <= kernel_3_2_q0;
        kernel_3_3_load_7_reg_3031 <= kernel_3_3_q0;
        kernel_3_4_load_7_reg_3051 <= kernel_3_4_q0;
        kernel_3_5_load_7_reg_3071 <= kernel_3_5_q0;
        kernel_3_6_load_7_reg_3091 <= kernel_3_6_q0;
        kernel_3_7_load_7_reg_3111 <= kernel_3_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        reg_1673 <= kernel_0_0_q1;
        reg_1677 <= kernel_1_0_q1;
        reg_1681 <= kernel_2_0_q1;
        reg_1685 <= kernel_3_0_q1;
        reg_1689 <= kernel_0_1_q1;
        reg_1693 <= kernel_1_1_q1;
        reg_1697 <= kernel_2_1_q1;
        reg_1701 <= kernel_3_1_q1;
        reg_1705 <= kernel_0_2_q1;
        reg_1709 <= kernel_1_2_q1;
        reg_1713 <= kernel_2_2_q1;
        reg_1717 <= kernel_3_2_q1;
        reg_1721 <= kernel_0_3_q1;
        reg_1725 <= kernel_1_3_q1;
        reg_1729 <= kernel_2_3_q1;
        reg_1733 <= kernel_3_3_q1;
        reg_1737 <= kernel_0_4_q1;
        reg_1741 <= kernel_1_4_q1;
        reg_1745 <= kernel_2_4_q1;
        reg_1749 <= kernel_3_4_q1;
        reg_1753 <= kernel_0_5_q1;
        reg_1757 <= kernel_1_5_q1;
        reg_1761 <= kernel_2_5_q1;
        reg_1765 <= kernel_3_5_q1;
        reg_1769 <= kernel_0_6_q1;
        reg_1773 <= kernel_1_6_q1;
        reg_1777 <= kernel_2_6_q1;
        reg_1781 <= kernel_3_6_q1;
        reg_1785 <= kernel_0_7_q1;
        reg_1789 <= kernel_1_7_q1;
        reg_1793 <= kernel_2_7_q1;
        reg_1797 <= kernel_3_7_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((weight_0_load_A == 1'b1)) begin
        weight_0_payload_A <= weight_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((weight_0_load_B == 1'b1)) begin
        weight_0_payload_B <= weight_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        weight_read_1_reg_2741 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        weight_read_2_reg_2746 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        weight_read_3_reg_2751 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        weight_read_4_reg_2756 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        weight_read_5_reg_2761 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        weight_read_6_reg_2766 <= weight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        weight_read_reg_2736 <= weight_0_data_out;
    end
end

always @ (*) begin
    if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        Bias_Data_1_vld_in = 1'b1;
    end else begin
        Bias_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        b_Data_1_data_in = tmp_12_fu_2633_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_01001))) begin
        b_Data_1_data_in = tmp_11_fu_2596_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_01001))) begin
        b_Data_1_data_in = tmp_10_fu_2527_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_01001))) begin
        b_Data_1_data_in = tmp_s_fu_2490_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5_01001))) begin
        b_Data_1_data_in = tmp_9_fu_2421_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4_01001))) begin
        b_Data_1_data_in = tmp_8_fu_2352_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_01001))) begin
        b_Data_1_data_in = tmp_7_fu_2283_p33;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_01001))) begin
        b_Data_1_data_in = tmp_6_fu_2214_p33;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001))) begin
        b_Data_1_data_in = tmp_5_fu_2145_p33;
    end else begin
        b_Data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((b_Data_1_sel == 1'b1)) begin
        b_Data_1_data_out = b_Data_1_payload_B;
    end else begin
        b_Data_1_data_out = b_Data_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage8_11001) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        b_Data_1_vld_in = 1'b1;
    end else begin
        b_Data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        b_Data_TDATA_blk_n = b_Data_1_state[1'd1];
    end else begin
        b_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_0_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_0_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_0_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_0_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_0_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_0_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_0_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_0_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_0_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_0_address1 = 4'd1;
        end else begin
            kernel_0_0_address1 = 'bx;
        end
    end else begin
        kernel_0_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_0_ce0 = 1'b1;
    end else begin
        kernel_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_0_ce1 = 1'b1;
    end else begin
        kernel_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_14_fu_2107_p1 == 3'd0) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_0_0_we0 = 1'b1;
    end else begin
        kernel_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_1_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_1_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_1_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_1_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_1_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_1_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_1_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_1_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_1_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_1_address1 = 4'd1;
        end else begin
            kernel_0_1_address1 = 'bx;
        end
    end else begin
        kernel_0_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_1_ce0 = 1'b1;
    end else begin
        kernel_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_1_ce1 = 1'b1;
    end else begin
        kernel_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd1))) begin
        kernel_0_1_we0 = 1'b1;
    end else begin
        kernel_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_2_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_2_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_2_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_2_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_2_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_2_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_2_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_2_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_2_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_2_address1 = 4'd1;
        end else begin
            kernel_0_2_address1 = 'bx;
        end
    end else begin
        kernel_0_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_2_ce0 = 1'b1;
    end else begin
        kernel_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_2_ce1 = 1'b1;
    end else begin
        kernel_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd2))) begin
        kernel_0_2_we0 = 1'b1;
    end else begin
        kernel_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_3_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_3_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_3_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_3_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_3_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_3_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_3_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_3_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_3_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_3_address1 = 4'd1;
        end else begin
            kernel_0_3_address1 = 'bx;
        end
    end else begin
        kernel_0_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_3_ce0 = 1'b1;
    end else begin
        kernel_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_3_ce1 = 1'b1;
    end else begin
        kernel_0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd3))) begin
        kernel_0_3_we0 = 1'b1;
    end else begin
        kernel_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_4_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_4_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_4_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_4_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_4_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_4_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_4_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_4_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_4_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_4_address1 = 4'd1;
        end else begin
            kernel_0_4_address1 = 'bx;
        end
    end else begin
        kernel_0_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_4_ce0 = 1'b1;
    end else begin
        kernel_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_4_ce1 = 1'b1;
    end else begin
        kernel_0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd4))) begin
        kernel_0_4_we0 = 1'b1;
    end else begin
        kernel_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_5_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_5_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_5_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_5_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_5_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_5_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_5_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_5_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_5_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_5_address1 = 4'd1;
        end else begin
            kernel_0_5_address1 = 'bx;
        end
    end else begin
        kernel_0_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_5_ce0 = 1'b1;
    end else begin
        kernel_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_5_ce1 = 1'b1;
    end else begin
        kernel_0_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd5))) begin
        kernel_0_5_we0 = 1'b1;
    end else begin
        kernel_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_6_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_6_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_6_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_6_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_6_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_6_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_6_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_6_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_6_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_6_address1 = 4'd1;
        end else begin
            kernel_0_6_address1 = 'bx;
        end
    end else begin
        kernel_0_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_6_ce0 = 1'b1;
    end else begin
        kernel_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_6_ce1 = 1'b1;
    end else begin
        kernel_0_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd6))) begin
        kernel_0_6_we0 = 1'b1;
    end else begin
        kernel_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_7_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_7_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_0_7_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_0_7_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_0_7_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_0_7_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_0_7_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_0_7_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_0_7_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_0_7_address1 = 4'd1;
        end else begin
            kernel_0_7_address1 = 'bx;
        end
    end else begin
        kernel_0_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_0_7_ce0 = 1'b1;
    end else begin
        kernel_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_0_7_ce1 = 1'b1;
    end else begin
        kernel_0_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd0) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd7))) begin
        kernel_0_7_we0 = 1'b1;
    end else begin
        kernel_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_0_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_0_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_0_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_0_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_0_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_0_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_0_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_0_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_0_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_0_address1 = 4'd1;
        end else begin
            kernel_1_0_address1 = 'bx;
        end
    end else begin
        kernel_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_0_ce0 = 1'b1;
    end else begin
        kernel_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_0_ce1 = 1'b1;
    end else begin
        kernel_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_14_fu_2107_p1 == 3'd0) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_1_0_we0 = 1'b1;
    end else begin
        kernel_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_1_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_1_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_1_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_1_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_1_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_1_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_1_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_1_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_1_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_1_address1 = 4'd1;
        end else begin
            kernel_1_1_address1 = 'bx;
        end
    end else begin
        kernel_1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_1_ce0 = 1'b1;
    end else begin
        kernel_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_1_ce1 = 1'b1;
    end else begin
        kernel_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd1))) begin
        kernel_1_1_we0 = 1'b1;
    end else begin
        kernel_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_2_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_2_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_2_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_2_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_2_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_2_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_2_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_2_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_2_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_2_address1 = 4'd1;
        end else begin
            kernel_1_2_address1 = 'bx;
        end
    end else begin
        kernel_1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_2_ce0 = 1'b1;
    end else begin
        kernel_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_2_ce1 = 1'b1;
    end else begin
        kernel_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd2))) begin
        kernel_1_2_we0 = 1'b1;
    end else begin
        kernel_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_3_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_3_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_3_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_3_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_3_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_3_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_3_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_3_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_3_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_3_address1 = 4'd1;
        end else begin
            kernel_1_3_address1 = 'bx;
        end
    end else begin
        kernel_1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_3_ce0 = 1'b1;
    end else begin
        kernel_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_3_ce1 = 1'b1;
    end else begin
        kernel_1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd3))) begin
        kernel_1_3_we0 = 1'b1;
    end else begin
        kernel_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_4_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_4_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_4_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_4_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_4_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_4_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_4_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_4_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_4_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_4_address1 = 4'd1;
        end else begin
            kernel_1_4_address1 = 'bx;
        end
    end else begin
        kernel_1_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_4_ce0 = 1'b1;
    end else begin
        kernel_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_4_ce1 = 1'b1;
    end else begin
        kernel_1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd4))) begin
        kernel_1_4_we0 = 1'b1;
    end else begin
        kernel_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_5_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_5_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_5_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_5_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_5_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_5_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_5_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_5_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_5_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_5_address1 = 4'd1;
        end else begin
            kernel_1_5_address1 = 'bx;
        end
    end else begin
        kernel_1_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_5_ce0 = 1'b1;
    end else begin
        kernel_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_5_ce1 = 1'b1;
    end else begin
        kernel_1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd5))) begin
        kernel_1_5_we0 = 1'b1;
    end else begin
        kernel_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_6_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_6_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_6_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_6_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_6_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_6_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_6_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_6_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_6_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_6_address1 = 4'd1;
        end else begin
            kernel_1_6_address1 = 'bx;
        end
    end else begin
        kernel_1_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_6_ce0 = 1'b1;
    end else begin
        kernel_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_6_ce1 = 1'b1;
    end else begin
        kernel_1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd6))) begin
        kernel_1_6_we0 = 1'b1;
    end else begin
        kernel_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_7_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_7_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_1_7_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_1_7_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_1_7_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_1_7_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_1_7_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_1_7_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_1_7_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_1_7_address1 = 4'd1;
        end else begin
            kernel_1_7_address1 = 'bx;
        end
    end else begin
        kernel_1_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_1_7_ce0 = 1'b1;
    end else begin
        kernel_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_1_7_ce1 = 1'b1;
    end else begin
        kernel_1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd1) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd7))) begin
        kernel_1_7_we0 = 1'b1;
    end else begin
        kernel_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_0_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_0_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_0_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_0_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_0_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_0_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_0_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_0_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_0_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_0_address1 = 4'd1;
        end else begin
            kernel_2_0_address1 = 'bx;
        end
    end else begin
        kernel_2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_0_ce0 = 1'b1;
    end else begin
        kernel_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_0_ce1 = 1'b1;
    end else begin
        kernel_2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_14_fu_2107_p1 == 3'd0) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_2_0_we0 = 1'b1;
    end else begin
        kernel_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_1_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_1_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_1_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_1_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_1_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_1_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_1_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_1_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_1_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_1_address1 = 4'd1;
        end else begin
            kernel_2_1_address1 = 'bx;
        end
    end else begin
        kernel_2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_1_ce0 = 1'b1;
    end else begin
        kernel_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_1_ce1 = 1'b1;
    end else begin
        kernel_2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd1))) begin
        kernel_2_1_we0 = 1'b1;
    end else begin
        kernel_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_2_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_2_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_2_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_2_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_2_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_2_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_2_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_2_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_2_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_2_address1 = 4'd1;
        end else begin
            kernel_2_2_address1 = 'bx;
        end
    end else begin
        kernel_2_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_2_ce0 = 1'b1;
    end else begin
        kernel_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_2_ce1 = 1'b1;
    end else begin
        kernel_2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd2))) begin
        kernel_2_2_we0 = 1'b1;
    end else begin
        kernel_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_3_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_3_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_3_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_3_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_3_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_3_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_3_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_3_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_3_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_3_address1 = 4'd1;
        end else begin
            kernel_2_3_address1 = 'bx;
        end
    end else begin
        kernel_2_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_3_ce0 = 1'b1;
    end else begin
        kernel_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_3_ce1 = 1'b1;
    end else begin
        kernel_2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd3))) begin
        kernel_2_3_we0 = 1'b1;
    end else begin
        kernel_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_4_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_4_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_4_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_4_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_4_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_4_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_4_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_4_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_4_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_4_address1 = 4'd1;
        end else begin
            kernel_2_4_address1 = 'bx;
        end
    end else begin
        kernel_2_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_4_ce0 = 1'b1;
    end else begin
        kernel_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_4_ce1 = 1'b1;
    end else begin
        kernel_2_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd4))) begin
        kernel_2_4_we0 = 1'b1;
    end else begin
        kernel_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_5_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_5_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_5_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_5_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_5_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_5_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_5_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_5_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_5_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_5_address1 = 4'd1;
        end else begin
            kernel_2_5_address1 = 'bx;
        end
    end else begin
        kernel_2_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_5_ce0 = 1'b1;
    end else begin
        kernel_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_5_ce1 = 1'b1;
    end else begin
        kernel_2_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd5))) begin
        kernel_2_5_we0 = 1'b1;
    end else begin
        kernel_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_6_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_6_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_6_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_6_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_6_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_6_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_6_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_6_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_6_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_6_address1 = 4'd1;
        end else begin
            kernel_2_6_address1 = 'bx;
        end
    end else begin
        kernel_2_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_6_ce0 = 1'b1;
    end else begin
        kernel_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_6_ce1 = 1'b1;
    end else begin
        kernel_2_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd6))) begin
        kernel_2_6_we0 = 1'b1;
    end else begin
        kernel_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_7_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_7_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_2_7_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_2_7_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_2_7_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_2_7_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_2_7_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_2_7_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_2_7_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_2_7_address1 = 4'd1;
        end else begin
            kernel_2_7_address1 = 'bx;
        end
    end else begin
        kernel_2_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_2_7_ce0 = 1'b1;
    end else begin
        kernel_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_2_7_ce1 = 1'b1;
    end else begin
        kernel_2_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd2) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd7))) begin
        kernel_2_7_we0 = 1'b1;
    end else begin
        kernel_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_0_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_0_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_0_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_0_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_0_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_0_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_0_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_0_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_0_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_0_address1 = 4'd1;
        end else begin
            kernel_3_0_address1 = 'bx;
        end
    end else begin
        kernel_3_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_0_ce0 = 1'b1;
    end else begin
        kernel_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_0_ce1 = 1'b1;
    end else begin
        kernel_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (tmp_14_fu_2107_p1 == 3'd0) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_3_0_we0 = 1'b1;
    end else begin
        kernel_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_1_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_1_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_1_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_1_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_1_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_1_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_1_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_1_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_1_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_1_address1 = 4'd1;
        end else begin
            kernel_3_1_address1 = 'bx;
        end
    end else begin
        kernel_3_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_1_ce0 = 1'b1;
    end else begin
        kernel_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_1_ce1 = 1'b1;
    end else begin
        kernel_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd1))) begin
        kernel_3_1_we0 = 1'b1;
    end else begin
        kernel_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_2_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_2_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_2_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_2_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_2_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_2_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_2_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_2_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_2_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_2_address1 = 4'd1;
        end else begin
            kernel_3_2_address1 = 'bx;
        end
    end else begin
        kernel_3_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_2_ce0 = 1'b1;
    end else begin
        kernel_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_2_ce1 = 1'b1;
    end else begin
        kernel_3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd2))) begin
        kernel_3_2_we0 = 1'b1;
    end else begin
        kernel_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_3_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_3_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_3_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_3_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_3_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_3_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_3_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_3_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_3_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_3_address1 = 4'd1;
        end else begin
            kernel_3_3_address1 = 'bx;
        end
    end else begin
        kernel_3_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_3_ce0 = 1'b1;
    end else begin
        kernel_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_3_ce1 = 1'b1;
    end else begin
        kernel_3_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd3))) begin
        kernel_3_3_we0 = 1'b1;
    end else begin
        kernel_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_4_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_4_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_4_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_4_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_4_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_4_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_4_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_4_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_4_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_4_address1 = 4'd1;
        end else begin
            kernel_3_4_address1 = 'bx;
        end
    end else begin
        kernel_3_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_4_ce0 = 1'b1;
    end else begin
        kernel_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_4_ce1 = 1'b1;
    end else begin
        kernel_3_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd4))) begin
        kernel_3_4_we0 = 1'b1;
    end else begin
        kernel_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_5_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_5_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_5_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_5_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_5_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_5_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_5_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_5_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_5_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_5_address1 = 4'd1;
        end else begin
            kernel_3_5_address1 = 'bx;
        end
    end else begin
        kernel_3_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_5_ce0 = 1'b1;
    end else begin
        kernel_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_5_ce1 = 1'b1;
    end else begin
        kernel_3_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd5))) begin
        kernel_3_5_we0 = 1'b1;
    end else begin
        kernel_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_6_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_6_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_6_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_6_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_6_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_6_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_6_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_6_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_6_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_6_address1 = 4'd1;
        end else begin
            kernel_3_6_address1 = 'bx;
        end
    end else begin
        kernel_3_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_6_ce0 = 1'b1;
    end else begin
        kernel_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_6_ce1 = 1'b1;
    end else begin
        kernel_3_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd6))) begin
        kernel_3_6_we0 = 1'b1;
    end else begin
        kernel_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_7_address0 = 4'd7;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_7_address0 = 4'd5;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        kernel_3_7_address0 = 4'd3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        kernel_3_7_address0 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_3_7_address0 = tmp_mid2_fu_2001_p1;
    end else begin
        kernel_3_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
            kernel_3_7_address1 = 4'd8;
        end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            kernel_3_7_address1 = 4'd6;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            kernel_3_7_address1 = 4'd4;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            kernel_3_7_address1 = 4'd2;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            kernel_3_7_address1 = 4'd1;
        end else begin
            kernel_3_7_address1 = 'bx;
        end
    end else begin
        kernel_3_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_3_7_ce0 = 1'b1;
    end else begin
        kernel_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        kernel_3_7_ce1 = 1'b1;
    end else begin
        kernel_3_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (m_t_mid2_fu_2091_p3 == 2'd3) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_14_fu_2107_p1 == 3'd7))) begin
        kernel_3_7_we0 = 1'b1;
    end else begin
        kernel_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_0_ack_out = 1'b1;
    end else begin
        weight_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((weight_0_sel == 1'b1)) begin
        weight_0_data_out = weight_0_payload_B;
    end else begin
        weight_0_data_out = weight_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_TDATA_blk_n = weight_0_state[1'd0];
    end else begin
        weight_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0)) & (exitcond_flatten1_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((weight_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((1'b0 == ap_block_pp1_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Bias_Data = Bias_Data_1_data_reg;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage7_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage8_11001 = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage8_subdone = ((b_Data_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((exitcond_flatten1_fu_1961_p2 == 1'd0) & (weight_0_vld_out == 1'b0));
end

assign ap_block_state20_pp1_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b_Data_1_ack_in = b_Data_1_state[1'd1];

assign b_Data_1_ack_out = b_Data_TREADY;

assign b_Data_1_load_A = (~b_Data_1_sel_wr & b_Data_1_state_cmp_full);

assign b_Data_1_load_B = (b_Data_1_state_cmp_full & b_Data_1_sel_wr);

assign b_Data_1_sel = b_Data_1_sel_rd;

assign b_Data_1_state_cmp_full = ((b_Data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign b_Data_1_vld_out = b_Data_1_state[1'd0];

assign b_Data_TDATA = b_Data_1_data_out;

assign b_Data_TVALID = b_Data_1_state[1'd0];

assign exitcond2_mid_fu_2061_p2 = (not_exitcond_flatten_fu_2049_p2 & exitcond_fu_2055_p2);

assign exitcond_flatten1_fu_1961_p2 = ((indvar_flatten1_reg_1618 == 9'd288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1973_p2 = ((indvar_flatten_reg_1640 == 7'd32) ? 1'b1 : 1'b0);

assign exitcond_fu_2055_p2 = ((n2_reg_1662 == 4'd8) ? 1'b1 : 1'b0);

assign i_s_fu_1987_p2 = (4'd1 + i_reg_1629);

assign indvar_flatten_next1_fu_1967_p2 = (indvar_flatten1_reg_1618 + 9'd1);

assign indvar_flatten_next_fu_2123_p3 = ((exitcond_flatten_fu_1973_p2[0:0] === 1'b1) ? 7'd1 : indvar_flatten_op_fu_2117_p2);

assign indvar_flatten_op_fu_2117_p2 = (indvar_flatten_reg_1640 + 7'd1);

assign m_1_fu_2067_p2 = (3'd1 + m_mid_fu_1979_p3);

assign m_mid2_fu_2099_p3 = ((exitcond2_mid_fu_2061_p2[0:0] === 1'b1) ? m_1_fu_2067_p2 : m_mid_fu_1979_p3);

assign m_mid_fu_1979_p3 = ((exitcond_flatten_fu_1973_p2[0:0] === 1'b1) ? 3'd0 : m_reg_1651);

assign m_t_mid2_fu_2091_p3 = ((exitcond2_mid_fu_2061_p2[0:0] === 1'b1) ? tmp_4_fu_2087_p1 : m_t_mid_fu_2041_p3);

assign m_t_mid_fu_2041_p3 = ((exitcond_flatten_fu_1973_p2[0:0] === 1'b1) ? 2'd0 : tmp_2_fu_2037_p1);

assign n2_mid2_fu_2079_p3 = ((tmp_fu_2073_p2[0:0] === 1'b1) ? 4'd0 : n2_reg_1662);

assign n_fu_2111_p2 = (n2_mid2_fu_2079_p3 + 4'd1);

assign not_exitcond_flatten_fu_2049_p2 = (exitcond_flatten_fu_1973_p2 ^ 1'd1);

assign tmp_10_fu_2527_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{reg_1956}, {reg_1951}}, {reg_1946}}, {reg_1941}}, {reg_1936}}, {reg_1931}}, {reg_1926}}, {reg_1921}}, {reg_1916}}, {reg_1911}}, {reg_1906}}, {reg_1901}}, {reg_1896}}, {reg_1891}}, {reg_1886}}, {reg_1881}}, {reg_1876}}, {reg_1871}}, {reg_1866}}, {reg_1861}}, {reg_1856}}, {reg_1851}}, {reg_1846}}, {reg_1841}}, {reg_1836}}, {reg_1831}}, {reg_1826}}, {reg_1821}}, {reg_1816}}, {reg_1811}}, {reg_1806}}, {reg_1801}};

assign tmp_11_fu_2596_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{kernel_3_7_load_7_reg_3111}, {kernel_2_7_load_7_reg_3106}}, {kernel_1_7_load_7_reg_3101}}, {kernel_0_7_load_7_reg_3096}}, {kernel_3_6_load_7_reg_3091}}, {kernel_2_6_load_7_reg_3086}}, {kernel_1_6_load_7_reg_3081}}, {kernel_0_6_load_7_reg_3076}}, {kernel_3_5_load_7_reg_3071}}, {kernel_2_5_load_7_reg_3066}}, {kernel_1_5_load_7_reg_3061}}, {kernel_0_5_load_7_reg_3056}}, {kernel_3_4_load_7_reg_3051}}, {kernel_2_4_load_7_reg_3046}}, {kernel_1_4_load_7_reg_3041}}, {kernel_0_4_load_7_reg_3036}}, {kernel_3_3_load_7_reg_3031}}, {kernel_2_3_load_7_reg_3026}}, {kernel_1_3_load_7_reg_3021}}, {kernel_0_3_load_7_reg_3016}}, {kernel_3_2_load_7_reg_3011}}, {kernel_2_2_load_7_reg_3006}}, {kernel_1_2_load_7_reg_3001}}, {kernel_0_2_load_7_reg_2996}}, {kernel_3_1_load_7_reg_2991}}, {kernel_2_1_load_7_reg_2986}}, {kernel_1_1_load_7_reg_2981}}, {kernel_0_1_load_7_reg_2976}}, {kernel_3_0_load_7_reg_2971}}, {kernel_2_0_load_7_reg_2966}}, {kernel_1_0_load_7_reg_2961}}, {kernel_0_0_load_7_reg_2956}};

assign tmp_12_fu_2633_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{reg_1797}, {reg_1793}}, {reg_1789}}, {reg_1785}}, {reg_1781}}, {reg_1777}}, {reg_1773}}, {reg_1769}}, {reg_1765}}, {reg_1761}}, {reg_1757}}, {reg_1753}}, {reg_1749}}, {reg_1745}}, {reg_1741}}, {reg_1737}}, {reg_1733}}, {reg_1729}}, {reg_1725}}, {reg_1721}}, {reg_1717}}, {reg_1713}}, {reg_1709}}, {reg_1705}}, {reg_1701}}, {reg_1697}}, {reg_1693}}, {reg_1689}}, {reg_1685}}, {reg_1681}}, {reg_1677}}, {reg_1673}};

assign tmp_14_fu_2107_p1 = n2_mid2_fu_2079_p3[2:0];

assign tmp_1_fu_2131_p9 = {{{{{{{{weight_0_data_out}, {weight_read_6_reg_2766}}, {weight_read_5_reg_2761}}, {weight_read_4_reg_2756}}, {weight_read_3_reg_2751}}, {weight_read_2_reg_2746}}, {weight_read_1_reg_2741}}, {weight_read_reg_2736}};

assign tmp_2_fu_2037_p1 = m_reg_1651[1:0];

assign tmp_4_fu_2087_p1 = m_1_fu_2067_p2[1:0];

assign tmp_5_fu_2145_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{kernel_3_7_q0}, {kernel_2_7_q0}}, {kernel_1_7_q0}}, {kernel_0_7_q0}}, {kernel_3_6_q0}}, {kernel_2_6_q0}}, {kernel_1_6_q0}}, {kernel_0_6_q0}}, {kernel_3_5_q0}}, {kernel_2_5_q0}}, {kernel_1_5_q0}}, {kernel_0_5_q0}}, {kernel_3_4_q0}}, {kernel_2_4_q0}}, {kernel_1_4_q0}}, {kernel_0_4_q0}}, {kernel_3_3_q0}}, {kernel_2_3_q0}}, {kernel_1_3_q0}}, {kernel_0_3_q0}}, {kernel_3_2_q0}}, {kernel_2_2_q0}}, {kernel_1_2_q0}}, {kernel_0_2_q0}}, {kernel_3_1_q0}}, {kernel_2_1_q0}}, {kernel_1_1_q0}}, {kernel_0_1_q0}}, {kernel_3_0_q0}}, {kernel_2_0_q0}}, {kernel_1_0_q0}}, {kernel_0_0_q0}};

assign tmp_6_fu_2214_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{reg_1797}, {reg_1793}}, {reg_1789}}, {reg_1785}}, {reg_1781}}, {reg_1777}}, {reg_1773}}, {reg_1769}}, {reg_1765}}, {reg_1761}}, {reg_1757}}, {reg_1753}}, {reg_1749}}, {reg_1745}}, {reg_1741}}, {reg_1737}}, {reg_1733}}, {reg_1729}}, {reg_1725}}, {reg_1721}}, {reg_1717}}, {reg_1713}}, {reg_1709}}, {reg_1705}}, {reg_1701}}, {reg_1697}}, {reg_1693}}, {reg_1689}}, {reg_1685}}, {reg_1681}}, {reg_1677}}, {reg_1673}};

assign tmp_7_fu_2283_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{reg_1797}, {reg_1793}}, {reg_1789}}, {reg_1785}}, {reg_1781}}, {reg_1777}}, {reg_1773}}, {reg_1769}}, {reg_1765}}, {reg_1761}}, {reg_1757}}, {reg_1753}}, {reg_1749}}, {reg_1745}}, {reg_1741}}, {reg_1737}}, {reg_1733}}, {reg_1729}}, {reg_1725}}, {reg_1721}}, {reg_1717}}, {reg_1713}}, {reg_1709}}, {reg_1705}}, {reg_1701}}, {reg_1697}}, {reg_1693}}, {reg_1689}}, {reg_1685}}, {reg_1681}}, {reg_1677}}, {reg_1673}};

assign tmp_8_fu_2352_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{reg_1956}, {reg_1951}}, {reg_1946}}, {reg_1941}}, {reg_1936}}, {reg_1931}}, {reg_1926}}, {reg_1921}}, {reg_1916}}, {reg_1911}}, {reg_1906}}, {reg_1901}}, {reg_1896}}, {reg_1891}}, {reg_1886}}, {reg_1881}}, {reg_1876}}, {reg_1871}}, {reg_1866}}, {reg_1861}}, {reg_1856}}, {reg_1851}}, {reg_1846}}, {reg_1841}}, {reg_1836}}, {reg_1831}}, {reg_1826}}, {reg_1821}}, {reg_1816}}, {reg_1811}}, {reg_1806}}, {reg_1801}};

assign tmp_9_fu_2421_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{reg_1797}, {reg_1793}}, {reg_1789}}, {reg_1785}}, {reg_1781}}, {reg_1777}}, {reg_1773}}, {reg_1769}}, {reg_1765}}, {reg_1761}}, {reg_1757}}, {reg_1753}}, {reg_1749}}, {reg_1745}}, {reg_1741}}, {reg_1737}}, {reg_1733}}, {reg_1729}}, {reg_1725}}, {reg_1721}}, {reg_1717}}, {reg_1713}}, {reg_1709}}, {reg_1705}}, {reg_1701}}, {reg_1697}}, {reg_1693}}, {reg_1689}}, {reg_1685}}, {reg_1681}}, {reg_1677}}, {reg_1673}};

assign tmp_fu_2073_p2 = (exitcond_flatten_fu_1973_p2 | exitcond2_mid_fu_2061_p2);

assign tmp_mid2_fu_2001_p1 = tmp_mid2_v_fu_1993_p3;

assign tmp_mid2_v_fu_1993_p3 = ((exitcond_flatten_fu_1973_p2[0:0] === 1'b1) ? i_s_fu_1987_p2 : i_reg_1629);

assign tmp_s_fu_2490_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{kernel_3_7_load_5_reg_2946}, {kernel_2_7_load_5_reg_2941}}, {kernel_1_7_load_5_reg_2936}}, {kernel_0_7_load_5_reg_2931}}, {kernel_3_6_load_5_reg_2926}}, {kernel_2_6_load_5_reg_2921}}, {kernel_1_6_load_5_reg_2916}}, {kernel_0_6_load_5_reg_2911}}, {kernel_3_5_load_5_reg_2906}}, {kernel_2_5_load_5_reg_2901}}, {kernel_1_5_load_5_reg_2896}}, {kernel_0_5_load_5_reg_2891}}, {kernel_3_4_load_5_reg_2886}}, {kernel_2_4_load_5_reg_2881}}, {kernel_1_4_load_5_reg_2876}}, {kernel_0_4_load_5_reg_2871}}, {kernel_3_3_load_5_reg_2866}}, {kernel_2_3_load_5_reg_2861}}, {kernel_1_3_load_5_reg_2856}}, {kernel_0_3_load_5_reg_2851}}, {kernel_3_2_load_5_reg_2846}}, {kernel_2_2_load_5_reg_2841}}, {kernel_1_2_load_5_reg_2836}}, {kernel_0_2_load_5_reg_2831}}, {kernel_3_1_load_5_reg_2826}}, {kernel_2_1_load_5_reg_2821}}, {kernel_1_1_load_5_reg_2816}}, {kernel_0_1_load_5_reg_2811}}, {kernel_3_0_load_5_reg_2806}}, {kernel_2_0_load_5_reg_2801}}, {kernel_1_0_load_5_reg_2796}}, {kernel_0_0_load_5_reg_2791}};

assign weight_0_ack_in = weight_0_state[1'd1];

assign weight_0_load_A = (weight_0_state_cmp_full & ~weight_0_sel_wr);

assign weight_0_load_B = (weight_0_state_cmp_full & weight_0_sel_wr);

assign weight_0_sel = weight_0_sel_rd;

assign weight_0_state_cmp_full = ((weight_0_state != 2'd1) ? 1'b1 : 1'b0);

assign weight_0_vld_in = weight_TVALID;

assign weight_0_vld_out = weight_0_state[1'd0];

assign weight_TREADY = weight_0_state[1'd1];

endmodule //Layer2_Kernel
