// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SVC_Vote,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.102000,HLS_SYN_LAT=69,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=245,HLS_SYN_LUT=2358,HLS_VERSION=2018_3}" *)

module SVC_Vote (
        ap_clk,
        ap_rst_n,
        res_TDATA,
        res_TVALID,
        res_TREADY,
        pre_label_TDATA,
        pre_label_TVALID,
        pre_label_TREADY
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst_n;
input  [7:0] res_TDATA;
input   res_TVALID;
output   res_TREADY;
output  [7:0] pre_label_TDATA;
output   pre_label_TVALID;
input   pre_label_TREADY;

 reg    ap_rst_n_inv;
reg   [7:0] res_0_data_out;
wire    res_0_vld_in;
wire    res_0_vld_out;
wire    res_0_ack_in;
reg    res_0_ack_out;
reg   [7:0] res_0_payload_A;
reg   [7:0] res_0_payload_B;
reg    res_0_sel_rd;
reg    res_0_sel_wr;
wire    res_0_sel;
wire    res_0_load_A;
wire    res_0_load_B;
reg   [1:0] res_0_state;
wire    res_0_state_cmp_full;
reg   [7:0] pre_label_1_data_out;
reg    pre_label_1_vld_in;
wire    pre_label_1_vld_out;
wire    pre_label_1_ack_in;
wire    pre_label_1_ack_out;
reg   [7:0] pre_label_1_payload_A;
reg   [7:0] pre_label_1_payload_B;
reg    pre_label_1_sel_rd;
reg    pre_label_1_sel_wr;
wire    pre_label_1_sel;
wire    pre_label_1_load_A;
wire    pre_label_1_load_B;
reg   [1:0] pre_label_1_state;
wire    pre_label_1_state_cmp_full;
reg    res_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond2_fu_921_p2;
reg    pre_label_TDATA_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [3:0] indvarinc_fu_373_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] vote_9_1_fu_497_p3;
wire   [7:0] vote_8_1_fu_569_p3;
wire   [7:0] vote_7_1_fu_633_p3;
wire   [7:0] vote_6_1_fu_689_p3;
wire   [7:0] vote_5_1_fu_737_p3;
wire   [7:0] vote_4_1_fu_777_p3;
wire   [7:0] vote_3_1_fu_809_p3;
wire   [7:0] vote_2_1_fu_833_p3;
wire   [7:0] vote_1_1_fu_849_p3;
wire   [7:0] vote_0_1_fu_857_p3;
wire   [0:0] tmp_1_fu_865_p2;
wire   [5:0] p_rec_fu_927_p2;
reg    ap_block_state3;
wire   [7:0] vote_9_5_fu_1983_p3;
wire   [7:0] vote_9_122_fu_1991_p3;
wire   [7:0] vote_9_123_fu_1999_p3;
wire   [7:0] vote_9_124_fu_2007_p3;
wire   [7:0] vote_9_125_fu_2015_p3;
wire   [7:0] vote_9_126_fu_2023_p3;
wire   [7:0] vote_9_127_fu_2031_p3;
wire   [7:0] vote_9_128_fu_2039_p3;
wire   [7:0] vote_9_129_fu_2047_p3;
wire   [7:0] vote_9_130_fu_2055_p3;
wire   [7:0] vj_1_fu_2087_p3;
wire   [7:0] vi_1_fu_2095_p3;
wire   [7:0] n_0_max_n_fu_2149_p3;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_fu_2103_p2;
wire   [3:0] n_fu_2157_p2;
reg   [3:0] invdar_reg_143;
wire    ap_CS_fsm_state1;
reg   [7:0] vote_9_2_reg_154;
reg   [7:0] vote_8_2_reg_164;
reg   [7:0] vote_9_65_reg_174;
reg   [7:0] vote_9_6_reg_184;
reg   [7:0] vote_9_7_reg_194;
reg   [7:0] vote_9_25_reg_204;
reg   [7:0] vote_9_34_reg_214;
reg   [7:0] vote_9_42_reg_224;
reg   [7:0] vote_9_49_reg_234;
reg   [7:0] vote_9_55_reg_244;
reg   [7:0] vj_reg_254;
reg   [7:0] vi_reg_265;
reg   [5:0] p_0_rec_reg_276;
reg   [7:0] max_n_reg_287;
wire    ap_CS_fsm_state4;
wire   [3:0] ap_phi_mux_max_n_1_phi_fu_304_p4;
reg   [3:0] max_n_1_reg_300;
reg   [7:0] ap_phi_mux_vote_load_2_phi_phi_fu_314_p18;
reg   [7:0] vote_0_fu_90;
reg   [7:0] vote_1_fu_94;
reg   [7:0] vote_2_fu_98;
reg   [7:0] vote_3_fu_102;
reg   [7:0] vote_4_fu_106;
reg   [7:0] vote_5_fu_110;
reg   [7:0] vote_6_fu_114;
reg   [7:0] vote_7_fu_118;
reg   [7:0] vote_8_fu_122;
reg   [7:0] vote_9_fu_126;
wire   [0:0] sel_tmp_fu_379_p2;
wire   [0:0] sel_tmp6_fu_393_p2;
wire   [7:0] sel_tmp5_fu_385_p3;
wire   [0:0] sel_tmp8_fu_407_p2;
wire   [7:0] sel_tmp7_fu_399_p3;
wire   [0:0] sel_tmp1_fu_421_p2;
wire   [7:0] sel_tmp9_fu_413_p3;
wire   [0:0] sel_tmp3_fu_435_p2;
wire   [7:0] sel_tmp2_fu_427_p3;
wire   [0:0] sel_tmp10_fu_449_p2;
wire   [7:0] sel_tmp4_fu_441_p3;
wire   [0:0] sel_tmp12_fu_463_p2;
wire   [7:0] sel_tmp11_fu_455_p3;
wire   [0:0] sel_tmp14_fu_477_p2;
wire   [7:0] sel_tmp13_fu_469_p3;
wire   [0:0] sel_tmp16_fu_491_p2;
wire   [7:0] sel_tmp15_fu_483_p3;
wire   [7:0] sel_tmp17_fu_505_p3;
wire   [7:0] sel_tmp18_fu_513_p3;
wire   [7:0] sel_tmp19_fu_521_p3;
wire   [7:0] sel_tmp20_fu_529_p3;
wire   [7:0] sel_tmp21_fu_537_p3;
wire   [7:0] sel_tmp22_fu_545_p3;
wire   [7:0] sel_tmp23_fu_553_p3;
wire   [7:0] sel_tmp24_fu_561_p3;
wire   [7:0] sel_tmp25_fu_577_p3;
wire   [7:0] sel_tmp26_fu_585_p3;
wire   [7:0] sel_tmp27_fu_593_p3;
wire   [7:0] sel_tmp28_fu_601_p3;
wire   [7:0] sel_tmp29_fu_609_p3;
wire   [7:0] sel_tmp30_fu_617_p3;
wire   [7:0] sel_tmp31_fu_625_p3;
wire   [7:0] sel_tmp32_fu_641_p3;
wire   [7:0] sel_tmp33_fu_649_p3;
wire   [7:0] sel_tmp34_fu_657_p3;
wire   [7:0] sel_tmp35_fu_665_p3;
wire   [7:0] sel_tmp36_fu_673_p3;
wire   [7:0] sel_tmp37_fu_681_p3;
wire   [7:0] sel_tmp38_fu_697_p3;
wire   [7:0] sel_tmp39_fu_705_p3;
wire   [7:0] sel_tmp40_fu_713_p3;
wire   [7:0] sel_tmp41_fu_721_p3;
wire   [7:0] sel_tmp42_fu_729_p3;
wire   [7:0] sel_tmp43_fu_745_p3;
wire   [7:0] sel_tmp44_fu_753_p3;
wire   [7:0] sel_tmp45_fu_761_p3;
wire   [7:0] sel_tmp46_fu_769_p3;
wire   [7:0] sel_tmp47_fu_785_p3;
wire   [7:0] sel_tmp48_fu_793_p3;
wire   [7:0] sel_tmp49_fu_801_p3;
wire   [7:0] sel_tmp50_fu_817_p3;
wire   [7:0] sel_tmp51_fu_825_p3;
wire   [7:0] sel_tmp52_fu_841_p3;
wire   [3:0] tmp_7_fu_939_p1;
wire   [7:0] tmp_4_fu_943_p12;
wire   [3:0] tmp_8_fu_975_p1;
wire   [7:0] tmp_5_fu_979_p12;
wire   [0:0] sel_tmp53_fu_1011_p2;
wire   [7:0] vote_9_131_fu_969_p2;
wire   [0:0] sel_tmp54_fu_1025_p2;
wire   [7:0] vote_9_8_fu_1017_p3;
wire   [0:0] sel_tmp55_fu_1039_p2;
wire   [7:0] vote_9_9_fu_1031_p3;
wire   [0:0] sel_tmp56_fu_1053_p2;
wire   [7:0] vote_9_10_fu_1045_p3;
wire   [0:0] sel_tmp57_fu_1067_p2;
wire   [7:0] vote_9_11_fu_1059_p3;
wire   [0:0] sel_tmp58_fu_1081_p2;
wire   [7:0] vote_9_12_fu_1073_p3;
wire   [0:0] sel_tmp59_fu_1095_p2;
wire   [7:0] vote_9_13_fu_1087_p3;
wire   [0:0] sel_tmp60_fu_1109_p2;
wire   [7:0] vote_9_14_fu_1101_p3;
wire   [0:0] sel_tmp61_fu_1123_p2;
wire   [7:0] vote_9_15_fu_1115_p3;
wire   [7:0] vote_9_16_fu_1137_p3;
wire   [7:0] vote_9_17_fu_1145_p3;
wire   [7:0] vote_9_18_fu_1153_p3;
wire   [7:0] vote_9_19_fu_1161_p3;
wire   [7:0] vote_9_20_fu_1169_p3;
wire   [7:0] vote_9_21_fu_1177_p3;
wire   [7:0] vote_9_22_fu_1185_p3;
wire   [7:0] vote_9_23_fu_1193_p3;
wire   [7:0] vote_9_26_fu_1209_p3;
wire   [7:0] vote_9_27_fu_1217_p3;
wire   [7:0] vote_9_28_fu_1225_p3;
wire   [7:0] vote_9_29_fu_1233_p3;
wire   [7:0] vote_9_30_fu_1241_p3;
wire   [7:0] vote_9_31_fu_1249_p3;
wire   [7:0] vote_9_32_fu_1257_p3;
wire   [7:0] vote_9_35_fu_1273_p3;
wire   [7:0] vote_9_36_fu_1281_p3;
wire   [7:0] vote_9_37_fu_1289_p3;
wire   [7:0] vote_9_38_fu_1297_p3;
wire   [7:0] vote_9_39_fu_1305_p3;
wire   [7:0] vote_9_40_fu_1313_p3;
wire   [7:0] vote_9_43_fu_1329_p3;
wire   [7:0] vote_9_44_fu_1337_p3;
wire   [7:0] vote_9_45_fu_1345_p3;
wire   [7:0] vote_9_46_fu_1353_p3;
wire   [7:0] vote_9_47_fu_1361_p3;
wire   [7:0] vote_9_50_fu_1377_p3;
wire   [7:0] vote_9_51_fu_1385_p3;
wire   [7:0] vote_9_52_fu_1393_p3;
wire   [7:0] vote_9_53_fu_1401_p3;
wire   [7:0] vote_9_56_fu_1417_p3;
wire   [7:0] vote_9_57_fu_1425_p3;
wire   [7:0] vote_9_58_fu_1433_p3;
wire   [7:0] vote_9_61_fu_1449_p3;
wire   [7:0] vote_9_62_fu_1457_p3;
wire   [7:0] vote_9_66_fu_1473_p3;
wire   [0:0] sel_tmp62_fu_1497_p2;
wire   [7:0] vote_9_132_fu_1005_p2;
wire   [0:0] sel_tmp63_fu_1511_p2;
wire   [7:0] vote_9_69_fu_1503_p3;
wire   [0:0] sel_tmp64_fu_1525_p2;
wire   [7:0] vote_9_70_fu_1517_p3;
wire   [0:0] sel_tmp65_fu_1539_p2;
wire   [7:0] vote_9_71_fu_1531_p3;
wire   [0:0] sel_tmp66_fu_1553_p2;
wire   [7:0] vote_9_72_fu_1545_p3;
wire   [0:0] sel_tmp67_fu_1567_p2;
wire   [7:0] vote_9_73_fu_1559_p3;
wire   [0:0] sel_tmp68_fu_1581_p2;
wire   [7:0] vote_9_74_fu_1573_p3;
wire   [0:0] sel_tmp69_fu_1595_p2;
wire   [7:0] vote_9_75_fu_1587_p3;
wire   [0:0] sel_tmp70_fu_1609_p2;
wire   [7:0] vote_9_76_fu_1601_p3;
wire   [7:0] vote_9_77_fu_1623_p3;
wire   [7:0] vote_9_78_fu_1631_p3;
wire   [7:0] vote_9_79_fu_1639_p3;
wire   [7:0] vote_9_80_fu_1647_p3;
wire   [7:0] vote_9_81_fu_1655_p3;
wire   [7:0] vote_9_82_fu_1663_p3;
wire   [7:0] vote_9_83_fu_1671_p3;
wire   [7:0] vote_9_84_fu_1679_p3;
wire   [7:0] vote_9_86_fu_1695_p3;
wire   [7:0] vote_9_87_fu_1703_p3;
wire   [7:0] vote_9_88_fu_1711_p3;
wire   [7:0] vote_9_89_fu_1719_p3;
wire   [7:0] vote_9_90_fu_1727_p3;
wire   [7:0] vote_9_91_fu_1735_p3;
wire   [7:0] vote_9_92_fu_1743_p3;
wire   [7:0] vote_9_94_fu_1759_p3;
wire   [7:0] vote_9_95_fu_1767_p3;
wire   [7:0] vote_9_96_fu_1775_p3;
wire   [7:0] vote_9_97_fu_1783_p3;
wire   [7:0] vote_9_98_fu_1791_p3;
wire   [7:0] vote_9_99_fu_1799_p3;
wire   [7:0] vote_9_101_fu_1815_p3;
wire   [7:0] vote_9_102_fu_1823_p3;
wire   [7:0] vote_9_103_fu_1831_p3;
wire   [7:0] vote_9_104_fu_1839_p3;
wire   [7:0] vote_9_105_fu_1847_p3;
wire   [7:0] vote_9_107_fu_1863_p3;
wire   [7:0] vote_9_108_fu_1871_p3;
wire   [7:0] vote_9_109_fu_1879_p3;
wire   [7:0] vote_9_110_fu_1887_p3;
wire   [7:0] vote_9_112_fu_1903_p3;
wire   [7:0] vote_9_113_fu_1911_p3;
wire   [7:0] vote_9_114_fu_1919_p3;
wire   [7:0] vote_9_116_fu_1935_p3;
wire   [7:0] vote_9_117_fu_1943_p3;
wire   [7:0] vote_9_119_fu_1959_p3;
wire   [0:0] tmp_2_fu_933_p2;
wire   [7:0] vote_9_3_fu_1129_p3;
wire   [7:0] vote_9_4_fu_1615_p3;
wire   [7:0] vote_9_24_fu_1201_p3;
wire   [7:0] vote_9_85_fu_1687_p3;
wire   [7:0] vote_9_33_fu_1265_p3;
wire   [7:0] vote_9_93_fu_1751_p3;
wire   [7:0] vote_9_41_fu_1321_p3;
wire   [7:0] vote_9_100_fu_1807_p3;
wire   [7:0] vote_9_48_fu_1369_p3;
wire   [7:0] vote_9_106_fu_1855_p3;
wire   [7:0] vote_9_54_fu_1409_p3;
wire   [7:0] vote_9_111_fu_1895_p3;
wire   [7:0] vote_9_59_fu_1441_p3;
wire   [7:0] vote_9_115_fu_1927_p3;
wire   [7:0] vote_9_63_fu_1465_p3;
wire   [7:0] vote_9_118_fu_1951_p3;
wire   [7:0] vote_9_67_fu_1481_p3;
wire   [7:0] vote_9_120_fu_1967_p3;
wire   [7:0] vote_9_68_fu_1489_p3;
wire   [7:0] vote_9_121_fu_1975_p3;
wire   [7:0] vj_2_fu_2063_p2;
wire   [0:0] tmp_s_fu_2069_p2;
wire   [7:0] vj_3_fu_2081_p2;
wire   [7:0] vi_2_fu_2075_p2;
wire   [3:0] tmp_6_fu_2117_p11;
wire   [7:0] tmp_6_fu_2117_p12;
wire   [0:0] tmp_9_fu_2143_p2;
wire   [7:0] max_n_1_cast_fu_2109_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_condition_1473;

// power-on initialization
initial begin
#0 res_0_sel_rd = 1'b0;
#0 res_0_sel_wr = 1'b0;
#0 res_0_state = 2'd0;
#0 pre_label_1_sel_rd = 1'b0;
#0 pre_label_1_sel_wr = 1'b0;
#0 pre_label_1_state = 2'd0;
#0 ap_CS_fsm = 7'd1;
end

SVC_Vote_mux_104_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
SVC_Vote_mux_104_bkb_U1(
    .din0(vote_9_55_reg_244),
    .din1(vote_9_49_reg_234),
    .din2(vote_9_42_reg_224),
    .din3(vote_9_34_reg_214),
    .din4(vote_9_25_reg_204),
    .din5(vote_9_7_reg_194),
    .din6(vote_9_6_reg_184),
    .din7(vote_9_65_reg_174),
    .din8(vote_8_2_reg_164),
    .din9(vote_9_2_reg_154),
    .din10(tmp_7_fu_939_p1),
    .dout(tmp_4_fu_943_p12)
);

SVC_Vote_mux_104_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
SVC_Vote_mux_104_bkb_U2(
    .din0(vote_9_55_reg_244),
    .din1(vote_9_49_reg_234),
    .din2(vote_9_42_reg_224),
    .din3(vote_9_34_reg_214),
    .din4(vote_9_25_reg_204),
    .din5(vote_9_7_reg_194),
    .din6(vote_9_6_reg_184),
    .din7(vote_9_65_reg_174),
    .din8(vote_8_2_reg_164),
    .din9(vote_9_2_reg_154),
    .din10(tmp_8_fu_975_p1),
    .dout(tmp_5_fu_979_p12)
);

SVC_Vote_mux_104_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
SVC_Vote_mux_104_bkb_U3(
    .din0(vote_9_55_reg_244),
    .din1(vote_9_49_reg_234),
    .din2(vote_9_42_reg_224),
    .din3(vote_9_34_reg_214),
    .din4(vote_9_25_reg_204),
    .din5(vote_9_7_reg_194),
    .din6(vote_9_6_reg_184),
    .din7(vote_9_65_reg_174),
    .din8(vote_8_2_reg_164),
    .din9(vote_9_2_reg_154),
    .din10(tmp_6_fu_2117_p11),
    .dout(tmp_6_fu_2117_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_label_1_sel_rd <= 1'b0;
    end else begin
        if (((pre_label_1_ack_out == 1'b1) & (pre_label_1_vld_out == 1'b1))) begin
            pre_label_1_sel_rd <= ~pre_label_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_label_1_sel_wr <= 1'b0;
    end else begin
        if (((pre_label_1_ack_in == 1'b1) & (pre_label_1_vld_in == 1'b1))) begin
            pre_label_1_sel_wr <= ~pre_label_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_label_1_state <= 2'd0;
    end else begin
        if ((((pre_label_1_state == 2'd2) & (pre_label_1_vld_in == 1'b0)) | ((pre_label_1_state == 2'd3) & (pre_label_1_vld_in == 1'b0) & (pre_label_1_ack_out == 1'b1)))) begin
            pre_label_1_state <= 2'd2;
        end else if ((((pre_label_1_state == 2'd1) & (pre_label_1_ack_out == 1'b0)) | ((pre_label_1_state == 2'd3) & (pre_label_1_ack_out == 1'b0) & (pre_label_1_vld_in == 1'b1)))) begin
            pre_label_1_state <= 2'd1;
        end else if (((~((pre_label_1_vld_in == 1'b0) & (pre_label_1_ack_out == 1'b1)) & ~((pre_label_1_ack_out == 1'b0) & (pre_label_1_vld_in == 1'b1)) & (pre_label_1_state == 2'd3)) | ((pre_label_1_state == 2'd1) & (pre_label_1_ack_out == 1'b1)) | ((pre_label_1_state == 2'd2) & (pre_label_1_vld_in == 1'b1)))) begin
            pre_label_1_state <= 2'd3;
        end else begin
            pre_label_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        res_0_sel_rd <= 1'b0;
    end else begin
        if (((res_0_ack_out == 1'b1) & (res_0_vld_out == 1'b1))) begin
            res_0_sel_rd <= ~res_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        res_0_sel_wr <= 1'b0;
    end else begin
        if (((res_0_ack_in == 1'b1) & (res_0_vld_in == 1'b1))) begin
            res_0_sel_wr <= ~res_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        res_0_state <= 2'd0;
    end else begin
        if ((((res_0_state == 2'd2) & (res_0_vld_in == 1'b0)) | ((res_0_state == 2'd3) & (res_0_vld_in == 1'b0) & (res_0_ack_out == 1'b1)))) begin
            res_0_state <= 2'd2;
        end else if ((((res_0_state == 2'd1) & (res_0_ack_out == 1'b0)) | ((res_0_state == 2'd3) & (res_0_ack_out == 1'b0) & (res_0_vld_in == 1'b1)))) begin
            res_0_state <= 2'd1;
        end else if (((~((res_0_vld_in == 1'b0) & (res_0_ack_out == 1'b1)) & ~((res_0_ack_out == 1'b0) & (res_0_vld_in == 1'b1)) & (res_0_state == 2'd3)) | ((res_0_state == 2'd1) & (res_0_ack_out == 1'b1)) | ((res_0_state == 2'd2) & (res_0_vld_in == 1'b1)))) begin
            res_0_state <= 2'd3;
        end else begin
            res_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_143 <= indvarinc_fu_373_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        invdar_reg_143 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_n_1_reg_300 <= 4'd1;
    end else if (((exitcond_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        max_n_1_reg_300 <= n_fu_2157_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_n_reg_287 <= 8'd0;
    end else if (((exitcond_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        max_n_reg_287 <= n_0_max_n_fu_2149_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_0_rec_reg_276 <= 6'd0;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_0_rec_reg_276 <= p_rec_fu_927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vi_reg_265 <= 8'd0;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vi_reg_265 <= vi_1_fu_2095_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vj_reg_254 <= 8'd1;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vj_reg_254 <= vj_1_fu_2087_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_8_2_reg_164 <= vote_8_1_fu_569_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_8_2_reg_164 <= vote_9_122_fu_1991_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_25_reg_204 <= vote_4_1_fu_777_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_25_reg_204 <= vote_9_126_fu_2023_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_2_reg_154 <= vote_9_1_fu_497_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_2_reg_154 <= vote_9_5_fu_1983_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_34_reg_214 <= vote_3_1_fu_809_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_34_reg_214 <= vote_9_127_fu_2031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_42_reg_224 <= vote_2_1_fu_833_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_42_reg_224 <= vote_9_128_fu_2039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_49_reg_234 <= vote_1_1_fu_849_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_49_reg_234 <= vote_9_129_fu_2047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_55_reg_244 <= vote_0_1_fu_857_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_55_reg_244 <= vote_9_130_fu_2055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_65_reg_174 <= vote_7_1_fu_633_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_65_reg_174 <= vote_9_123_fu_1999_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_6_reg_184 <= vote_6_1_fu_689_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_6_reg_184 <= vote_9_124_fu_2007_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        vote_9_7_reg_194 <= vote_5_1_fu_737_p3;
    end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vote_9_7_reg_194 <= vote_9_125_fu_2015_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((pre_label_1_load_A == 1'b1)) begin
        pre_label_1_payload_A <= max_n_reg_287;
    end
end

always @ (posedge ap_clk) begin
    if ((pre_label_1_load_B == 1'b1)) begin
        pre_label_1_payload_B <= max_n_reg_287;
    end
end

always @ (posedge ap_clk) begin
    if ((res_0_load_A == 1'b1)) begin
        res_0_payload_A <= res_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_0_load_B == 1'b1)) begin
        res_0_payload_B <= res_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        vote_0_fu_90 <= vote_0_1_fu_857_p3;
        vote_1_fu_94 <= vote_1_1_fu_849_p3;
        vote_2_fu_98 <= vote_2_1_fu_833_p3;
        vote_3_fu_102 <= vote_3_1_fu_809_p3;
        vote_4_fu_106 <= vote_4_1_fu_777_p3;
        vote_5_fu_110 <= vote_5_1_fu_737_p3;
        vote_6_fu_114 <= vote_6_1_fu_689_p3;
        vote_7_fu_118 <= vote_7_1_fu_633_p3;
        vote_8_fu_122 <= vote_8_1_fu_569_p3;
        vote_9_fu_126 <= vote_9_1_fu_497_p3;
    end
end

always @ (*) begin
    if (((exitcond_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd1)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_49_reg_234;
        end else if ((1'b1 == ap_condition_1473)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_2_reg_154;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd8)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_8_2_reg_164;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd7)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_65_reg_174;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd6)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_6_reg_184;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd5)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_7_reg_194;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd4)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_25_reg_204;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd3)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_34_reg_214;
        end else if ((ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd2)) begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = vote_9_42_reg_224;
        end else begin
            ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = 'bx;
        end
    end else begin
        ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 = 'bx;
    end
end

always @ (*) begin
    if ((pre_label_1_sel == 1'b1)) begin
        pre_label_1_data_out = pre_label_1_payload_B;
    end else begin
        pre_label_1_data_out = pre_label_1_payload_A;
    end
end

always @ (*) begin
    if (((pre_label_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        pre_label_1_vld_in = 1'b1;
    end else begin
        pre_label_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        pre_label_TDATA_blk_n = pre_label_1_state[1'd1];
    end else begin
        pre_label_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        res_0_ack_out = 1'b1;
    end else begin
        res_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((res_0_sel == 1'b1)) begin
        res_0_data_out = res_0_payload_B;
    end else begin
        res_0_data_out = res_0_payload_A;
    end
end

always @ (*) begin
    if (((exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        res_TDATA_blk_n = res_0_state[1'd0];
    end else begin
        res_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_1_fu_865_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0)) & (exitcond2_fu_921_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((pre_label_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((pre_label_1_ack_in == 1'b1) & (pre_label_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state3 = ((exitcond2_fu_921_p2 == 1'd0) & (res_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_condition_1473 = (~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd1) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd8) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd7) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd6) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd5) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd4) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd3) & ~(ap_phi_mux_max_n_1_phi_fu_304_p4 == 4'd2));
end

assign ap_phi_mux_max_n_1_phi_fu_304_p4 = max_n_1_reg_300;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond2_fu_921_p2 = ((p_0_rec_reg_276 == 6'd45) ? 1'b1 : 1'b0);

assign exitcond_fu_2103_p2 = ((max_n_1_reg_300 == 4'd10) ? 1'b1 : 1'b0);

assign indvarinc_fu_373_p2 = (invdar_reg_143 + 4'd1);

assign max_n_1_cast_fu_2109_p1 = max_n_1_reg_300;

assign n_0_max_n_fu_2149_p3 = ((tmp_9_fu_2143_p2[0:0] === 1'b1) ? max_n_1_cast_fu_2109_p1 : max_n_reg_287);

assign n_fu_2157_p2 = (4'd1 + max_n_1_reg_300);

assign p_rec_fu_927_p2 = (p_0_rec_reg_276 + 6'd1);

assign pre_label_1_ack_in = pre_label_1_state[1'd1];

assign pre_label_1_ack_out = pre_label_TREADY;

assign pre_label_1_load_A = (pre_label_1_state_cmp_full & ~pre_label_1_sel_wr);

assign pre_label_1_load_B = (pre_label_1_state_cmp_full & pre_label_1_sel_wr);

assign pre_label_1_sel = pre_label_1_sel_rd;

assign pre_label_1_state_cmp_full = ((pre_label_1_state != 2'd1) ? 1'b1 : 1'b0);

assign pre_label_1_vld_out = pre_label_1_state[1'd0];

assign pre_label_TDATA = pre_label_1_data_out;

assign pre_label_TVALID = pre_label_1_state[1'd0];

assign res_0_ack_in = res_0_state[1'd1];

assign res_0_load_A = (res_0_state_cmp_full & ~res_0_sel_wr);

assign res_0_load_B = (res_0_state_cmp_full & res_0_sel_wr);

assign res_0_sel = res_0_sel_rd;

assign res_0_state_cmp_full = ((res_0_state != 2'd1) ? 1'b1 : 1'b0);

assign res_0_vld_in = res_TVALID;

assign res_0_vld_out = res_0_state[1'd0];

assign res_TREADY = res_0_state[1'd1];

assign sel_tmp10_fu_449_p2 = ((invdar_reg_143 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp11_fu_455_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp4_fu_441_p3);

assign sel_tmp12_fu_463_p2 = ((invdar_reg_143 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp13_fu_469_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp11_fu_455_p3);

assign sel_tmp14_fu_477_p2 = ((invdar_reg_143 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp15_fu_483_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp13_fu_469_p3);

assign sel_tmp16_fu_491_p2 = ((invdar_reg_143 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp17_fu_505_p3 = ((sel_tmp_fu_379_p2[0:0] === 1'b1) ? 8'd0 : vote_8_fu_122);

assign sel_tmp18_fu_513_p3 = ((sel_tmp6_fu_393_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp17_fu_505_p3);

assign sel_tmp19_fu_521_p3 = ((sel_tmp8_fu_407_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp18_fu_513_p3);

assign sel_tmp1_fu_421_p2 = ((invdar_reg_143 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp20_fu_529_p3 = ((sel_tmp1_fu_421_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp19_fu_521_p3);

assign sel_tmp21_fu_537_p3 = ((sel_tmp3_fu_435_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp20_fu_529_p3);

assign sel_tmp22_fu_545_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp21_fu_537_p3);

assign sel_tmp23_fu_553_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp22_fu_545_p3);

assign sel_tmp24_fu_561_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp23_fu_553_p3);

assign sel_tmp25_fu_577_p3 = ((sel_tmp6_fu_393_p2[0:0] === 1'b1) ? 8'd0 : vote_7_fu_118);

assign sel_tmp26_fu_585_p3 = ((sel_tmp8_fu_407_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp25_fu_577_p3);

assign sel_tmp27_fu_593_p3 = ((sel_tmp1_fu_421_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp26_fu_585_p3);

assign sel_tmp28_fu_601_p3 = ((sel_tmp3_fu_435_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp27_fu_593_p3);

assign sel_tmp29_fu_609_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp28_fu_601_p3);

assign sel_tmp2_fu_427_p3 = ((sel_tmp1_fu_421_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp9_fu_413_p3);

assign sel_tmp30_fu_617_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp29_fu_609_p3);

assign sel_tmp31_fu_625_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp30_fu_617_p3);

assign sel_tmp32_fu_641_p3 = ((sel_tmp8_fu_407_p2[0:0] === 1'b1) ? 8'd0 : vote_6_fu_114);

assign sel_tmp33_fu_649_p3 = ((sel_tmp1_fu_421_p2[0:0] === 1'b1) ? vote_6_fu_114 : sel_tmp32_fu_641_p3);

assign sel_tmp34_fu_657_p3 = ((sel_tmp3_fu_435_p2[0:0] === 1'b1) ? vote_6_fu_114 : sel_tmp33_fu_649_p3);

assign sel_tmp35_fu_665_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? vote_6_fu_114 : sel_tmp34_fu_657_p3);

assign sel_tmp36_fu_673_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_6_fu_114 : sel_tmp35_fu_665_p3);

assign sel_tmp37_fu_681_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_6_fu_114 : sel_tmp36_fu_673_p3);

assign sel_tmp38_fu_697_p3 = ((sel_tmp1_fu_421_p2[0:0] === 1'b1) ? 8'd0 : vote_5_fu_110);

assign sel_tmp39_fu_705_p3 = ((sel_tmp3_fu_435_p2[0:0] === 1'b1) ? vote_5_fu_110 : sel_tmp38_fu_697_p3);

assign sel_tmp3_fu_435_p2 = ((invdar_reg_143 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp40_fu_713_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? vote_5_fu_110 : sel_tmp39_fu_705_p3);

assign sel_tmp41_fu_721_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_5_fu_110 : sel_tmp40_fu_713_p3);

assign sel_tmp42_fu_729_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_5_fu_110 : sel_tmp41_fu_721_p3);

assign sel_tmp43_fu_745_p3 = ((sel_tmp3_fu_435_p2[0:0] === 1'b1) ? 8'd0 : vote_4_fu_106);

assign sel_tmp44_fu_753_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? vote_4_fu_106 : sel_tmp43_fu_745_p3);

assign sel_tmp45_fu_761_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_4_fu_106 : sel_tmp44_fu_753_p3);

assign sel_tmp46_fu_769_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_4_fu_106 : sel_tmp45_fu_761_p3);

assign sel_tmp47_fu_785_p3 = ((sel_tmp10_fu_449_p2[0:0] === 1'b1) ? 8'd0 : vote_3_fu_102);

assign sel_tmp48_fu_793_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? vote_3_fu_102 : sel_tmp47_fu_785_p3);

assign sel_tmp49_fu_801_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_3_fu_102 : sel_tmp48_fu_793_p3);

assign sel_tmp4_fu_441_p3 = ((sel_tmp3_fu_435_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp2_fu_427_p3);

assign sel_tmp50_fu_817_p3 = ((sel_tmp12_fu_463_p2[0:0] === 1'b1) ? 8'd0 : vote_2_fu_98);

assign sel_tmp51_fu_825_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? vote_2_fu_98 : sel_tmp50_fu_817_p3);

assign sel_tmp52_fu_841_p3 = ((sel_tmp14_fu_477_p2[0:0] === 1'b1) ? 8'd0 : vote_1_fu_94);

assign sel_tmp53_fu_1011_p2 = ((tmp_7_fu_939_p1 == 4'd8) ? 1'b1 : 1'b0);

assign sel_tmp54_fu_1025_p2 = ((tmp_7_fu_939_p1 == 4'd7) ? 1'b1 : 1'b0);

assign sel_tmp55_fu_1039_p2 = ((tmp_7_fu_939_p1 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp56_fu_1053_p2 = ((tmp_7_fu_939_p1 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp57_fu_1067_p2 = ((tmp_7_fu_939_p1 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp58_fu_1081_p2 = ((tmp_7_fu_939_p1 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp59_fu_1095_p2 = ((tmp_7_fu_939_p1 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_385_p3 = ((sel_tmp_fu_379_p2[0:0] === 1'b1) ? vote_9_fu_126 : 8'd0);

assign sel_tmp60_fu_1109_p2 = ((tmp_7_fu_939_p1 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp61_fu_1123_p2 = ((tmp_7_fu_939_p1 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp62_fu_1497_p2 = ((tmp_8_fu_975_p1 == 4'd8) ? 1'b1 : 1'b0);

assign sel_tmp63_fu_1511_p2 = ((tmp_8_fu_975_p1 == 4'd7) ? 1'b1 : 1'b0);

assign sel_tmp64_fu_1525_p2 = ((tmp_8_fu_975_p1 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp65_fu_1539_p2 = ((tmp_8_fu_975_p1 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp66_fu_1553_p2 = ((tmp_8_fu_975_p1 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp67_fu_1567_p2 = ((tmp_8_fu_975_p1 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp68_fu_1581_p2 = ((tmp_8_fu_975_p1 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp69_fu_1595_p2 = ((tmp_8_fu_975_p1 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_393_p2 = ((invdar_reg_143 == 4'd7) ? 1'b1 : 1'b0);

assign sel_tmp70_fu_1609_p2 = ((tmp_8_fu_975_p1 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_399_p3 = ((sel_tmp6_fu_393_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp5_fu_385_p3);

assign sel_tmp8_fu_407_p2 = ((invdar_reg_143 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_413_p3 = ((sel_tmp8_fu_407_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp7_fu_399_p3);

assign sel_tmp_fu_379_p2 = ((invdar_reg_143 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_1_fu_865_p2 = ((invdar_reg_143 == 4'd9) ? 1'b1 : 1'b0);

assign tmp_2_fu_933_p2 = (($signed(res_0_data_out) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign tmp_6_fu_2117_p11 = max_n_reg_287[3:0];

assign tmp_7_fu_939_p1 = vi_reg_265[3:0];

assign tmp_8_fu_975_p1 = vj_reg_254[3:0];

assign tmp_9_fu_2143_p2 = ((ap_phi_mux_vote_load_2_phi_phi_fu_314_p18 > tmp_6_fu_2117_p12) ? 1'b1 : 1'b0);

assign tmp_s_fu_2069_p2 = ((vj_2_fu_2063_p2 == 8'd10) ? 1'b1 : 1'b0);

assign vi_1_fu_2095_p3 = ((tmp_s_fu_2069_p2[0:0] === 1'b1) ? vi_2_fu_2075_p2 : vi_reg_265);

assign vi_2_fu_2075_p2 = (8'd1 + vi_reg_265);

assign vj_1_fu_2087_p3 = ((tmp_s_fu_2069_p2[0:0] === 1'b1) ? vj_3_fu_2081_p2 : vj_2_fu_2063_p2);

assign vj_2_fu_2063_p2 = (8'd1 + vj_reg_254);

assign vj_3_fu_2081_p2 = (8'd2 + vi_reg_265);

assign vote_0_1_fu_857_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? 8'd0 : vote_0_fu_90);

assign vote_1_1_fu_849_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_1_fu_94 : sel_tmp52_fu_841_p3);

assign vote_2_1_fu_833_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_2_fu_98 : sel_tmp51_fu_825_p3);

assign vote_3_1_fu_809_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_3_fu_102 : sel_tmp49_fu_801_p3);

assign vote_4_1_fu_777_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_4_fu_106 : sel_tmp46_fu_769_p3);

assign vote_5_1_fu_737_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_5_fu_110 : sel_tmp42_fu_729_p3);

assign vote_6_1_fu_689_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_6_fu_114 : sel_tmp37_fu_681_p3);

assign vote_7_1_fu_633_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_7_fu_118 : sel_tmp31_fu_625_p3);

assign vote_8_1_fu_569_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_8_fu_122 : sel_tmp24_fu_561_p3);

assign vote_9_100_fu_1807_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_99_fu_1799_p3);

assign vote_9_101_fu_1815_p3 = ((sel_tmp65_fu_1539_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_7_reg_194);

assign vote_9_102_fu_1823_p3 = ((sel_tmp66_fu_1553_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_101_fu_1815_p3);

assign vote_9_103_fu_1831_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_102_fu_1823_p3);

assign vote_9_104_fu_1839_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_103_fu_1831_p3);

assign vote_9_105_fu_1847_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_104_fu_1839_p3);

assign vote_9_106_fu_1855_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_105_fu_1847_p3);

assign vote_9_107_fu_1863_p3 = ((sel_tmp66_fu_1553_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_25_reg_204);

assign vote_9_108_fu_1871_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_107_fu_1863_p3);

assign vote_9_109_fu_1879_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_108_fu_1871_p3);

assign vote_9_10_fu_1045_p3 = ((sel_tmp55_fu_1039_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_9_fu_1031_p3);

assign vote_9_110_fu_1887_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_109_fu_1879_p3);

assign vote_9_111_fu_1895_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_110_fu_1887_p3);

assign vote_9_112_fu_1903_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_34_reg_214);

assign vote_9_113_fu_1911_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_34_reg_214 : vote_9_112_fu_1903_p3);

assign vote_9_114_fu_1919_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_34_reg_214 : vote_9_113_fu_1911_p3);

assign vote_9_115_fu_1927_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_34_reg_214 : vote_9_114_fu_1919_p3);

assign vote_9_116_fu_1935_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_42_reg_224);

assign vote_9_117_fu_1943_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_42_reg_224 : vote_9_116_fu_1935_p3);

assign vote_9_118_fu_1951_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_42_reg_224 : vote_9_117_fu_1943_p3);

assign vote_9_119_fu_1959_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_49_reg_234);

assign vote_9_11_fu_1059_p3 = ((sel_tmp56_fu_1053_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_10_fu_1045_p3);

assign vote_9_120_fu_1967_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_49_reg_234 : vote_9_119_fu_1959_p3);

assign vote_9_121_fu_1975_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_55_reg_244);

assign vote_9_122_fu_1991_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_24_fu_1201_p3 : vote_9_85_fu_1687_p3);

assign vote_9_123_fu_1999_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_33_fu_1265_p3 : vote_9_93_fu_1751_p3);

assign vote_9_124_fu_2007_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_41_fu_1321_p3 : vote_9_100_fu_1807_p3);

assign vote_9_125_fu_2015_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_48_fu_1369_p3 : vote_9_106_fu_1855_p3);

assign vote_9_126_fu_2023_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_54_fu_1409_p3 : vote_9_111_fu_1895_p3);

assign vote_9_127_fu_2031_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_59_fu_1441_p3 : vote_9_115_fu_1927_p3);

assign vote_9_128_fu_2039_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_63_fu_1465_p3 : vote_9_118_fu_1951_p3);

assign vote_9_129_fu_2047_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_67_fu_1481_p3 : vote_9_120_fu_1967_p3);

assign vote_9_12_fu_1073_p3 = ((sel_tmp57_fu_1067_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_11_fu_1059_p3);

assign vote_9_130_fu_2055_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_68_fu_1489_p3 : vote_9_121_fu_1975_p3);

assign vote_9_131_fu_969_p2 = (8'd1 + tmp_4_fu_943_p12);

assign vote_9_132_fu_1005_p2 = (8'd1 + tmp_5_fu_979_p12);

assign vote_9_13_fu_1087_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_12_fu_1073_p3);

assign vote_9_14_fu_1101_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_13_fu_1087_p3);

assign vote_9_15_fu_1115_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_14_fu_1101_p3);

assign vote_9_16_fu_1137_p3 = ((sel_tmp53_fu_1011_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_8_2_reg_164);

assign vote_9_17_fu_1145_p3 = ((sel_tmp54_fu_1025_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_16_fu_1137_p3);

assign vote_9_18_fu_1153_p3 = ((sel_tmp55_fu_1039_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_17_fu_1145_p3);

assign vote_9_19_fu_1161_p3 = ((sel_tmp56_fu_1053_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_18_fu_1153_p3);

assign vote_9_1_fu_497_p3 = ((sel_tmp16_fu_491_p2[0:0] === 1'b1) ? vote_9_fu_126 : sel_tmp15_fu_483_p3);

assign vote_9_20_fu_1169_p3 = ((sel_tmp57_fu_1067_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_19_fu_1161_p3);

assign vote_9_21_fu_1177_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_20_fu_1169_p3);

assign vote_9_22_fu_1185_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_21_fu_1177_p3);

assign vote_9_23_fu_1193_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_22_fu_1185_p3);

assign vote_9_24_fu_1201_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_23_fu_1193_p3);

assign vote_9_26_fu_1209_p3 = ((sel_tmp54_fu_1025_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_65_reg_174);

assign vote_9_27_fu_1217_p3 = ((sel_tmp55_fu_1039_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_26_fu_1209_p3);

assign vote_9_28_fu_1225_p3 = ((sel_tmp56_fu_1053_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_27_fu_1217_p3);

assign vote_9_29_fu_1233_p3 = ((sel_tmp57_fu_1067_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_28_fu_1225_p3);

assign vote_9_30_fu_1241_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_29_fu_1233_p3);

assign vote_9_31_fu_1249_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_30_fu_1241_p3);

assign vote_9_32_fu_1257_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_31_fu_1249_p3);

assign vote_9_33_fu_1265_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_32_fu_1257_p3);

assign vote_9_35_fu_1273_p3 = ((sel_tmp55_fu_1039_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_6_reg_184);

assign vote_9_36_fu_1281_p3 = ((sel_tmp56_fu_1053_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_35_fu_1273_p3);

assign vote_9_37_fu_1289_p3 = ((sel_tmp57_fu_1067_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_36_fu_1281_p3);

assign vote_9_38_fu_1297_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_37_fu_1289_p3);

assign vote_9_39_fu_1305_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_38_fu_1297_p3);

assign vote_9_3_fu_1129_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_15_fu_1115_p3);

assign vote_9_40_fu_1313_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_39_fu_1305_p3);

assign vote_9_41_fu_1321_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_40_fu_1313_p3);

assign vote_9_43_fu_1329_p3 = ((sel_tmp56_fu_1053_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_7_reg_194);

assign vote_9_44_fu_1337_p3 = ((sel_tmp57_fu_1067_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_43_fu_1329_p3);

assign vote_9_45_fu_1345_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_44_fu_1337_p3);

assign vote_9_46_fu_1353_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_45_fu_1345_p3);

assign vote_9_47_fu_1361_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_46_fu_1353_p3);

assign vote_9_48_fu_1369_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_7_reg_194 : vote_9_47_fu_1361_p3);

assign vote_9_4_fu_1615_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_76_fu_1601_p3);

assign vote_9_50_fu_1377_p3 = ((sel_tmp57_fu_1067_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_25_reg_204);

assign vote_9_51_fu_1385_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_50_fu_1377_p3);

assign vote_9_52_fu_1393_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_51_fu_1385_p3);

assign vote_9_53_fu_1401_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_52_fu_1393_p3);

assign vote_9_54_fu_1409_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_25_reg_204 : vote_9_53_fu_1401_p3);

assign vote_9_56_fu_1417_p3 = ((sel_tmp58_fu_1081_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_34_reg_214);

assign vote_9_57_fu_1425_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_34_reg_214 : vote_9_56_fu_1417_p3);

assign vote_9_58_fu_1433_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_34_reg_214 : vote_9_57_fu_1425_p3);

assign vote_9_59_fu_1441_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_34_reg_214 : vote_9_58_fu_1433_p3);

assign vote_9_5_fu_1983_p3 = ((tmp_2_fu_933_p2[0:0] === 1'b1) ? vote_9_3_fu_1129_p3 : vote_9_4_fu_1615_p3);

assign vote_9_61_fu_1449_p3 = ((sel_tmp59_fu_1095_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_42_reg_224);

assign vote_9_62_fu_1457_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_42_reg_224 : vote_9_61_fu_1449_p3);

assign vote_9_63_fu_1465_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_42_reg_224 : vote_9_62_fu_1457_p3);

assign vote_9_66_fu_1473_p3 = ((sel_tmp60_fu_1109_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_49_reg_234);

assign vote_9_67_fu_1481_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_49_reg_234 : vote_9_66_fu_1473_p3);

assign vote_9_68_fu_1489_p3 = ((sel_tmp61_fu_1123_p2[0:0] === 1'b1) ? vote_9_131_fu_969_p2 : vote_9_55_reg_244);

assign vote_9_69_fu_1503_p3 = ((sel_tmp62_fu_1497_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_132_fu_1005_p2);

assign vote_9_70_fu_1517_p3 = ((sel_tmp63_fu_1511_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_69_fu_1503_p3);

assign vote_9_71_fu_1531_p3 = ((sel_tmp64_fu_1525_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_70_fu_1517_p3);

assign vote_9_72_fu_1545_p3 = ((sel_tmp65_fu_1539_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_71_fu_1531_p3);

assign vote_9_73_fu_1559_p3 = ((sel_tmp66_fu_1553_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_72_fu_1545_p3);

assign vote_9_74_fu_1573_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_73_fu_1559_p3);

assign vote_9_75_fu_1587_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_74_fu_1573_p3);

assign vote_9_76_fu_1601_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_75_fu_1587_p3);

assign vote_9_77_fu_1623_p3 = ((sel_tmp62_fu_1497_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_8_2_reg_164);

assign vote_9_78_fu_1631_p3 = ((sel_tmp63_fu_1511_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_77_fu_1623_p3);

assign vote_9_79_fu_1639_p3 = ((sel_tmp64_fu_1525_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_78_fu_1631_p3);

assign vote_9_80_fu_1647_p3 = ((sel_tmp65_fu_1539_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_79_fu_1639_p3);

assign vote_9_81_fu_1655_p3 = ((sel_tmp66_fu_1553_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_80_fu_1647_p3);

assign vote_9_82_fu_1663_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_81_fu_1655_p3);

assign vote_9_83_fu_1671_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_82_fu_1663_p3);

assign vote_9_84_fu_1679_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_83_fu_1671_p3);

assign vote_9_85_fu_1687_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_8_2_reg_164 : vote_9_84_fu_1679_p3);

assign vote_9_86_fu_1695_p3 = ((sel_tmp63_fu_1511_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_65_reg_174);

assign vote_9_87_fu_1703_p3 = ((sel_tmp64_fu_1525_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_86_fu_1695_p3);

assign vote_9_88_fu_1711_p3 = ((sel_tmp65_fu_1539_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_87_fu_1703_p3);

assign vote_9_89_fu_1719_p3 = ((sel_tmp66_fu_1553_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_88_fu_1711_p3);

assign vote_9_8_fu_1017_p3 = ((sel_tmp53_fu_1011_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_131_fu_969_p2);

assign vote_9_90_fu_1727_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_89_fu_1719_p3);

assign vote_9_91_fu_1735_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_90_fu_1727_p3);

assign vote_9_92_fu_1743_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_91_fu_1735_p3);

assign vote_9_93_fu_1751_p3 = ((sel_tmp70_fu_1609_p2[0:0] === 1'b1) ? vote_9_65_reg_174 : vote_9_92_fu_1743_p3);

assign vote_9_94_fu_1759_p3 = ((sel_tmp64_fu_1525_p2[0:0] === 1'b1) ? vote_9_132_fu_1005_p2 : vote_9_6_reg_184);

assign vote_9_95_fu_1767_p3 = ((sel_tmp65_fu_1539_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_94_fu_1759_p3);

assign vote_9_96_fu_1775_p3 = ((sel_tmp66_fu_1553_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_95_fu_1767_p3);

assign vote_9_97_fu_1783_p3 = ((sel_tmp67_fu_1567_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_96_fu_1775_p3);

assign vote_9_98_fu_1791_p3 = ((sel_tmp68_fu_1581_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_97_fu_1783_p3);

assign vote_9_99_fu_1799_p3 = ((sel_tmp69_fu_1595_p2[0:0] === 1'b1) ? vote_9_6_reg_184 : vote_9_98_fu_1791_p3);

assign vote_9_9_fu_1031_p3 = ((sel_tmp54_fu_1025_p2[0:0] === 1'b1) ? vote_9_2_reg_154 : vote_9_8_fu_1017_p3);

endmodule //SVC_Vote
