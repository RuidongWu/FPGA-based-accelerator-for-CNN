// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer4_SVM,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.023313,HLS_SYN_LAT=245,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=2529,HLS_SYN_LUT=1582,HLS_VERSION=2018_3}" *)

module Layer4_SVM (
        ap_clk,
        ap_rst_n,
        a_Data_TDATA,
        a_Data_TVALID,
        a_Data_TREADY,
        w_Data_TDATA,
        w_Data_TVALID,
        w_Data_TREADY,
        Bias_Data,
        res_TDATA,
        res_TVALID,
        res_TREADY
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_pp0_stage0 = 7'd8;
parameter    ap_ST_fsm_state6 = 7'd16;
parameter    ap_ST_fsm_pp1_stage0 = 7'd32;
parameter    ap_ST_fsm_state10 = 7'd64;

input   ap_clk;
input   ap_rst_n;
input  [127:0] a_Data_TDATA;
input   a_Data_TVALID;
output   a_Data_TREADY;
input  [255:0] w_Data_TDATA;
input   w_Data_TVALID;
output   w_Data_TREADY;
input  [719:0] Bias_Data;
output  [7:0] res_TDATA;
output   res_TVALID;
input   res_TREADY;

 reg    ap_rst_n_inv;
reg   [127:0] a_Data_0_data_out;
wire    a_Data_0_vld_in;
wire    a_Data_0_vld_out;
wire    a_Data_0_ack_in;
reg    a_Data_0_ack_out;
reg   [127:0] a_Data_0_payload_A;
reg   [127:0] a_Data_0_payload_B;
reg    a_Data_0_sel_rd;
reg    a_Data_0_sel_wr;
wire    a_Data_0_sel;
wire    a_Data_0_load_A;
wire    a_Data_0_load_B;
reg   [1:0] a_Data_0_state;
wire    a_Data_0_state_cmp_full;
reg   [255:0] w_Data_0_data_out;
wire    w_Data_0_vld_in;
wire    w_Data_0_vld_out;
wire    w_Data_0_ack_in;
reg    w_Data_0_ack_out;
reg   [255:0] w_Data_0_payload_A;
reg   [255:0] w_Data_0_payload_B;
reg    w_Data_0_sel_rd;
reg    w_Data_0_sel_wr;
wire    w_Data_0_sel;
wire    w_Data_0_load_A;
wire    w_Data_0_load_B;
reg   [1:0] w_Data_0_state;
wire    w_Data_0_state_cmp_full;
reg   [7:0] res_1_data_out;
reg    res_1_vld_in;
wire    res_1_vld_out;
wire    res_1_ack_in;
wire    res_1_ack_out;
reg   [7:0] res_1_payload_A;
reg   [7:0] res_1_payload_B;
reg    res_1_sel_rd;
reg    res_1_sel_wr;
wire    res_1_sel;
wire    res_1_load_A;
wire    res_1_load_B;
reg   [1:0] res_1_state;
wire    res_1_state_cmp_full;
reg    a_Data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond9_fu_2161_p2;
wire    ap_CS_fsm_state3;
reg    w_Data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond5_fu_2173_p2;
reg    res_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond3_reg_3213;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] exitcond3_reg_3213_pp1_iter1_reg;
wire   [31:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_ap_return;
reg   [31:0] reg_629;
reg    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] j3_reg_640;
reg   [5:0] i4_reg_652;
reg    ap_block_state2;
wire   [2:0] i_1_fu_2167_p2;
reg   [2:0] i_1_reg_3119;
reg   [13:0] tmp_2_reg_3124;
reg   [13:0] tmp_3_reg_3129;
reg   [13:0] tmp_4_reg_3134;
reg   [13:0] tmp_5_reg_3139;
reg   [13:0] tmp_6_reg_3144;
reg   [13:0] tmp_7_reg_3149;
reg   [13:0] tmp_8_reg_3154;
reg   [13:0] tmp_9_reg_3159;
reg   [13:0] tmp_10_reg_3164;
reg   [13:0] tmp_11_reg_3169;
reg   [13:0] tmp_12_reg_3174;
reg   [13:0] tmp_13_reg_3179;
reg   [13:0] tmp_56_reg_3184;
reg   [13:0] tmp_58_reg_3189;
reg   [13:0] tmp_60_reg_3194;
reg   [13:0] tmp_62_reg_3199;
reg   [0:0] exitcond5_reg_3204;
wire   [5:0] j_fu_2179_p2;
reg   [5:0] j_reg_3208;
wire   [0:0] exitcond3_fu_2682_p2;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
reg    ap_block_state8_io;
wire    ap_block_state9_pp1_stage0_iter2;
reg    ap_block_state9_io;
reg    ap_block_pp1_stage0_11001;
wire   [5:0] i_fu_2688_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] tmp_s_fu_2790_p2;
reg   [0:0] tmp_s_reg_3222;
wire   [7:0] tmp_1_fu_2796_p1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
wire    tmp_15_Layer4_SVM_mac_dsp_fu_663_ap_ready;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read16;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read17;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read18;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read19;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read20;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read21;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read22;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read23;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read24;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read25;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read26;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read27;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read28;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read29;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read30;
wire   [15:0] tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read31;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state6;
reg   [5:0] ap_phi_mux_j3_phi_fu_644_p4;
reg   [31:0] b_44_1_fu_424;
wire  signed [31:0] b_0_1_cast_fu_964_p1;
wire   [31:0] b_0_2_fu_2451_p2;
reg   [31:0] b_44_2_fu_428;
wire  signed [31:0] b_1_1_cast_fu_986_p1;
reg   [31:0] b_44_3_fu_432;
wire  signed [31:0] b_2_1_cast_fu_1008_p1;
reg   [31:0] b_44_4_fu_436;
wire  signed [31:0] b_3_1_cast_fu_1030_p1;
reg   [31:0] b_44_5_fu_440;
wire  signed [31:0] b_4_1_cast_fu_1052_p1;
reg   [31:0] b_44_6_fu_444;
wire  signed [31:0] b_5_1_cast_fu_1074_p1;
reg   [31:0] b_44_7_fu_448;
wire  signed [31:0] b_6_1_cast_fu_1096_p1;
reg   [31:0] b_44_8_fu_452;
wire  signed [31:0] b_7_1_cast_fu_1118_p1;
reg   [31:0] b_44_9_fu_456;
wire  signed [31:0] b_8_1_cast_fu_1140_p1;
reg   [31:0] b_44_10_fu_460;
wire  signed [31:0] b_9_1_cast_fu_1162_p1;
reg   [31:0] b_44_11_fu_464;
wire  signed [31:0] b_10_1_cast_fu_1184_p1;
reg   [31:0] b_44_12_fu_468;
wire  signed [31:0] b_11_1_cast_fu_1206_p1;
reg   [31:0] b_44_13_fu_472;
wire  signed [31:0] b_12_1_cast_fu_1228_p1;
reg   [31:0] b_44_14_fu_476;
wire  signed [31:0] b_13_1_cast_fu_1250_p1;
reg   [31:0] b_44_15_fu_480;
wire  signed [31:0] b_14_1_cast_fu_1272_p1;
reg   [31:0] b_44_16_fu_484;
wire  signed [31:0] b_15_1_cast_fu_1294_p1;
reg   [31:0] b_44_17_fu_488;
wire  signed [31:0] b_16_1_cast_fu_1316_p1;
reg   [31:0] b_44_18_fu_492;
wire  signed [31:0] b_17_1_cast_fu_1338_p1;
reg   [31:0] b_44_19_fu_496;
wire  signed [31:0] b_18_1_cast_fu_1360_p1;
reg   [31:0] b_44_20_fu_500;
wire  signed [31:0] b_19_1_cast_fu_1382_p1;
reg   [31:0] b_44_21_fu_504;
wire  signed [31:0] b_20_1_cast_fu_1404_p1;
reg   [31:0] b_44_22_fu_508;
wire  signed [31:0] b_21_1_cast_fu_1426_p1;
reg   [31:0] b_44_23_fu_512;
wire  signed [31:0] b_22_1_cast_fu_1448_p1;
reg   [31:0] b_44_24_fu_516;
wire  signed [31:0] b_23_1_cast_fu_1470_p1;
reg   [31:0] b_44_25_fu_520;
wire  signed [31:0] b_24_1_cast_fu_1492_p1;
reg   [31:0] b_44_26_fu_524;
wire  signed [31:0] b_25_1_cast_fu_1514_p1;
reg   [31:0] b_44_27_fu_528;
wire  signed [31:0] b_26_1_cast_fu_1536_p1;
reg   [31:0] b_44_28_fu_532;
wire  signed [31:0] b_27_1_cast_fu_1558_p1;
reg   [31:0] b_44_29_fu_536;
wire  signed [31:0] b_28_1_cast_fu_1580_p1;
reg   [31:0] b_44_30_fu_540;
wire  signed [31:0] b_29_1_cast_fu_1602_p1;
reg   [31:0] b_44_31_fu_544;
wire  signed [31:0] b_30_1_cast_fu_1624_p1;
reg   [31:0] b_44_32_fu_548;
wire  signed [31:0] b_31_1_cast_fu_1646_p1;
reg   [31:0] b_44_33_fu_552;
wire  signed [31:0] b_32_1_cast_fu_1668_p1;
reg   [31:0] b_44_34_fu_556;
wire  signed [31:0] b_33_1_cast_fu_1690_p1;
reg   [31:0] b_44_35_fu_560;
wire  signed [31:0] b_34_1_cast_fu_1712_p1;
reg   [31:0] b_44_36_fu_564;
wire  signed [31:0] b_35_1_cast_fu_1734_p1;
reg   [31:0] b_44_37_fu_568;
wire  signed [31:0] b_36_1_cast_fu_1756_p1;
reg   [31:0] b_44_38_fu_572;
wire  signed [31:0] b_37_1_cast_fu_1778_p1;
reg   [31:0] b_44_39_fu_576;
wire  signed [31:0] b_38_1_cast_fu_1800_p1;
reg   [31:0] b_44_40_fu_580;
wire  signed [31:0] b_39_1_cast_fu_1822_p1;
reg   [31:0] b_44_41_fu_584;
wire  signed [31:0] b_40_1_cast_fu_1844_p1;
reg   [31:0] b_44_42_fu_588;
wire  signed [31:0] b_41_1_cast_fu_1866_p1;
reg   [31:0] b_44_43_fu_592;
wire  signed [31:0] b_42_1_cast_fu_1888_p1;
reg   [31:0] b_44_44_fu_596;
wire  signed [31:0] b_43_1_cast_fu_1910_p1;
reg   [31:0] b_44_45_fu_600;
wire  signed [31:0] b_44_1_cast_fu_1932_p1;
wire    ap_block_pp1_stage0_01001;
wire   [15:0] tmp_fu_952_p1;
wire   [23:0] b_0_fu_956_p3;
wire   [15:0] tmp_14_fu_968_p4;
wire   [23:0] b_1_fu_978_p3;
wire   [15:0] tmp_16_fu_990_p4;
wire   [23:0] b_2_fu_1000_p3;
wire   [15:0] tmp_17_fu_1012_p4;
wire   [23:0] b_3_fu_1022_p3;
wire   [15:0] tmp_18_fu_1034_p4;
wire   [23:0] b_4_fu_1044_p3;
wire   [15:0] tmp_19_fu_1056_p4;
wire   [23:0] b_5_fu_1066_p3;
wire   [15:0] tmp_20_fu_1078_p4;
wire   [23:0] b_6_fu_1088_p3;
wire   [15:0] tmp_21_fu_1100_p4;
wire   [23:0] b_7_fu_1110_p3;
wire   [15:0] tmp_22_fu_1122_p4;
wire   [23:0] b_8_fu_1132_p3;
wire   [15:0] tmp_23_fu_1144_p4;
wire   [23:0] b_9_fu_1154_p3;
wire   [15:0] tmp_24_fu_1166_p4;
wire   [23:0] b_10_fu_1176_p3;
wire   [15:0] tmp_25_fu_1188_p4;
wire   [23:0] b_11_fu_1198_p3;
wire   [15:0] tmp_26_fu_1210_p4;
wire   [23:0] b_12_fu_1220_p3;
wire   [15:0] tmp_27_fu_1232_p4;
wire   [23:0] b_13_fu_1242_p3;
wire   [15:0] tmp_28_fu_1254_p4;
wire   [23:0] b_14_fu_1264_p3;
wire   [15:0] tmp_29_fu_1276_p4;
wire   [23:0] b_15_fu_1286_p3;
wire   [15:0] tmp_30_fu_1298_p4;
wire   [23:0] b_16_fu_1308_p3;
wire   [15:0] tmp_31_fu_1320_p4;
wire   [23:0] b_17_fu_1330_p3;
wire   [15:0] tmp_32_fu_1342_p4;
wire   [23:0] b_18_fu_1352_p3;
wire   [15:0] tmp_33_fu_1364_p4;
wire   [23:0] b_19_fu_1374_p3;
wire   [15:0] tmp_34_fu_1386_p4;
wire   [23:0] b_20_fu_1396_p3;
wire   [15:0] tmp_35_fu_1408_p4;
wire   [23:0] b_21_fu_1418_p3;
wire   [15:0] tmp_36_fu_1430_p4;
wire   [23:0] b_22_fu_1440_p3;
wire   [15:0] tmp_37_fu_1452_p4;
wire   [23:0] b_23_fu_1462_p3;
wire   [15:0] tmp_38_fu_1474_p4;
wire   [23:0] b_24_fu_1484_p3;
wire   [15:0] tmp_39_fu_1496_p4;
wire   [23:0] b_25_fu_1506_p3;
wire   [15:0] tmp_40_fu_1518_p4;
wire   [23:0] b_26_fu_1528_p3;
wire   [15:0] tmp_41_fu_1540_p4;
wire   [23:0] b_27_fu_1550_p3;
wire   [15:0] tmp_42_fu_1562_p4;
wire   [23:0] b_28_fu_1572_p3;
wire   [15:0] tmp_43_fu_1584_p4;
wire   [23:0] b_29_fu_1594_p3;
wire   [15:0] tmp_44_fu_1606_p4;
wire   [23:0] b_30_fu_1616_p3;
wire   [15:0] tmp_45_fu_1628_p4;
wire   [23:0] b_31_fu_1638_p3;
wire   [15:0] tmp_46_fu_1650_p4;
wire   [23:0] b_32_fu_1660_p3;
wire   [15:0] tmp_47_fu_1672_p4;
wire   [23:0] b_33_fu_1682_p3;
wire   [15:0] tmp_48_fu_1694_p4;
wire   [23:0] b_34_fu_1704_p3;
wire   [15:0] tmp_49_fu_1716_p4;
wire   [23:0] b_35_fu_1726_p3;
wire   [15:0] tmp_50_fu_1738_p4;
wire   [23:0] b_36_fu_1748_p3;
wire   [15:0] tmp_51_fu_1760_p4;
wire   [23:0] b_37_fu_1770_p3;
wire   [15:0] tmp_52_fu_1782_p4;
wire   [23:0] b_38_fu_1792_p3;
wire   [15:0] tmp_53_fu_1804_p4;
wire   [23:0] b_39_fu_1814_p3;
wire   [15:0] tmp_54_fu_1826_p4;
wire   [23:0] b_40_fu_1836_p3;
wire   [15:0] tmp_55_fu_1848_p4;
wire   [23:0] b_41_fu_1858_p3;
wire   [15:0] tmp_57_fu_1870_p4;
wire   [23:0] b_42_fu_1880_p3;
wire   [15:0] tmp_59_fu_1892_p4;
wire   [23:0] b_43_fu_1902_p3;
wire   [15:0] tmp_61_fu_1914_p4;
wire   [23:0] b_44_fu_1924_p3;
wire   [2:0] exitcond9_fu_2161_p0;
wire   [2:0] i_1_fu_2167_p0;
wire   [31:0] tmp_67_fu_2355_p47;
wire   [31:0] tmp_64_fu_2694_p47;
reg   [6:0] ap_NS_fsm;
wire    ap_CS_fsm_state10;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 a_Data_0_sel_rd = 1'b0;
#0 a_Data_0_sel_wr = 1'b0;
#0 a_Data_0_state = 2'd0;
#0 w_Data_0_sel_rd = 1'b0;
#0 w_Data_0_sel_wr = 1'b0;
#0 w_Data_0_state = 2'd0;
#0 res_1_sel_rd = 1'b0;
#0 res_1_sel_wr = 1'b0;
#0 res_1_state = 2'd0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Layer4_SVM_mac_dsp tmp_15_Layer4_SVM_mac_dsp_fu_663(
    .ap_ready(tmp_15_Layer4_SVM_mac_dsp_fu_663_ap_ready),
    .p_read(tmp_2_reg_3124),
    .p_read1(tmp_3_reg_3129),
    .p_read2(tmp_4_reg_3134),
    .p_read3(tmp_5_reg_3139),
    .p_read4(tmp_6_reg_3144),
    .p_read5(tmp_7_reg_3149),
    .p_read6(tmp_8_reg_3154),
    .p_read7(tmp_9_reg_3159),
    .p_read8(tmp_10_reg_3164),
    .p_read9(tmp_11_reg_3169),
    .p_read10(tmp_12_reg_3174),
    .p_read11(tmp_13_reg_3179),
    .p_read12(tmp_56_reg_3184),
    .p_read13(tmp_58_reg_3189),
    .p_read14(tmp_60_reg_3194),
    .p_read15(tmp_62_reg_3199),
    .p_read16(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read16),
    .p_read17(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read17),
    .p_read18(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read18),
    .p_read19(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read19),
    .p_read20(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read20),
    .p_read21(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read21),
    .p_read22(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read22),
    .p_read23(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read23),
    .p_read24(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read24),
    .p_read25(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read25),
    .p_read26(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read26),
    .p_read27(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read27),
    .p_read28(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read28),
    .p_read29(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read29),
    .p_read30(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read30),
    .p_read31(tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read31),
    .ap_return(tmp_15_Layer4_SVM_mac_dsp_fu_663_ap_return)
);

Layer4_SVM_mux_45dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
Layer4_SVM_mux_45dEe_U51(
    .din0(b_44_1_fu_424),
    .din1(b_44_2_fu_428),
    .din2(b_44_3_fu_432),
    .din3(b_44_4_fu_436),
    .din4(b_44_5_fu_440),
    .din5(b_44_6_fu_444),
    .din6(b_44_7_fu_448),
    .din7(b_44_8_fu_452),
    .din8(b_44_9_fu_456),
    .din9(b_44_10_fu_460),
    .din10(b_44_11_fu_464),
    .din11(b_44_12_fu_468),
    .din12(b_44_13_fu_472),
    .din13(b_44_14_fu_476),
    .din14(b_44_15_fu_480),
    .din15(b_44_16_fu_484),
    .din16(b_44_17_fu_488),
    .din17(b_44_18_fu_492),
    .din18(b_44_19_fu_496),
    .din19(b_44_20_fu_500),
    .din20(b_44_21_fu_504),
    .din21(b_44_22_fu_508),
    .din22(b_44_23_fu_512),
    .din23(b_44_24_fu_516),
    .din24(b_44_25_fu_520),
    .din25(b_44_26_fu_524),
    .din26(b_44_27_fu_528),
    .din27(b_44_28_fu_532),
    .din28(b_44_29_fu_536),
    .din29(b_44_30_fu_540),
    .din30(b_44_31_fu_544),
    .din31(b_44_32_fu_548),
    .din32(b_44_33_fu_552),
    .din33(b_44_34_fu_556),
    .din34(b_44_35_fu_560),
    .din35(b_44_36_fu_564),
    .din36(b_44_37_fu_568),
    .din37(b_44_38_fu_572),
    .din38(b_44_39_fu_576),
    .din39(b_44_40_fu_580),
    .din40(b_44_41_fu_584),
    .din41(b_44_42_fu_588),
    .din42(b_44_43_fu_592),
    .din43(b_44_44_fu_596),
    .din44(b_44_45_fu_600),
    .din45(j3_reg_640),
    .dout(tmp_67_fu_2355_p47)
);

Layer4_SVM_mux_45dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
Layer4_SVM_mux_45dEe_U52(
    .din0(b_44_1_fu_424),
    .din1(b_44_2_fu_428),
    .din2(b_44_3_fu_432),
    .din3(b_44_4_fu_436),
    .din4(b_44_5_fu_440),
    .din5(b_44_6_fu_444),
    .din6(b_44_7_fu_448),
    .din7(b_44_8_fu_452),
    .din8(b_44_9_fu_456),
    .din9(b_44_10_fu_460),
    .din10(b_44_11_fu_464),
    .din11(b_44_12_fu_468),
    .din12(b_44_13_fu_472),
    .din13(b_44_14_fu_476),
    .din14(b_44_15_fu_480),
    .din15(b_44_16_fu_484),
    .din16(b_44_17_fu_488),
    .din17(b_44_18_fu_492),
    .din18(b_44_19_fu_496),
    .din19(b_44_20_fu_500),
    .din20(b_44_21_fu_504),
    .din21(b_44_22_fu_508),
    .din22(b_44_23_fu_512),
    .din23(b_44_24_fu_516),
    .din24(b_44_25_fu_520),
    .din25(b_44_26_fu_524),
    .din26(b_44_27_fu_528),
    .din27(b_44_28_fu_532),
    .din28(b_44_29_fu_536),
    .din29(b_44_30_fu_540),
    .din30(b_44_31_fu_544),
    .din31(b_44_32_fu_548),
    .din32(b_44_33_fu_552),
    .din33(b_44_34_fu_556),
    .din34(b_44_35_fu_560),
    .din35(b_44_36_fu_564),
    .din36(b_44_37_fu_568),
    .din37(b_44_38_fu_572),
    .din38(b_44_39_fu_576),
    .din39(b_44_40_fu_580),
    .din40(b_44_41_fu_584),
    .din41(b_44_42_fu_588),
    .din42(b_44_43_fu_592),
    .din43(b_44_44_fu_596),
    .din44(b_44_45_fu_600),
    .din45(i4_reg_652),
    .dout(tmp_64_fu_2694_p47)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_out))) begin
            a_Data_0_sel_rd <= ~a_Data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_Data_0_ack_in) & (1'b1 == a_Data_0_vld_in))) begin
            a_Data_0_sel_wr <= ~a_Data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_Data_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == a_Data_0_state) & (1'b0 == a_Data_0_vld_in)) | ((2'd3 == a_Data_0_state) & (1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)))) begin
            a_Data_0_state <= 2'd2;
        end else if ((((2'd1 == a_Data_0_state) & (1'b0 == a_Data_0_ack_out)) | ((2'd3 == a_Data_0_state) & (1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd1;
        end else if (((~((1'b0 == a_Data_0_vld_in) & (1'b1 == a_Data_0_ack_out)) & ~((1'b0 == a_Data_0_ack_out) & (1'b1 == a_Data_0_vld_in)) & (2'd3 == a_Data_0_state)) | ((2'd1 == a_Data_0_state) & (1'b1 == a_Data_0_ack_out)) | ((2'd2 == a_Data_0_state) & (1'b1 == a_Data_0_vld_in)))) begin
            a_Data_0_state <= 2'd3;
        end else begin
            a_Data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        res_1_sel_rd <= 1'b0;
    end else begin
        if (((res_1_ack_out == 1'b1) & (res_1_vld_out == 1'b1))) begin
            res_1_sel_rd <= ~res_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        res_1_sel_wr <= 1'b0;
    end else begin
        if (((res_1_ack_in == 1'b1) & (res_1_vld_in == 1'b1))) begin
            res_1_sel_wr <= ~res_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        res_1_state <= 2'd0;
    end else begin
        if ((((res_1_state == 2'd2) & (res_1_vld_in == 1'b0)) | ((res_1_state == 2'd3) & (res_1_vld_in == 1'b0) & (res_1_ack_out == 1'b1)))) begin
            res_1_state <= 2'd2;
        end else if ((((res_1_state == 2'd1) & (res_1_ack_out == 1'b0)) | ((res_1_state == 2'd3) & (res_1_ack_out == 1'b0) & (res_1_vld_in == 1'b1)))) begin
            res_1_state <= 2'd1;
        end else if (((~((res_1_vld_in == 1'b0) & (res_1_ack_out == 1'b1)) & ~((res_1_ack_out == 1'b0) & (res_1_vld_in == 1'b1)) & (res_1_state == 2'd3)) | ((res_1_state == 2'd1) & (res_1_ack_out == 1'b1)) | ((res_1_state == 2'd2) & (res_1_vld_in == 1'b1)))) begin
            res_1_state <= 2'd3;
        end else begin
            res_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        w_Data_0_sel_rd <= 1'b0;
    end else begin
        if (((w_Data_0_ack_out == 1'b1) & (w_Data_0_vld_out == 1'b1))) begin
            w_Data_0_sel_rd <= ~w_Data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        w_Data_0_sel_wr <= 1'b0;
    end else begin
        if (((w_Data_0_ack_in == 1'b1) & (w_Data_0_vld_in == 1'b1))) begin
            w_Data_0_sel_wr <= ~w_Data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        w_Data_0_state <= 2'd0;
    end else begin
        if ((((w_Data_0_state == 2'd2) & (w_Data_0_vld_in == 1'b0)) | ((w_Data_0_state == 2'd3) & (w_Data_0_vld_in == 1'b0) & (w_Data_0_ack_out == 1'b1)))) begin
            w_Data_0_state <= 2'd2;
        end else if ((((w_Data_0_state == 2'd1) & (w_Data_0_ack_out == 1'b0)) | ((w_Data_0_state == 2'd3) & (w_Data_0_ack_out == 1'b0) & (w_Data_0_vld_in == 1'b1)))) begin
            w_Data_0_state <= 2'd1;
        end else if (((~((w_Data_0_vld_in == 1'b0) & (w_Data_0_ack_out == 1'b1)) & ~((w_Data_0_ack_out == 1'b0) & (w_Data_0_vld_in == 1'b1)) & (w_Data_0_state == 2'd3)) | ((w_Data_0_state == 2'd1) & (w_Data_0_ack_out == 1'b1)) | ((w_Data_0_state == 2'd2) & (w_Data_0_vld_in == 1'b1)))) begin
            w_Data_0_state <= 2'd3;
        end else begin
            w_Data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_10_fu_460 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_10_fu_460 <= b_9_1_cast_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_11_fu_464 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_11_fu_464 <= b_10_1_cast_fu_1184_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_12_fu_468 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_12_fu_468 <= b_11_1_cast_fu_1206_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_13_fu_472 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_13_fu_472 <= b_12_1_cast_fu_1228_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_14_fu_476 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_14_fu_476 <= b_13_1_cast_fu_1250_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_15_fu_480 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_15_fu_480 <= b_14_1_cast_fu_1272_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_16_fu_484 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_16_fu_484 <= b_15_1_cast_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_17_fu_488 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_17_fu_488 <= b_16_1_cast_fu_1316_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_18_fu_492 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_18_fu_492 <= b_17_1_cast_fu_1338_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_19_fu_496 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_19_fu_496 <= b_18_1_cast_fu_1360_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_1_fu_424 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_1_fu_424 <= b_0_1_cast_fu_964_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_20_fu_500 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_20_fu_500 <= b_19_1_cast_fu_1382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_21_fu_504 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_21_fu_504 <= b_20_1_cast_fu_1404_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_22_fu_508 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_22_fu_508 <= b_21_1_cast_fu_1426_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_23_fu_512 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_23_fu_512 <= b_22_1_cast_fu_1448_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_24_fu_516 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_24_fu_516 <= b_23_1_cast_fu_1470_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_25_fu_520 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_25_fu_520 <= b_24_1_cast_fu_1492_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_26_fu_524 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_26_fu_524 <= b_25_1_cast_fu_1514_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_27_fu_528 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_27_fu_528 <= b_26_1_cast_fu_1536_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_28_fu_532 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_28_fu_532 <= b_27_1_cast_fu_1558_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_29_fu_536 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_29_fu_536 <= b_28_1_cast_fu_1580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_2_fu_428 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_2_fu_428 <= b_1_1_cast_fu_986_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_30_fu_540 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_30_fu_540 <= b_29_1_cast_fu_1602_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_31_fu_544 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_31_fu_544 <= b_30_1_cast_fu_1624_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_32_fu_548 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_32_fu_548 <= b_31_1_cast_fu_1646_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_33_fu_552 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_33_fu_552 <= b_32_1_cast_fu_1668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_34_fu_556 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_34_fu_556 <= b_33_1_cast_fu_1690_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_35_fu_560 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_35_fu_560 <= b_34_1_cast_fu_1712_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_36_fu_564 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_36_fu_564 <= b_35_1_cast_fu_1734_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_37_fu_568 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_37_fu_568 <= b_36_1_cast_fu_1756_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_38_fu_572 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_38_fu_572 <= b_37_1_cast_fu_1778_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd38) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_39_fu_576 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_39_fu_576 <= b_38_1_cast_fu_1800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_3_fu_432 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_3_fu_432 <= b_2_1_cast_fu_1008_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd39) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_40_fu_580 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_40_fu_580 <= b_39_1_cast_fu_1822_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd40) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_41_fu_584 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_41_fu_584 <= b_40_1_cast_fu_1844_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd41) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_42_fu_588 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_42_fu_588 <= b_41_1_cast_fu_1866_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd42) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_43_fu_592 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_43_fu_592 <= b_42_1_cast_fu_1888_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd43) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_44_fu_596 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_44_fu_596 <= b_43_1_cast_fu_1910_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((j3_reg_640 == 6'd44) | ((j3_reg_640 == 6'd45) | ((j3_reg_640 == 6'd46) | ((j3_reg_640 == 6'd47) | ((j3_reg_640 == 6'd48) | ((j3_reg_640 == 6'd49) | ((j3_reg_640 == 6'd50) | ((j3_reg_640 == 6'd51) | ((j3_reg_640 == 6'd52) | ((j3_reg_640 == 6'd53) | ((j3_reg_640 == 6'd54) | ((j3_reg_640 == 6'd55) | ((j3_reg_640 == 6'd56) | ((j3_reg_640 == 6'd57) | ((j3_reg_640 == 6'd58) | ((j3_reg_640 == 6'd59) | ((j3_reg_640 == 6'd60) | ((j3_reg_640 == 6'd61) | ((j3_reg_640 == 6'd62) | (j3_reg_640 == 6'd63)))))))))))))))))))))) begin
        b_44_45_fu_600 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_45_fu_600 <= b_44_1_cast_fu_1932_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_4_fu_436 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_4_fu_436 <= b_3_1_cast_fu_1030_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_5_fu_440 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_5_fu_440 <= b_4_1_cast_fu_1052_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_6_fu_444 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_6_fu_444 <= b_5_1_cast_fu_1074_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_7_fu_448 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_7_fu_448 <= b_6_1_cast_fu_1096_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_8_fu_452 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_8_fu_452 <= b_7_1_cast_fu_1118_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j3_reg_640 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_44_9_fu_456 <= b_0_2_fu_2451_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_44_9_fu_456 <= b_8_1_cast_fu_1140_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i4_reg_652 <= 6'd0;
    end else if (((exitcond3_fu_2682_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i4_reg_652 <= i_fu_2688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_3204 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j3_reg_640 <= j_reg_3208;
    end else if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        j3_reg_640 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_629 <= i_1_reg_3119;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        reg_629 <= 3'd0;
    end else if (((exitcond5_fu_2173_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_629 <= tmp_15_Layer4_SVM_mac_dsp_fu_663_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_A)) begin
        a_Data_0_payload_A <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_Data_0_load_B)) begin
        a_Data_0_payload_B <= a_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond3_reg_3213 <= exitcond3_fu_2682_p2;
        exitcond3_reg_3213_pp1_iter1_reg <= exitcond3_reg_3213;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond5_reg_3204 <= exitcond5_fu_2173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_3119 <= i_1_fu_2167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_3208 <= j_fu_2179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((res_1_load_A == 1'b1)) begin
        res_1_payload_A <= tmp_1_fu_2796_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((res_1_load_B == 1'b1)) begin
        res_1_payload_B <= tmp_1_fu_2796_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_10_reg_3164 <= {{a_Data_0_data_out[15:2]}};
        tmp_11_reg_3169 <= {{a_Data_0_data_out[31:18]}};
        tmp_12_reg_3174 <= {{a_Data_0_data_out[47:34]}};
        tmp_13_reg_3179 <= {{a_Data_0_data_out[63:50]}};
        tmp_56_reg_3184 <= {{a_Data_0_data_out[79:66]}};
        tmp_58_reg_3189 <= {{a_Data_0_data_out[95:82]}};
        tmp_60_reg_3194 <= {{a_Data_0_data_out[111:98]}};
        tmp_62_reg_3199 <= {{a_Data_0_data_out[127:114]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_2_reg_3124 <= {{a_Data_0_data_out[15:2]}};
        tmp_3_reg_3129 <= {{a_Data_0_data_out[31:18]}};
        tmp_4_reg_3134 <= {{a_Data_0_data_out[47:34]}};
        tmp_5_reg_3139 <= {{a_Data_0_data_out[63:50]}};
        tmp_6_reg_3144 <= {{a_Data_0_data_out[79:66]}};
        tmp_7_reg_3149 <= {{a_Data_0_data_out[95:82]}};
        tmp_8_reg_3154 <= {{a_Data_0_data_out[111:98]}};
        tmp_9_reg_3159 <= {{a_Data_0_data_out[127:114]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2682_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_s_reg_3222 <= tmp_s_fu_2790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((w_Data_0_load_A == 1'b1)) begin
        w_Data_0_payload_A <= w_Data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((w_Data_0_load_B == 1'b1)) begin
        w_Data_0_payload_B <= w_Data_TDATA;
    end
end

always @ (*) begin
    if ((((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        a_Data_0_ack_out = 1'b1;
    end else begin
        a_Data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == a_Data_0_sel)) begin
        a_Data_0_data_out = a_Data_0_payload_B;
    end else begin
        a_Data_0_data_out = a_Data_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((exitcond9_fu_2161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        a_Data_TDATA_blk_n = a_Data_0_state[1'd0];
    end else begin
        a_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond5_fu_2173_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_2682_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_reg_3204 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j3_phi_fu_644_p4 = j_reg_3208;
    end else begin
        ap_phi_mux_j3_phi_fu_644_p4 = j3_reg_640;
    end
end

always @ (*) begin
    if ((res_1_sel == 1'b1)) begin
        res_1_data_out = res_1_payload_B;
    end else begin
        res_1_data_out = res_1_payload_A;
    end
end

always @ (*) begin
    if (((exitcond3_reg_3213 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        res_1_vld_in = 1'b1;
    end else begin
        res_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_3213_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((exitcond3_reg_3213 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        res_TDATA_blk_n = res_1_state[1'd1];
    end else begin
        res_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond5_fu_2173_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_Data_0_ack_out = 1'b1;
    end else begin
        w_Data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((w_Data_0_sel == 1'b1)) begin
        w_Data_0_data_out = w_Data_0_payload_B;
    end else begin
        w_Data_0_data_out = w_Data_0_payload_A;
    end
end

always @ (*) begin
    if (((exitcond5_fu_2173_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_Data_TDATA_blk_n = w_Data_0_state[1'd0];
    end else begin
        w_Data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out)) & (exitcond9_fu_2161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == a_Data_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond5_fu_2173_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond5_fu_2173_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond3_fu_2682_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((exitcond3_fu_2682_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((res_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (res_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Data_0_ack_in = a_Data_0_state[1'd1];

assign a_Data_0_load_A = (~a_Data_0_sel_wr & a_Data_0_state_cmp_full);

assign a_Data_0_load_B = (a_Data_0_state_cmp_full & a_Data_0_sel_wr);

assign a_Data_0_sel = a_Data_0_sel_rd;

assign a_Data_0_state_cmp_full = ((a_Data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign a_Data_0_vld_in = a_Data_TVALID;

assign a_Data_0_vld_out = a_Data_0_state[1'd0];

assign a_Data_TREADY = a_Data_0_state[1'd1];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond5_fu_2173_p2 == 1'd0) & (w_Data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond5_fu_2173_p2 == 1'd0) & (w_Data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2 = ((exitcond9_fu_2161_p2 == 1'd0) & (1'b0 == a_Data_0_vld_out));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter0 = ((exitcond5_fu_2173_p2 == 1'd0) & (w_Data_0_vld_out == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((exitcond3_reg_3213 == 1'd0) & (res_1_ack_in == 1'b0));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((exitcond3_reg_3213_pp1_iter1_reg == 1'd0) & (res_1_ack_in == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b_0_1_cast_fu_964_p1 = $signed(b_0_fu_956_p3);

assign b_0_2_fu_2451_p2 = (tmp_67_fu_2355_p47 + reg_629);

assign b_0_fu_956_p3 = {{tmp_fu_952_p1}, {8'd0}};

assign b_10_1_cast_fu_1184_p1 = $signed(b_10_fu_1176_p3);

assign b_10_fu_1176_p3 = {{tmp_24_fu_1166_p4}, {8'd0}};

assign b_11_1_cast_fu_1206_p1 = $signed(b_11_fu_1198_p3);

assign b_11_fu_1198_p3 = {{tmp_25_fu_1188_p4}, {8'd0}};

assign b_12_1_cast_fu_1228_p1 = $signed(b_12_fu_1220_p3);

assign b_12_fu_1220_p3 = {{tmp_26_fu_1210_p4}, {8'd0}};

assign b_13_1_cast_fu_1250_p1 = $signed(b_13_fu_1242_p3);

assign b_13_fu_1242_p3 = {{tmp_27_fu_1232_p4}, {8'd0}};

assign b_14_1_cast_fu_1272_p1 = $signed(b_14_fu_1264_p3);

assign b_14_fu_1264_p3 = {{tmp_28_fu_1254_p4}, {8'd0}};

assign b_15_1_cast_fu_1294_p1 = $signed(b_15_fu_1286_p3);

assign b_15_fu_1286_p3 = {{tmp_29_fu_1276_p4}, {8'd0}};

assign b_16_1_cast_fu_1316_p1 = $signed(b_16_fu_1308_p3);

assign b_16_fu_1308_p3 = {{tmp_30_fu_1298_p4}, {8'd0}};

assign b_17_1_cast_fu_1338_p1 = $signed(b_17_fu_1330_p3);

assign b_17_fu_1330_p3 = {{tmp_31_fu_1320_p4}, {8'd0}};

assign b_18_1_cast_fu_1360_p1 = $signed(b_18_fu_1352_p3);

assign b_18_fu_1352_p3 = {{tmp_32_fu_1342_p4}, {8'd0}};

assign b_19_1_cast_fu_1382_p1 = $signed(b_19_fu_1374_p3);

assign b_19_fu_1374_p3 = {{tmp_33_fu_1364_p4}, {8'd0}};

assign b_1_1_cast_fu_986_p1 = $signed(b_1_fu_978_p3);

assign b_1_fu_978_p3 = {{tmp_14_fu_968_p4}, {8'd0}};

assign b_20_1_cast_fu_1404_p1 = $signed(b_20_fu_1396_p3);

assign b_20_fu_1396_p3 = {{tmp_34_fu_1386_p4}, {8'd0}};

assign b_21_1_cast_fu_1426_p1 = $signed(b_21_fu_1418_p3);

assign b_21_fu_1418_p3 = {{tmp_35_fu_1408_p4}, {8'd0}};

assign b_22_1_cast_fu_1448_p1 = $signed(b_22_fu_1440_p3);

assign b_22_fu_1440_p3 = {{tmp_36_fu_1430_p4}, {8'd0}};

assign b_23_1_cast_fu_1470_p1 = $signed(b_23_fu_1462_p3);

assign b_23_fu_1462_p3 = {{tmp_37_fu_1452_p4}, {8'd0}};

assign b_24_1_cast_fu_1492_p1 = $signed(b_24_fu_1484_p3);

assign b_24_fu_1484_p3 = {{tmp_38_fu_1474_p4}, {8'd0}};

assign b_25_1_cast_fu_1514_p1 = $signed(b_25_fu_1506_p3);

assign b_25_fu_1506_p3 = {{tmp_39_fu_1496_p4}, {8'd0}};

assign b_26_1_cast_fu_1536_p1 = $signed(b_26_fu_1528_p3);

assign b_26_fu_1528_p3 = {{tmp_40_fu_1518_p4}, {8'd0}};

assign b_27_1_cast_fu_1558_p1 = $signed(b_27_fu_1550_p3);

assign b_27_fu_1550_p3 = {{tmp_41_fu_1540_p4}, {8'd0}};

assign b_28_1_cast_fu_1580_p1 = $signed(b_28_fu_1572_p3);

assign b_28_fu_1572_p3 = {{tmp_42_fu_1562_p4}, {8'd0}};

assign b_29_1_cast_fu_1602_p1 = $signed(b_29_fu_1594_p3);

assign b_29_fu_1594_p3 = {{tmp_43_fu_1584_p4}, {8'd0}};

assign b_2_1_cast_fu_1008_p1 = $signed(b_2_fu_1000_p3);

assign b_2_fu_1000_p3 = {{tmp_16_fu_990_p4}, {8'd0}};

assign b_30_1_cast_fu_1624_p1 = $signed(b_30_fu_1616_p3);

assign b_30_fu_1616_p3 = {{tmp_44_fu_1606_p4}, {8'd0}};

assign b_31_1_cast_fu_1646_p1 = $signed(b_31_fu_1638_p3);

assign b_31_fu_1638_p3 = {{tmp_45_fu_1628_p4}, {8'd0}};

assign b_32_1_cast_fu_1668_p1 = $signed(b_32_fu_1660_p3);

assign b_32_fu_1660_p3 = {{tmp_46_fu_1650_p4}, {8'd0}};

assign b_33_1_cast_fu_1690_p1 = $signed(b_33_fu_1682_p3);

assign b_33_fu_1682_p3 = {{tmp_47_fu_1672_p4}, {8'd0}};

assign b_34_1_cast_fu_1712_p1 = $signed(b_34_fu_1704_p3);

assign b_34_fu_1704_p3 = {{tmp_48_fu_1694_p4}, {8'd0}};

assign b_35_1_cast_fu_1734_p1 = $signed(b_35_fu_1726_p3);

assign b_35_fu_1726_p3 = {{tmp_49_fu_1716_p4}, {8'd0}};

assign b_36_1_cast_fu_1756_p1 = $signed(b_36_fu_1748_p3);

assign b_36_fu_1748_p3 = {{tmp_50_fu_1738_p4}, {8'd0}};

assign b_37_1_cast_fu_1778_p1 = $signed(b_37_fu_1770_p3);

assign b_37_fu_1770_p3 = {{tmp_51_fu_1760_p4}, {8'd0}};

assign b_38_1_cast_fu_1800_p1 = $signed(b_38_fu_1792_p3);

assign b_38_fu_1792_p3 = {{tmp_52_fu_1782_p4}, {8'd0}};

assign b_39_1_cast_fu_1822_p1 = $signed(b_39_fu_1814_p3);

assign b_39_fu_1814_p3 = {{tmp_53_fu_1804_p4}, {8'd0}};

assign b_3_1_cast_fu_1030_p1 = $signed(b_3_fu_1022_p3);

assign b_3_fu_1022_p3 = {{tmp_17_fu_1012_p4}, {8'd0}};

assign b_40_1_cast_fu_1844_p1 = $signed(b_40_fu_1836_p3);

assign b_40_fu_1836_p3 = {{tmp_54_fu_1826_p4}, {8'd0}};

assign b_41_1_cast_fu_1866_p1 = $signed(b_41_fu_1858_p3);

assign b_41_fu_1858_p3 = {{tmp_55_fu_1848_p4}, {8'd0}};

assign b_42_1_cast_fu_1888_p1 = $signed(b_42_fu_1880_p3);

assign b_42_fu_1880_p3 = {{tmp_57_fu_1870_p4}, {8'd0}};

assign b_43_1_cast_fu_1910_p1 = $signed(b_43_fu_1902_p3);

assign b_43_fu_1902_p3 = {{tmp_59_fu_1892_p4}, {8'd0}};

assign b_44_1_cast_fu_1932_p1 = $signed(b_44_fu_1924_p3);

assign b_44_fu_1924_p3 = {{tmp_61_fu_1914_p4}, {8'd0}};

assign b_4_1_cast_fu_1052_p1 = $signed(b_4_fu_1044_p3);

assign b_4_fu_1044_p3 = {{tmp_18_fu_1034_p4}, {8'd0}};

assign b_5_1_cast_fu_1074_p1 = $signed(b_5_fu_1066_p3);

assign b_5_fu_1066_p3 = {{tmp_19_fu_1056_p4}, {8'd0}};

assign b_6_1_cast_fu_1096_p1 = $signed(b_6_fu_1088_p3);

assign b_6_fu_1088_p3 = {{tmp_20_fu_1078_p4}, {8'd0}};

assign b_7_1_cast_fu_1118_p1 = $signed(b_7_fu_1110_p3);

assign b_7_fu_1110_p3 = {{tmp_21_fu_1100_p4}, {8'd0}};

assign b_8_1_cast_fu_1140_p1 = $signed(b_8_fu_1132_p3);

assign b_8_fu_1132_p3 = {{tmp_22_fu_1122_p4}, {8'd0}};

assign b_9_1_cast_fu_1162_p1 = $signed(b_9_fu_1154_p3);

assign b_9_fu_1154_p3 = {{tmp_23_fu_1144_p4}, {8'd0}};

assign exitcond3_fu_2682_p2 = ((i4_reg_652 == 6'd45) ? 1'b1 : 1'b0);

assign exitcond5_fu_2173_p2 = ((ap_phi_mux_j3_phi_fu_644_p4 == 6'd45) ? 1'b1 : 1'b0);

assign exitcond9_fu_2161_p0 = reg_629;

assign exitcond9_fu_2161_p2 = ((exitcond9_fu_2161_p0 == 3'd4) ? 1'b1 : 1'b0);

assign i_1_fu_2167_p0 = reg_629;

assign i_1_fu_2167_p2 = (i_1_fu_2167_p0 + 3'd1);

assign i_fu_2688_p2 = (i4_reg_652 + 6'd1);

assign j_fu_2179_p2 = (ap_phi_mux_j3_phi_fu_644_p4 + 6'd1);

assign res_1_ack_in = res_1_state[1'd1];

assign res_1_ack_out = res_TREADY;

assign res_1_load_A = (res_1_state_cmp_full & ~res_1_sel_wr);

assign res_1_load_B = (res_1_state_cmp_full & res_1_sel_wr);

assign res_1_sel = res_1_sel_rd;

assign res_1_state_cmp_full = ((res_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_1_vld_out = res_1_state[1'd0];

assign res_TDATA = res_1_data_out;

assign res_TVALID = res_1_state[1'd0];

assign tmp_14_fu_968_p4 = {{Bias_Data[31:16]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read16 = w_Data_0_data_out[15:0];

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read17 = {{w_Data_0_data_out[31:16]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read18 = {{w_Data_0_data_out[47:32]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read19 = {{w_Data_0_data_out[63:48]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read20 = {{w_Data_0_data_out[79:64]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read21 = {{w_Data_0_data_out[95:80]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read22 = {{w_Data_0_data_out[111:96]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read23 = {{w_Data_0_data_out[127:112]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read24 = {{w_Data_0_data_out[143:128]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read25 = {{w_Data_0_data_out[159:144]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read26 = {{w_Data_0_data_out[175:160]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read27 = {{w_Data_0_data_out[191:176]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read28 = {{w_Data_0_data_out[207:192]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read29 = {{w_Data_0_data_out[223:208]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read30 = {{w_Data_0_data_out[239:224]}};

assign tmp_15_Layer4_SVM_mac_dsp_fu_663_p_read31 = {{w_Data_0_data_out[255:240]}};

assign tmp_16_fu_990_p4 = {{Bias_Data[47:32]}};

assign tmp_17_fu_1012_p4 = {{Bias_Data[63:48]}};

assign tmp_18_fu_1034_p4 = {{Bias_Data[79:64]}};

assign tmp_19_fu_1056_p4 = {{Bias_Data[95:80]}};

assign tmp_1_fu_2796_p1 = tmp_s_reg_3222;

assign tmp_20_fu_1078_p4 = {{Bias_Data[111:96]}};

assign tmp_21_fu_1100_p4 = {{Bias_Data[127:112]}};

assign tmp_22_fu_1122_p4 = {{Bias_Data[143:128]}};

assign tmp_23_fu_1144_p4 = {{Bias_Data[159:144]}};

assign tmp_24_fu_1166_p4 = {{Bias_Data[175:160]}};

assign tmp_25_fu_1188_p4 = {{Bias_Data[191:176]}};

assign tmp_26_fu_1210_p4 = {{Bias_Data[207:192]}};

assign tmp_27_fu_1232_p4 = {{Bias_Data[223:208]}};

assign tmp_28_fu_1254_p4 = {{Bias_Data[239:224]}};

assign tmp_29_fu_1276_p4 = {{Bias_Data[255:240]}};

assign tmp_30_fu_1298_p4 = {{Bias_Data[271:256]}};

assign tmp_31_fu_1320_p4 = {{Bias_Data[287:272]}};

assign tmp_32_fu_1342_p4 = {{Bias_Data[303:288]}};

assign tmp_33_fu_1364_p4 = {{Bias_Data[319:304]}};

assign tmp_34_fu_1386_p4 = {{Bias_Data[335:320]}};

assign tmp_35_fu_1408_p4 = {{Bias_Data[351:336]}};

assign tmp_36_fu_1430_p4 = {{Bias_Data[367:352]}};

assign tmp_37_fu_1452_p4 = {{Bias_Data[383:368]}};

assign tmp_38_fu_1474_p4 = {{Bias_Data[399:384]}};

assign tmp_39_fu_1496_p4 = {{Bias_Data[415:400]}};

assign tmp_40_fu_1518_p4 = {{Bias_Data[431:416]}};

assign tmp_41_fu_1540_p4 = {{Bias_Data[447:432]}};

assign tmp_42_fu_1562_p4 = {{Bias_Data[463:448]}};

assign tmp_43_fu_1584_p4 = {{Bias_Data[479:464]}};

assign tmp_44_fu_1606_p4 = {{Bias_Data[495:480]}};

assign tmp_45_fu_1628_p4 = {{Bias_Data[511:496]}};

assign tmp_46_fu_1650_p4 = {{Bias_Data[527:512]}};

assign tmp_47_fu_1672_p4 = {{Bias_Data[543:528]}};

assign tmp_48_fu_1694_p4 = {{Bias_Data[559:544]}};

assign tmp_49_fu_1716_p4 = {{Bias_Data[575:560]}};

assign tmp_50_fu_1738_p4 = {{Bias_Data[591:576]}};

assign tmp_51_fu_1760_p4 = {{Bias_Data[607:592]}};

assign tmp_52_fu_1782_p4 = {{Bias_Data[623:608]}};

assign tmp_53_fu_1804_p4 = {{Bias_Data[639:624]}};

assign tmp_54_fu_1826_p4 = {{Bias_Data[655:640]}};

assign tmp_55_fu_1848_p4 = {{Bias_Data[671:656]}};

assign tmp_57_fu_1870_p4 = {{Bias_Data[687:672]}};

assign tmp_59_fu_1892_p4 = {{Bias_Data[703:688]}};

assign tmp_61_fu_1914_p4 = {{Bias_Data[719:704]}};

assign tmp_fu_952_p1 = Bias_Data[15:0];

assign tmp_s_fu_2790_p2 = (($signed(tmp_64_fu_2694_p47) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign w_Data_0_ack_in = w_Data_0_state[1'd1];

assign w_Data_0_load_A = (w_Data_0_state_cmp_full & ~w_Data_0_sel_wr);

assign w_Data_0_load_B = (w_Data_0_state_cmp_full & w_Data_0_sel_wr);

assign w_Data_0_sel = w_Data_0_sel_rd;

assign w_Data_0_state_cmp_full = ((w_Data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign w_Data_0_vld_in = w_Data_TVALID;

assign w_Data_0_vld_out = w_Data_0_state[1'd0];

assign w_Data_TREADY = w_Data_0_state[1'd1];

endmodule //Layer4_SVM
