// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer3_WriteAct,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu15eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.407500,HLS_SYN_LAT=33524,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=198,HLS_SYN_LUT=850,HLS_VERSION=2018_3}" *)

module Layer3_WriteAct (
        ap_clk,
        ap_rst_n,
        ActDMA_V_TDATA,
        ActDMA_V_TVALID,
        ActDMA_V_TREADY,
        SyncSig_V,
        SyncSig_V_ap_vld,
        SyncSig_V_ap_ack,
        ActBuf_Data_address0,
        ActBuf_Data_ce0,
        ActBuf_Data_we0,
        ActBuf_Data_d0
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst_n;
input  [7:0] ActDMA_V_TDATA;
input   ActDMA_V_TVALID;
output   ActDMA_V_TREADY;
output   SyncSig_V;
output   SyncSig_V_ap_vld;
input   SyncSig_V_ap_ack;
output  [9:0] ActBuf_Data_address0;
output   ActBuf_Data_ce0;
output   ActBuf_Data_we0;
output  [63:0] ActBuf_Data_d0;

reg[9:0] ActBuf_Data_address0;
reg ActBuf_Data_ce0;
reg ActBuf_Data_we0;
reg[63:0] ActBuf_Data_d0;

 reg    ap_rst_n_inv;
reg   [7:0] ActDMA_V_0_data_out;
wire    ActDMA_V_0_vld_in;
wire    ActDMA_V_0_vld_out;
wire    ActDMA_V_0_ack_in;
reg    ActDMA_V_0_ack_out;
reg   [7:0] ActDMA_V_0_payload_A;
reg   [7:0] ActDMA_V_0_payload_B;
reg    ActDMA_V_0_sel_rd;
reg    ActDMA_V_0_sel_wr;
wire    ActDMA_V_0_sel;
wire    ActDMA_V_0_load_A;
wire    ActDMA_V_0_load_B;
reg   [1:0] ActDMA_V_0_state;
wire    ActDMA_V_0_state_cmp_full;
reg    SyncSig_V_1_data_reg;
reg    SyncSig_V_1_vld_reg;
reg    SyncSig_V_1_vld_in;
reg    SyncSig_V_1_ack_in;
wire    SyncSig_V_1_ack_out;
reg    ActDMA_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    SyncSig_V_blk_n;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_fu_687_p2;
wire    ap_CS_fsm_state18;
reg   [0:0] icmp_reg_909;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire   [2:0] t_V_9_mid2_fu_566_p3;
reg   [2:0] reg_784;
wire   [2:0] grp_fu_705_p2;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state2;
reg   [9:0] reg_794;
wire   [9:0] tmp_4_fu_467_p2;
wire    ap_CS_fsm_state4;
wire   [5:0] t_V_13_fu_719_p3;
wire   [5:0] t_V_1_fu_376_p3;
wire   [0:0] grp_fu_772_p2;
wire   [9:0] grp_fu_766_p2;
reg   [9:0] reg_807;
wire   [1:0] t_V_9_fu_671_p2;
reg   [1:0] t_V_9_reg_812;
reg    ap_block_state17_io;
wire   [5:0] t_V_8_fu_558_p3;
reg   [5:0] t_V_8_reg_818;
wire   [2:0] m_V_1_fu_515_p2;
wire    ap_CS_fsm_state5;
wire   [7:0] tmp_s_fu_497_p2;
reg   [7:0] tmp_s_reg_831;
reg   [7:0] tmp_20_reg_848;
reg   [7:0] tmp_23_reg_858;
reg   [7:0] tmp_24_reg_863;
reg   [7:0] tmp_25_reg_868;
reg   [7:0] tmp_27_reg_873;
wire   [2:0] t_V_16_fu_580_p2;
wire   [6:0] indvar_flatten_next7_fu_627_p2;
wire   [0:0] exitcond6_fu_639_p2;
wire   [2:0] m_V_3_fu_661_p2;
wire    ap_CS_fsm_state16;
wire   [5:0] t_V_17_fu_693_p2;
reg    ap_block_state18_io;
wire   [0:0] exitcond1_fu_699_p2;
reg   [7:0] tmp_22_reg_922;
reg   [0:0] exitcond4_reg_192;
wire    ap_CS_fsm_state1;
wire   [0:0] exitcond_flatten_fu_437_p2;
reg   [2:0] t_V_s_reg_203;
reg   [5:0] t_V_reg_214;
reg   [7:0] indvar_flatten_reg_225;
reg   [5:0] t_V_2_reg_236;
wire    ap_CS_fsm_state3;
reg   [1:0] t_V_4_reg_248;
reg   [2:0] t_V_3_reg_260;
wire   [0:0] exitcond3_fu_431_p2;
reg   [0:0] exitcond8_reg_271;
wire   [0:0] exitcond_flatten8_fu_633_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] t_V_5_reg_282;
reg   [5:0] t_V_7_reg_293;
reg   [6:0] indvar_flatten1_reg_304;
reg   [2:0] t_V_6_reg_315;
wire   [0:0] exitcond5_fu_645_p2;
wire    ap_CS_fsm_state15;
reg   [0:0] exitcond7_reg_326;
wire   [0:0] exitcond_flatten1_fu_778_p2;
reg   [2:0] t_V_11_reg_337;
reg   [5:0] t_V_12_reg_348;
reg   [7:0] indvar_flatten2_reg_359;
wire   [63:0] tmp_6_cast_fu_414_p1;
wire   [63:0] tmp_15_fu_547_p1;
wire   [63:0] tmp_37_cast_fu_603_p1;
wire   [63:0] tmp_38_cast_fu_666_p1;
wire   [63:0] tmp_29_cast_fu_755_p1;
wire   [63:0] tmp_21_fu_608_p9;
wire   [5:0] c_V_fu_743_p2;
wire   [6:0] tmp_7_fu_396_p3;
wire   [7:0] tmp_fu_443_p3;
wire   [8:0] tmp_3_cast_fu_451_p1;
wire   [8:0] tmp_4_cast_fu_404_p1;
wire   [8:0] tmp_6_fu_408_p2;
wire   [8:0] tmp_cast_fu_727_p1;
wire   [8:0] tmp_28_fu_749_p2;
wire   [2:0] t_V_1_mid2_fu_384_p3;
wire   [2:0] tmp_9_fu_455_p3;
wire   [9:0] p_shl1_cast_fu_493_p1;
wire   [9:0] p_shl_cast_fu_481_p1;
wire   [8:0] tmp_2_fu_473_p3;
wire   [4:0] tmp_3_fu_485_p3;
wire   [7:0] p_shl3_cast_fu_463_p1;
wire   [7:0] p_shl2_cast_fu_392_p1;
wire   [2:0] tmp_11_fu_521_p1;
wire   [6:0] tmp_13_fu_677_p4;
wire   [2:0] tmp_12_fu_524_p2;
wire   [9:0] tmp_14_fu_539_p3;
wire   [5:0] c_V_2_fu_552_p2;
wire   [7:0] tmp_31_fu_622_p2;
wire   [9:0] tmp_32_fu_585_p3;
wire   [10:0] tmp_36_cast_fu_593_p1;
wire   [10:0] tmp_13_cast_fu_574_p1;
wire   [10:0] tmp_33_fu_597_p2;
wire   [7:0] tmp_21_fu_608_p8;
wire   [7:0] tmp_14_cast_fu_577_p1;
wire   [9:0] tmp_11_cast_fu_657_p1;
wire   [9:0] tmp_35_fu_651_p2;
wire   [4:0] tmp_34_fu_530_p4;
reg   [2:0] grp_fu_705_p0;
wire   [2:0] t_V_5_mid2_fu_711_p3;
wire   [5:0] c_V_1_fu_760_p2;
wire   [7:0] tmp_26_fu_731_p3;
wire   [8:0] tmp_27_cast_fu_739_p1;
wire   [8:0] tmp_29_fu_419_p2;
reg   [9:0] grp_fu_766_p0;
reg   [9:0] grp_fu_766_p1;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ActDMA_V_0_sel_rd = 1'b0;
#0 ActDMA_V_0_sel_wr = 1'b0;
#0 ActDMA_V_0_state = 2'd0;
#0 SyncSig_V_1_data_reg = 1'b0;
#0 SyncSig_V_1_vld_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == ActDMA_V_0_ack_out) & (1'b1 == ActDMA_V_0_vld_out))) begin
            ActDMA_V_0_sel_rd <= ~ActDMA_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == ActDMA_V_0_ack_in) & (1'b1 == ActDMA_V_0_vld_in))) begin
            ActDMA_V_0_sel_wr <= ~ActDMA_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_vld_in)) | ((2'd3 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_vld_in) & (1'b1 == ActDMA_V_0_ack_out)))) begin
            ActDMA_V_0_state <= 2'd2;
        end else if ((((2'd1 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_ack_out)) | ((2'd3 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_ack_out) & (1'b1 == ActDMA_V_0_vld_in)))) begin
            ActDMA_V_0_state <= 2'd1;
        end else if (((~((1'b0 == ActDMA_V_0_vld_in) & (1'b1 == ActDMA_V_0_ack_out)) & ~((1'b0 == ActDMA_V_0_ack_out) & (1'b1 == ActDMA_V_0_vld_in)) & (2'd3 == ActDMA_V_0_state)) | ((2'd1 == ActDMA_V_0_state) & (1'b1 == ActDMA_V_0_ack_out)) | ((2'd2 == ActDMA_V_0_state) & (1'b1 == ActDMA_V_0_vld_in)))) begin
            ActDMA_V_0_state <= 2'd3;
        end else begin
            ActDMA_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == SyncSig_V_1_vld_reg) & (1'b1 == SyncSig_V_1_vld_in))) begin
        SyncSig_V_1_vld_reg <= 1'b1;
    end else if (((1'b0 == SyncSig_V_1_vld_in) & (1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_reg))) begin
        SyncSig_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        exitcond4_reg_192 <= grp_fu_772_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        exitcond4_reg_192 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_699_p2 == 1'd1) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        exitcond7_reg_326 <= 1'd0;
    end else if (((exitcond_flatten1_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        exitcond7_reg_326 <= grp_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exitcond8_reg_271 <= 1'd0;
    end else if (((exitcond_flatten8_fu_633_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
        exitcond8_reg_271 <= exitcond6_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten1_reg_304 <= 7'd0;
    end else if (((exitcond_flatten8_fu_633_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
        indvar_flatten1_reg_304 <= indvar_flatten_next7_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_699_p2 == 1'd1) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        indvar_flatten2_reg_359 <= 8'd0;
    end else if (((exitcond_flatten1_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        indvar_flatten2_reg_359 <= grp_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_225 <= grp_fu_766_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_225 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_784 <= grp_fu_705_p2;
    end else if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        reg_784 <= t_V_9_mid2_fu_566_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_794 <= t_V_1_fu_376_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_794 <= t_V_13_fu_719_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_794 <= tmp_4_fu_467_p2;
    end else if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        reg_794 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_699_p2 == 1'd1) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        t_V_11_reg_337 <= 3'd0;
    end else if (((exitcond_flatten1_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        t_V_11_reg_337 <= grp_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_699_p2 == 1'd1) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        t_V_12_reg_348 <= 6'd0;
    end else if (((exitcond_flatten1_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        t_V_12_reg_348 <= t_V_13_fu_719_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_699_p2 == 1'd0) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        t_V_2_reg_236 <= t_V_17_fu_693_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_2_reg_236 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_3_reg_260 <= 3'd0;
    end else if (((exitcond3_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_3_reg_260 <= m_V_1_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_699_p2 == 1'd0) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        t_V_4_reg_248 <= t_V_9_reg_812;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_4_reg_248 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_5_reg_282 <= 3'd0;
    end else if (((exitcond_flatten8_fu_633_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
        t_V_5_reg_282 <= t_V_16_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_V_6_reg_315 <= 3'd0;
    end else if (((exitcond5_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        t_V_6_reg_315 <= m_V_3_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_7_reg_293 <= 6'd1;
    end else if (((exitcond_flatten8_fu_633_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
        t_V_7_reg_293 <= t_V_8_reg_818;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_reg_214 <= t_V_1_fu_376_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        t_V_reg_214 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_s_reg_203 <= grp_fu_705_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        t_V_s_reg_203 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ActDMA_V_0_load_A)) begin
        ActDMA_V_0_payload_A <= ActDMA_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ActDMA_V_0_load_B)) begin
        ActDMA_V_0_payload_B <= ActDMA_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == SyncSig_V_1_vld_reg) & (1'b1 == SyncSig_V_1_vld_in)) | ((1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_in) & (1'b1 == SyncSig_V_1_vld_reg)))) begin
        SyncSig_V_1_data_reg <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17))) begin
        icmp_reg_909 <= icmp_fu_687_p2;
        t_V_9_reg_812 <= t_V_9_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_807 <= grp_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_8_reg_818 <= t_V_8_fu_558_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_20_reg_848 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_22_reg_922 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_23_reg_858 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_24_reg_863 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_25_reg_868 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_27_reg_873 <= ActDMA_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_s_reg_831[7 : 1] <= tmp_s_fu_497_p2[7 : 1];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ActBuf_Data_address0 = tmp_29_cast_fu_755_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        ActBuf_Data_address0 = tmp_38_cast_fu_666_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ActBuf_Data_address0 = tmp_37_cast_fu_603_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ActBuf_Data_address0 = tmp_15_fu_547_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ActBuf_Data_address0 = tmp_6_cast_fu_414_p1;
    end else begin
        ActBuf_Data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14)))) begin
        ActBuf_Data_ce0 = 1'b1;
    end else begin
        ActBuf_Data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ActBuf_Data_d0 = tmp_21_fu_608_p9;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19))) begin
        ActBuf_Data_d0 = 64'd0;
    end else begin
        ActBuf_Data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19) | ((exitcond5_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((exitcond3_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14)))) begin
        ActBuf_Data_we0 = 1'b1;
    end else begin
        ActBuf_Data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7)))) begin
        ActDMA_V_0_ack_out = 1'b1;
    end else begin
        ActDMA_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ActDMA_V_0_sel)) begin
        ActDMA_V_0_data_out = ActDMA_V_0_payload_B;
    end else begin
        ActDMA_V_0_data_out = ActDMA_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        ActDMA_V_TDATA_blk_n = ActDMA_V_0_state[1'd0];
    end else begin
        ActDMA_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == SyncSig_V_1_vld_reg) | ((1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_reg)))) begin
        SyncSig_V_1_ack_in = 1'b1;
    end else begin
        SyncSig_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & (1'b1 == SyncSig_V_1_ack_in)) | ((1'b1 == ap_CS_fsm_state20) & (1'b1 == SyncSig_V_1_ack_in)) | ((icmp_fu_687_p2 == 1'd0) & (1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17)))) begin
        SyncSig_V_1_vld_in = 1'b1;
    end else begin
        SyncSig_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_reg_909 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_fu_687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        SyncSig_V_blk_n = SyncSig_V_1_ack_in;
    end else begin
        SyncSig_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_705_p0 = t_V_5_mid2_fu_711_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_705_p0 = t_V_1_mid2_fu_384_p3;
    end else begin
        grp_fu_705_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_766_p0 = indvar_flatten2_reg_359;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_766_p0 = tmp_4_fu_467_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_766_p0 = indvar_flatten_reg_225;
    end else begin
        grp_fu_766_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_766_p1 = 10'd132;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_766_p1 = 8'd1;
    end else begin
        grp_fu_766_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_flatten_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond3_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((exitcond_flatten8_fu_633_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((exitcond_flatten8_fu_633_p2 == 1'd1) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((exitcond5_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((exitcond1_fu_699_p2 == 1'd1) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((exitcond1_fu_699_p2 == 1'd0) & (1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((exitcond_flatten1_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'b1 == SyncSig_V_1_ack_in))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'b1 == SyncSig_V_1_ack_in))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (1'b1 == SyncSig_V_1_ack_in))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ActDMA_V_0_ack_in = ActDMA_V_0_state[1'd1];

assign ActDMA_V_0_load_A = (~ActDMA_V_0_sel_wr & ActDMA_V_0_state_cmp_full);

assign ActDMA_V_0_load_B = (ActDMA_V_0_state_cmp_full & ActDMA_V_0_sel_wr);

assign ActDMA_V_0_sel = ActDMA_V_0_sel_rd;

assign ActDMA_V_0_state_cmp_full = ((ActDMA_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign ActDMA_V_0_vld_in = ActDMA_V_TVALID;

assign ActDMA_V_0_vld_out = ActDMA_V_0_state[1'd0];

assign ActDMA_V_TREADY = ActDMA_V_0_state[1'd1];

assign SyncSig_V = SyncSig_V_1_data_reg;

assign SyncSig_V_1_ack_out = SyncSig_V_ap_ack;

assign SyncSig_V_ap_vld = SyncSig_V_1_vld_reg;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state17_io = ((icmp_fu_687_p2 == 1'd0) & (1'b0 == SyncSig_V_1_ack_in));
end

always @ (*) begin
    ap_block_state18_io = ((icmp_reg_909 == 1'd0) & (1'b0 == SyncSig_V_1_ack_in));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_V_1_fu_760_p2 = (t_V_12_reg_348 + 6'd1);

assign c_V_2_fu_552_p2 = (t_V_7_reg_293 + 6'd1);

assign c_V_fu_743_p2 = (t_V_reg_214 + 6'd1);

assign exitcond1_fu_699_p2 = ((t_V_17_fu_693_p2 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond3_fu_431_p2 = ((t_V_3_reg_260 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond5_fu_645_p2 = ((t_V_6_reg_315 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond6_fu_639_p2 = ((t_V_16_fu_580_p2 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_778_p2 = ((indvar_flatten2_reg_359 == 8'd135) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_633_p2 = ((indvar_flatten1_reg_304 == 7'd127) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_437_p2 = ((indvar_flatten_reg_225 == 8'd135) ? 1'b1 : 1'b0);

assign grp_fu_705_p2 = (grp_fu_705_p0 + 3'd1);

assign grp_fu_766_p2 = (grp_fu_766_p0 + grp_fu_766_p1);

assign grp_fu_772_p2 = ((grp_fu_705_p2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_fu_687_p2 = ((tmp_34_fu_530_p4 == 5'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next7_fu_627_p2 = (indvar_flatten1_reg_304 + 7'd1);

assign m_V_1_fu_515_p2 = (t_V_3_reg_260 + 3'd1);

assign m_V_3_fu_661_p2 = (t_V_6_reg_315 + 3'd1);

assign p_shl1_cast_fu_493_p1 = tmp_3_fu_485_p3;

assign p_shl2_cast_fu_392_p1 = tmp_7_fu_396_p3;

assign p_shl3_cast_fu_463_p1 = tmp_9_fu_455_p3;

assign p_shl_cast_fu_481_p1 = tmp_2_fu_473_p3;

assign t_V_13_fu_719_p3 = ((exitcond7_reg_326[0:0] === 1'b1) ? c_V_1_fu_760_p2 : t_V_12_reg_348);

assign t_V_16_fu_580_p2 = (reg_784 + 3'd1);

assign t_V_17_fu_693_p2 = (t_V_2_reg_236 + 6'd1);

assign t_V_1_fu_376_p3 = ((exitcond4_reg_192[0:0] === 1'b1) ? c_V_fu_743_p2 : t_V_reg_214);

assign t_V_1_mid2_fu_384_p3 = ((exitcond4_reg_192[0:0] === 1'b1) ? 3'd0 : t_V_s_reg_203);

assign t_V_5_mid2_fu_711_p3 = ((exitcond7_reg_326[0:0] === 1'b1) ? 3'd0 : t_V_11_reg_337);

assign t_V_8_fu_558_p3 = ((exitcond8_reg_271[0:0] === 1'b1) ? c_V_2_fu_552_p2 : t_V_7_reg_293);

assign t_V_9_fu_671_p2 = (t_V_4_reg_248 + 2'd1);

assign t_V_9_mid2_fu_566_p3 = ((exitcond8_reg_271[0:0] === 1'b1) ? 3'd0 : t_V_5_reg_282);

assign tmp_11_cast_fu_657_p1 = t_V_6_reg_315;

assign tmp_11_fu_521_p1 = reg_794[2:0];

assign tmp_12_fu_524_p2 = (tmp_11_fu_521_p1 | t_V_3_reg_260);

assign tmp_13_cast_fu_574_p1 = reg_784;

assign tmp_13_fu_677_p4 = {{reg_794[9:3]}};

assign tmp_14_cast_fu_577_p1 = t_V_8_reg_818;

assign tmp_14_fu_539_p3 = {{tmp_13_fu_677_p4}, {tmp_12_fu_524_p2}};

assign tmp_15_fu_547_p1 = tmp_14_fu_539_p3;

assign tmp_21_fu_608_p8 = reg_794;

assign tmp_21_fu_608_p9 = {{{{{{{{ActDMA_V_0_data_out}, {tmp_27_reg_873}}, {tmp_25_reg_868}}, {tmp_24_reg_863}}, {tmp_23_reg_858}}, {tmp_22_reg_922}}, {tmp_20_reg_848}}, {tmp_21_fu_608_p8}};

assign tmp_26_fu_731_p3 = {{t_V_13_fu_719_p3}, {2'd0}};

assign tmp_27_cast_fu_739_p1 = tmp_26_fu_731_p3;

assign tmp_28_fu_749_p2 = (tmp_27_cast_fu_739_p1 + 9'd136);

assign tmp_29_cast_fu_755_p1 = tmp_29_fu_419_p2;

assign tmp_29_fu_419_p2 = (tmp_cast_fu_727_p1 + tmp_28_fu_749_p2);

assign tmp_2_fu_473_p3 = {{t_V_4_reg_248}, {7'd0}};

assign tmp_31_fu_622_p2 = (tmp_s_reg_831 + tmp_14_cast_fu_577_p1);

assign tmp_32_fu_585_p3 = {{tmp_31_fu_622_p2}, {2'd0}};

assign tmp_33_fu_597_p2 = (tmp_36_cast_fu_593_p1 + tmp_13_cast_fu_574_p1);

assign tmp_34_fu_530_p4 = {{t_V_2_reg_236[5:1]}};

assign tmp_35_fu_651_p2 = (reg_807 + tmp_11_cast_fu_657_p1);

assign tmp_36_cast_fu_593_p1 = tmp_32_fu_585_p3;

assign tmp_37_cast_fu_603_p1 = tmp_33_fu_597_p2;

assign tmp_38_cast_fu_666_p1 = tmp_35_fu_651_p2;

assign tmp_3_cast_fu_451_p1 = t_V_1_mid2_fu_384_p3;

assign tmp_3_fu_485_p3 = {{t_V_4_reg_248}, {3'd0}};

assign tmp_4_cast_fu_404_p1 = tmp_fu_443_p3;

assign tmp_4_fu_467_p2 = (p_shl1_cast_fu_493_p1 + p_shl_cast_fu_481_p1);

assign tmp_6_cast_fu_414_p1 = tmp_6_fu_408_p2;

assign tmp_6_fu_408_p2 = (tmp_3_cast_fu_451_p1 + tmp_4_cast_fu_404_p1);

assign tmp_7_fu_396_p3 = {{t_V_4_reg_248}, {5'd0}};

assign tmp_9_fu_455_p3 = {{t_V_4_reg_248}, {1'd0}};

assign tmp_cast_fu_727_p1 = t_V_5_mid2_fu_711_p3;

assign tmp_fu_443_p3 = {{t_V_1_fu_376_p3}, {2'd0}};

assign tmp_s_fu_497_p2 = (p_shl3_cast_fu_463_p1 + p_shl2_cast_fu_392_p1);

always @ (posedge ap_clk) begin
    tmp_s_reg_831[0] <= 1'b0;
end

endmodule //Layer3_WriteAct
