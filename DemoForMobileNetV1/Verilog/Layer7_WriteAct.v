// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer7_WriteAct,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu3eg-sfvc784-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.562750,HLS_SYN_LAT=16388,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=171,HLS_SYN_LUT=708,HLS_VERSION=2018_3}" *)

module Layer7_WriteAct (
        ap_clk,
        ap_rst_n,
        ActDMA_V_TDATA,
        ActDMA_V_TVALID,
        ActDMA_V_TREADY,
        SyncSig_V,
        SyncSig_V_ap_vld,
        SyncSig_V_ap_ack,
        ActBuf_Data_address0,
        ActBuf_Data_ce0,
        ActBuf_Data_we0,
        ActBuf_Data_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst_n;
input  [7:0] ActDMA_V_TDATA;
input   ActDMA_V_TVALID;
output   ActDMA_V_TREADY;
output   SyncSig_V;
output   SyncSig_V_ap_vld;
input   SyncSig_V_ap_ack;
output  [12:0] ActBuf_Data_address0;
output   ActBuf_Data_ce0;
output   ActBuf_Data_we0;
output  [15:0] ActBuf_Data_d0;

reg[12:0] ActBuf_Data_address0;
reg ActBuf_Data_ce0;
reg ActBuf_Data_we0;
reg[15:0] ActBuf_Data_d0;

 reg    ap_rst_n_inv;
reg   [7:0] ActDMA_V_0_data_out;
wire    ActDMA_V_0_vld_in;
wire    ActDMA_V_0_vld_out;
wire    ActDMA_V_0_ack_in;
reg    ActDMA_V_0_ack_out;
reg   [7:0] ActDMA_V_0_payload_A;
reg   [7:0] ActDMA_V_0_payload_B;
reg    ActDMA_V_0_sel_rd;
reg    ActDMA_V_0_sel_wr;
wire    ActDMA_V_0_sel;
wire    ActDMA_V_0_load_A;
wire    ActDMA_V_0_load_B;
reg   [1:0] ActDMA_V_0_state;
wire    ActDMA_V_0_state_cmp_full;
reg    SyncSig_V_1_data_reg;
reg    SyncSig_V_1_vld_reg;
reg    SyncSig_V_1_vld_in;
reg    SyncSig_V_1_ack_in;
wire    SyncSig_V_1_ack_out;
reg    ActDMA_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    SyncSig_V_blk_n;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg   [7:0] reg_283;
wire   [3:0] t_V_fu_313_p3;
reg   [3:0] t_V_reg_611;
wire   [6:0] t_V_3_mid2_fu_333_p3;
reg   [6:0] t_V_3_mid2_reg_617;
wire   [3:0] t_V_2_fu_341_p3;
reg   [3:0] t_V_2_reg_623;
wire   [10:0] indvar_flatten_next_fu_355_p3;
reg   [10:0] indvar_flatten_next_reg_629;
wire   [6:0] t_V_9_fu_418_p2;
wire   [11:0] indvar_flatten_next1_fu_423_p2;
wire   [0:0] exitcond5_fu_429_p2;
wire   [0:0] exitcond_flatten_fu_435_p2;
wire   [3:0] t_V_6_fu_472_p3;
reg   [3:0] t_V_6_reg_658;
wire   [6:0] t_V_5_mid2_fu_492_p3;
reg   [6:0] t_V_5_mid2_reg_664;
wire   [3:0] t_V_7_fu_500_p3;
reg   [3:0] t_V_7_reg_670;
wire   [10:0] indvar_flatten_next2_fu_514_p3;
reg   [10:0] indvar_flatten_next2_reg_676;
wire   [6:0] t_V_10_fu_583_p2;
wire   [11:0] indvar_flatten_next3_fu_588_p2;
wire   [0:0] exitcond_fu_594_p2;
wire   [0:0] exitcond_flatten2_fu_600_p2;
reg   [0:0] exitcond_flatten4_reg_129;
wire    ap_CS_fsm_state1;
wire   [0:0] exitcond_flatten1_fu_440_p2;
reg   [0:0] exitcond1_reg_140;
reg   [6:0] t_V_s_reg_151;
reg   [3:0] t_V_1_reg_162;
reg   [10:0] indvar_flatten_reg_173;
reg   [3:0] t_V9_reg_184;
reg   [11:0] indvar_flatten1_reg_195;
reg   [0:0] exitcond_flatten5_reg_206;
wire   [0:0] exitcond_flatten3_fu_605_p2;
reg   [0:0] exitcond6_reg_217;
reg   [6:0] t_V_3_reg_228;
reg   [3:0] t_V_4_reg_239;
reg   [10:0] indvar_flatten2_reg_250;
reg   [3:0] t_V_5_reg_261;
reg   [11:0] indvar_flatten3_reg_272;
wire   [63:0] tmp_19_cast_fu_404_p1;
wire   [63:0] tmp_27_cast_fu_569_p1;
wire   [15:0] tmp_4_fu_409_p3;
wire   [15:0] tmp_13_fu_574_p3;
wire   [0:0] not_exitcond_flatten_fu_301_p2;
wire   [3:0] r_V_fu_287_p2;
wire   [3:0] t_V_2_mid_fu_293_p3;
wire   [0:0] exitcond5_mid_fu_307_p2;
wire   [0:0] tmp_9_fu_327_p2;
wire   [3:0] c_V_fu_321_p2;
wire   [10:0] indvar_flatten_op_fu_349_p2;
wire   [6:0] tmp_1_fu_369_p3;
wire   [7:0] tmp_15_cast_fu_376_p1;
wire   [7:0] tmp_8_cast_fu_366_p1;
wire   [7:0] tmp_2_fu_380_p2;
wire   [13:0] tmp_fu_386_p3;
wire   [14:0] tmp_18_cast_fu_394_p1;
wire   [14:0] tmp_7_cast_fu_363_p1;
wire   [14:0] tmp_3_fu_398_p2;
wire   [0:0] not_exitcond_flatten_2_fu_460_p2;
wire   [3:0] r_V_1_fu_446_p2;
wire   [3:0] t_V_4_mid_fu_452_p3;
wire   [0:0] exitcond_mid_fu_466_p2;
wire   [0:0] tmp_5_fu_486_p2;
wire   [3:0] c_V_1_fu_480_p2;
wire   [10:0] indvar_flatten18_op_fu_508_p2;
wire   [6:0] tmp_7_fu_528_p3;
wire   [7:0] tmp_22_cast_fu_535_p1;
wire   [7:0] tmp_8_fu_539_p2;
wire   [7:0] tmp_6_cast_fu_525_p1;
wire   [7:0] tmp_10_fu_545_p2;
wire   [13:0] tmp_11_fu_551_p3;
wire   [14:0] tmp_26_cast_fu_559_p1;
wire   [14:0] tmp_cast_fu_522_p1;
wire   [14:0] tmp_12_fu_563_p2;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ActDMA_V_0_sel_rd = 1'b0;
#0 ActDMA_V_0_sel_wr = 1'b0;
#0 ActDMA_V_0_state = 2'd0;
#0 SyncSig_V_1_data_reg = 1'b0;
#0 SyncSig_V_1_vld_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == ActDMA_V_0_ack_out) & (1'b1 == ActDMA_V_0_vld_out))) begin
            ActDMA_V_0_sel_rd <= ~ActDMA_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == ActDMA_V_0_ack_in) & (1'b1 == ActDMA_V_0_vld_in))) begin
            ActDMA_V_0_sel_wr <= ~ActDMA_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_vld_in)) | ((2'd3 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_vld_in) & (1'b1 == ActDMA_V_0_ack_out)))) begin
            ActDMA_V_0_state <= 2'd2;
        end else if ((((2'd1 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_ack_out)) | ((2'd3 == ActDMA_V_0_state) & (1'b0 == ActDMA_V_0_ack_out) & (1'b1 == ActDMA_V_0_vld_in)))) begin
            ActDMA_V_0_state <= 2'd1;
        end else if (((~((1'b0 == ActDMA_V_0_vld_in) & (1'b1 == ActDMA_V_0_ack_out)) & ~((1'b0 == ActDMA_V_0_ack_out) & (1'b1 == ActDMA_V_0_vld_in)) & (2'd3 == ActDMA_V_0_state)) | ((2'd1 == ActDMA_V_0_state) & (1'b1 == ActDMA_V_0_ack_out)) | ((2'd2 == ActDMA_V_0_state) & (1'b1 == ActDMA_V_0_vld_in)))) begin
            ActDMA_V_0_state <= 2'd3;
        end else begin
            ActDMA_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == SyncSig_V_1_vld_reg) & (1'b1 == SyncSig_V_1_vld_in))) begin
        SyncSig_V_1_vld_reg <= 1'b1;
    end else if (((1'b0 == SyncSig_V_1_vld_in) & (1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_reg))) begin
        SyncSig_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        exitcond1_reg_140 <= exitcond5_fu_429_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        exitcond1_reg_140 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        exitcond6_reg_217 <= exitcond_fu_594_p2;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        exitcond6_reg_217 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        exitcond_flatten4_reg_129 <= exitcond_flatten_fu_435_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        exitcond_flatten4_reg_129 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        exitcond_flatten5_reg_206 <= exitcond_flatten2_fu_600_p2;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        exitcond_flatten5_reg_206 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten1_reg_195 <= indvar_flatten_next1_fu_423_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten1_reg_195 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten2_reg_250 <= indvar_flatten_next2_reg_676;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten2_reg_250 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten3_reg_272 <= indvar_flatten_next3_fu_588_p2;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten3_reg_272 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_173 <= indvar_flatten_next_reg_629;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_173 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V9_reg_184 <= t_V_reg_611;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        t_V9_reg_184 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_1_reg_162 <= t_V_2_reg_623;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        t_V_1_reg_162 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_3_reg_228 <= t_V_10_fu_583_p2;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_3_reg_228 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_4_reg_239 <= t_V_7_reg_670;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_4_reg_239 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_5_reg_261 <= t_V_6_reg_658;
    end else if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_5_reg_261 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_s_reg_151 <= t_V_9_fu_418_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        t_V_s_reg_151 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ActDMA_V_0_load_A)) begin
        ActDMA_V_0_payload_A <= ActDMA_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ActDMA_V_0_load_B)) begin
        ActDMA_V_0_payload_B <= ActDMA_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == SyncSig_V_1_vld_reg) & (1'b1 == SyncSig_V_1_vld_in)) | ((1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_in) & (1'b1 == SyncSig_V_1_vld_reg)))) begin
        SyncSig_V_1_data_reg <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state6))) begin
        indvar_flatten_next2_reg_676 <= indvar_flatten_next2_fu_514_p3;
        t_V_5_mid2_reg_664 <= t_V_5_mid2_fu_492_p3;
        t_V_6_reg_658 <= t_V_6_fu_472_p3;
        t_V_7_reg_670 <= t_V_7_fu_500_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_next_reg_629 <= indvar_flatten_next_fu_355_p3;
        t_V_2_reg_623 <= t_V_2_fu_341_p3;
        t_V_3_mid2_reg_617 <= t_V_3_mid2_fu_333_p3;
        t_V_reg_611 <= t_V_fu_313_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_283 <= ActDMA_V_0_data_out;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ActBuf_Data_address0 = tmp_27_cast_fu_569_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ActBuf_Data_address0 = tmp_19_cast_fu_404_p1;
    end else begin
        ActBuf_Data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3)))) begin
        ActBuf_Data_ce0 = 1'b1;
    end else begin
        ActBuf_Data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ActBuf_Data_d0 = tmp_13_fu_574_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ActBuf_Data_d0 = tmp_4_fu_409_p3;
    end else begin
        ActBuf_Data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3)))) begin
        ActBuf_Data_we0 = 1'b1;
    end else begin
        ActBuf_Data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state2)))) begin
        ActDMA_V_0_ack_out = 1'b1;
    end else begin
        ActDMA_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ActDMA_V_0_sel)) begin
        ActDMA_V_0_data_out = ActDMA_V_0_payload_B;
    end else begin
        ActDMA_V_0_data_out = ActDMA_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        ActDMA_V_TDATA_blk_n = ActDMA_V_0_state[1'd0];
    end else begin
        ActDMA_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == SyncSig_V_1_vld_reg) | ((1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_reg)))) begin
        SyncSig_V_1_ack_in = 1'b1;
    end else begin
        SyncSig_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state4)))) begin
        SyncSig_V_1_vld_in = 1'b1;
    end else begin
        SyncSig_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        SyncSig_V_blk_n = SyncSig_V_1_ack_in;
    end else begin
        SyncSig_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_flatten1_fu_440_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((exitcond_flatten1_fu_440_p2 == 1'd1) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond_flatten3_fu_605_p2 == 1'd0) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((exitcond_flatten3_fu_605_p2 == 1'd1) & (1'b1 == ActDMA_V_0_vld_out) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ActDMA_V_0_ack_in = ActDMA_V_0_state[1'd1];

assign ActDMA_V_0_load_A = (~ActDMA_V_0_sel_wr & ActDMA_V_0_state_cmp_full);

assign ActDMA_V_0_load_B = (ActDMA_V_0_state_cmp_full & ActDMA_V_0_sel_wr);

assign ActDMA_V_0_sel = ActDMA_V_0_sel_rd;

assign ActDMA_V_0_state_cmp_full = ((ActDMA_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign ActDMA_V_0_vld_in = ActDMA_V_TVALID;

assign ActDMA_V_0_vld_out = ActDMA_V_0_state[1'd0];

assign ActDMA_V_TREADY = ActDMA_V_0_state[1'd1];

assign SyncSig_V = SyncSig_V_1_data_reg;

assign SyncSig_V_1_ack_out = SyncSig_V_ap_ack;

assign SyncSig_V_ap_vld = SyncSig_V_1_vld_reg;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_V_1_fu_480_p2 = (t_V_4_mid_fu_452_p3 + 4'd1);

assign c_V_fu_321_p2 = (t_V_2_mid_fu_293_p3 + 4'd1);

assign exitcond5_fu_429_p2 = ((t_V_9_fu_418_p2 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond5_mid_fu_307_p2 = (not_exitcond_flatten_fu_301_p2 & exitcond1_reg_140);

assign exitcond_flatten1_fu_440_p2 = ((indvar_flatten1_reg_195 == 12'd4095) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_600_p2 = ((indvar_flatten_next2_reg_676 == 11'd512) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_605_p2 = ((indvar_flatten3_reg_272 == 12'd4095) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_435_p2 = ((indvar_flatten_next_reg_629 == 11'd512) ? 1'b1 : 1'b0);

assign exitcond_fu_594_p2 = ((t_V_10_fu_583_p2 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_466_p2 = (not_exitcond_flatten_2_fu_460_p2 & exitcond6_reg_217);

assign indvar_flatten18_op_fu_508_p2 = (indvar_flatten2_reg_250 + 11'd1);

assign indvar_flatten_next1_fu_423_p2 = (indvar_flatten1_reg_195 + 12'd1);

assign indvar_flatten_next2_fu_514_p3 = ((exitcond_flatten5_reg_206[0:0] === 1'b1) ? 11'd1 : indvar_flatten18_op_fu_508_p2);

assign indvar_flatten_next3_fu_588_p2 = (indvar_flatten3_reg_272 + 12'd1);

assign indvar_flatten_next_fu_355_p3 = ((exitcond_flatten4_reg_129[0:0] === 1'b1) ? 11'd1 : indvar_flatten_op_fu_349_p2);

assign indvar_flatten_op_fu_349_p2 = (indvar_flatten_reg_173 + 11'd1);

assign not_exitcond_flatten_2_fu_460_p2 = (exitcond_flatten5_reg_206 ^ 1'd1);

assign not_exitcond_flatten_fu_301_p2 = (exitcond_flatten4_reg_129 ^ 1'd1);

assign r_V_1_fu_446_p2 = (t_V_5_reg_261 + 4'd1);

assign r_V_fu_287_p2 = (t_V9_reg_184 + 4'd1);

assign t_V_10_fu_583_p2 = (t_V_5_mid2_reg_664 + 7'd1);

assign t_V_2_fu_341_p3 = ((exitcond5_mid_fu_307_p2[0:0] === 1'b1) ? c_V_fu_321_p2 : t_V_2_mid_fu_293_p3);

assign t_V_2_mid_fu_293_p3 = ((exitcond_flatten4_reg_129[0:0] === 1'b1) ? 4'd0 : t_V_1_reg_162);

assign t_V_3_mid2_fu_333_p3 = ((tmp_9_fu_327_p2[0:0] === 1'b1) ? 7'd0 : t_V_s_reg_151);

assign t_V_4_mid_fu_452_p3 = ((exitcond_flatten5_reg_206[0:0] === 1'b1) ? 4'd0 : t_V_4_reg_239);

assign t_V_5_mid2_fu_492_p3 = ((tmp_5_fu_486_p2[0:0] === 1'b1) ? 7'd0 : t_V_3_reg_228);

assign t_V_6_fu_472_p3 = ((exitcond_flatten5_reg_206[0:0] === 1'b1) ? r_V_1_fu_446_p2 : t_V_5_reg_261);

assign t_V_7_fu_500_p3 = ((exitcond_mid_fu_466_p2[0:0] === 1'b1) ? c_V_1_fu_480_p2 : t_V_4_mid_fu_452_p3);

assign t_V_9_fu_418_p2 = (t_V_3_mid2_reg_617 + 7'd1);

assign t_V_fu_313_p3 = ((exitcond_flatten4_reg_129[0:0] === 1'b1) ? r_V_fu_287_p2 : t_V9_reg_184);

assign tmp_10_fu_545_p2 = (tmp_8_fu_539_p2 + tmp_6_cast_fu_525_p1);

assign tmp_11_fu_551_p3 = {{tmp_10_fu_545_p2}, {6'd0}};

assign tmp_12_fu_563_p2 = (tmp_26_cast_fu_559_p1 + tmp_cast_fu_522_p1);

assign tmp_13_fu_574_p3 = {{ActDMA_V_0_data_out}, {reg_283}};

assign tmp_15_cast_fu_376_p1 = tmp_1_fu_369_p3;

assign tmp_18_cast_fu_394_p1 = tmp_fu_386_p3;

assign tmp_19_cast_fu_404_p1 = tmp_3_fu_398_p2;

assign tmp_1_fu_369_p3 = {{t_V_reg_611}, {3'd0}};

assign tmp_22_cast_fu_535_p1 = tmp_7_fu_528_p3;

assign tmp_26_cast_fu_559_p1 = tmp_11_fu_551_p3;

assign tmp_27_cast_fu_569_p1 = tmp_12_fu_563_p2;

assign tmp_2_fu_380_p2 = (tmp_15_cast_fu_376_p1 + tmp_8_cast_fu_366_p1);

assign tmp_3_fu_398_p2 = (tmp_18_cast_fu_394_p1 + tmp_7_cast_fu_363_p1);

assign tmp_4_fu_409_p3 = {{ActDMA_V_0_data_out}, {reg_283}};

assign tmp_5_fu_486_p2 = (exitcond_mid_fu_466_p2 | exitcond_flatten5_reg_206);

assign tmp_6_cast_fu_525_p1 = t_V_7_reg_670;

assign tmp_7_cast_fu_363_p1 = t_V_3_mid2_reg_617;

assign tmp_7_fu_528_p3 = {{t_V_6_reg_658}, {3'd0}};

assign tmp_8_cast_fu_366_p1 = t_V_2_reg_623;

assign tmp_8_fu_539_p2 = (tmp_22_cast_fu_535_p1 + 8'd64);

assign tmp_9_fu_327_p2 = (exitcond_flatten4_reg_129 | exitcond5_mid_fu_307_p2);

assign tmp_cast_fu_522_p1 = t_V_5_mid2_reg_664;

assign tmp_fu_386_p3 = {{tmp_2_fu_380_p2}, {6'd0}};

endmodule //Layer7_WriteAct
