// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Layer1_WriteAct,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu15eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.013000,HLS_SYN_LAT=4359,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=201,HLS_SYN_LUT=373,HLS_VERSION=2018_3}" *)

module Layer1_WriteAct (
        ap_clk,
        ap_rst_n,
        ActDMA_V_Data_V_TDATA,
        ActDMA_V_Data_V_TVALID,
        ActDMA_V_Data_V_TREADY,
        SyncSig_V,
        SyncSig_V_ap_vld,
        SyncSig_V_ap_ack,
        ActBuf_Data_V_address0,
        ActBuf_Data_V_ce0,
        ActBuf_Data_V_we0,
        ActBuf_Data_V_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst_n;
input  [63:0] ActDMA_V_Data_V_TDATA;
input   ActDMA_V_Data_V_TVALID;
output   ActDMA_V_Data_V_TREADY;
output   SyncSig_V;
output   SyncSig_V_ap_vld;
input   SyncSig_V_ap_ack;
output  [8:0] ActBuf_Data_V_address0;
output   ActBuf_Data_V_ce0;
output   ActBuf_Data_V_we0;
output  [63:0] ActBuf_Data_V_d0;

reg[8:0] ActBuf_Data_V_address0;
reg ActBuf_Data_V_ce0;
reg ActBuf_Data_V_we0;
reg[63:0] ActBuf_Data_V_d0;

 reg    ap_rst_n_inv;
reg   [63:0] ActDMA_V_Data_V_0_data_out;
wire    ActDMA_V_Data_V_0_vld_in;
wire    ActDMA_V_Data_V_0_vld_out;
wire    ActDMA_V_Data_V_0_ack_in;
reg    ActDMA_V_Data_V_0_ack_out;
reg   [63:0] ActDMA_V_Data_V_0_payload_A;
reg   [63:0] ActDMA_V_Data_V_0_payload_B;
reg    ActDMA_V_Data_V_0_sel_rd;
reg    ActDMA_V_Data_V_0_sel_wr;
wire    ActDMA_V_Data_V_0_sel;
wire    ActDMA_V_Data_V_0_load_A;
wire    ActDMA_V_Data_V_0_load_B;
reg   [1:0] ActDMA_V_Data_V_0_state;
wire    ActDMA_V_Data_V_0_state_cmp_full;
reg    SyncSig_V_1_data_reg;
reg    SyncSig_V_1_vld_reg;
reg    SyncSig_V_1_vld_in;
reg    SyncSig_V_1_ack_in;
wire    SyncSig_V_1_ack_out;
reg    ActDMA_V_Data_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state5;
reg    SyncSig_V_blk_n;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_fu_318_p2;
wire    ap_CS_fsm_state7;
reg   [0:0] icmp_reg_392;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [1:0] t_V_5_fu_302_p2;
reg   [1:0] t_V_5_reg_356;
reg    ap_block_state6_io;
wire   [8:0] grp_fu_215_p2;
reg   [8:0] reg_359;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state4;
reg   [8:0] ActBuf_Data_V_addr_3_reg_364;
wire    ap_CS_fsm_state2;
wire   [6:0] t_V_34_cast_fu_221_p1;
reg   [6:0] t_V_34_cast_reg_379;
wire   [5:0] tmp_12_fu_329_p1;
reg    ap_block_state7_io;
wire   [0:0] exitcond1_fu_333_p2;
reg   [6:0] t_V_reg_152;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_fu_209_p2;
reg   [5:0] t_V_s_reg_163;
wire    ap_CS_fsm_state3;
reg   [1:0] t_V_1_reg_175;
reg   [6:0] t_V_3_reg_187;
wire   [0:0] exitcond_fu_296_p2;
reg   [6:0] t_V_2_reg_198;
wire   [0:0] tmp_6_fu_339_p2;
wire   [63:0] tmp_1_fu_226_p1;
wire   [63:0] tmp_14_cast_fu_260_p1;
wire   [63:0] tmp_15_cast_fu_271_p1;
wire   [63:0] tmp_16_cast_fu_285_p1;
wire   [63:0] tmp_s_fu_351_p1;
reg   [8:0] grp_fu_215_p0;
wire   [8:0] p_shl1_cast_fu_250_p1;
reg   [8:0] grp_fu_215_p1;
wire   [8:0] p_shl_cast_fu_238_p1;
wire   [7:0] tmp_3_fu_230_p3;
wire   [2:0] tmp_4_fu_242_p3;
wire   [8:0] tmp_9_fu_265_p2;
wire   [8:0] tmp_11_cast_fu_276_p1;
wire   [8:0] tmp_11_fu_280_p2;
wire   [6:0] exitcond_fu_296_p0;
wire   [4:0] tmp_8_fu_308_p4;
wire   [6:0] t_V_8_fu_324_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ActDMA_V_Data_V_0_sel_rd = 1'b0;
#0 ActDMA_V_Data_V_0_sel_wr = 1'b0;
#0 ActDMA_V_Data_V_0_state = 2'd0;
#0 SyncSig_V_1_data_reg = 1'b0;
#0 SyncSig_V_1_vld_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_Data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == ActDMA_V_Data_V_0_ack_out) & (1'b1 == ActDMA_V_Data_V_0_vld_out))) begin
            ActDMA_V_Data_V_0_sel_rd <= ~ActDMA_V_Data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_Data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == ActDMA_V_Data_V_0_ack_in) & (1'b1 == ActDMA_V_Data_V_0_vld_in))) begin
            ActDMA_V_Data_V_0_sel_wr <= ~ActDMA_V_Data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ActDMA_V_Data_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == ActDMA_V_Data_V_0_state) & (1'b0 == ActDMA_V_Data_V_0_vld_in)) | ((2'd3 == ActDMA_V_Data_V_0_state) & (1'b0 == ActDMA_V_Data_V_0_vld_in) & (1'b1 == ActDMA_V_Data_V_0_ack_out)))) begin
            ActDMA_V_Data_V_0_state <= 2'd2;
        end else if ((((2'd1 == ActDMA_V_Data_V_0_state) & (1'b0 == ActDMA_V_Data_V_0_ack_out)) | ((2'd3 == ActDMA_V_Data_V_0_state) & (1'b0 == ActDMA_V_Data_V_0_ack_out) & (1'b1 == ActDMA_V_Data_V_0_vld_in)))) begin
            ActDMA_V_Data_V_0_state <= 2'd1;
        end else if (((~((1'b0 == ActDMA_V_Data_V_0_vld_in) & (1'b1 == ActDMA_V_Data_V_0_ack_out)) & ~((1'b0 == ActDMA_V_Data_V_0_ack_out) & (1'b1 == ActDMA_V_Data_V_0_vld_in)) & (2'd3 == ActDMA_V_Data_V_0_state)) | ((2'd1 == ActDMA_V_Data_V_0_state) & (1'b1 == ActDMA_V_Data_V_0_ack_out)) | ((2'd2 == ActDMA_V_Data_V_0_state) & (1'b1 == ActDMA_V_Data_V_0_vld_in)))) begin
            ActDMA_V_Data_V_0_state <= 2'd3;
        end else begin
            ActDMA_V_Data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == SyncSig_V_1_vld_reg) & (1'b1 == SyncSig_V_1_vld_in))) begin
        SyncSig_V_1_vld_reg <= 1'b1;
    end else if (((1'b0 == SyncSig_V_1_vld_in) & (1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_reg))) begin
        SyncSig_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_1_reg_175 <= t_V_5_reg_356;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_1_reg_175 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_333_p2 == 1'd1) & (1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_2_reg_198 <= 7'd0;
    end else if (((tmp_6_fu_339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        t_V_2_reg_198 <= grp_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_296_p2 == 1'd0) & (1'b1 == ActDMA_V_Data_V_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
        t_V_3_reg_187 <= grp_fu_215_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_3_reg_187 <= 7'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_reg_152 <= grp_fu_215_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        t_V_reg_152 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_s_reg_163 <= tmp_12_fu_329_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_s_reg_163 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ActBuf_Data_V_addr_3_reg_364 <= tmp_15_cast_fu_271_p1;
        t_V_34_cast_reg_379[5 : 0] <= t_V_34_cast_fu_221_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ActDMA_V_Data_V_0_load_A)) begin
        ActDMA_V_Data_V_0_payload_A <= ActDMA_V_Data_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ActDMA_V_Data_V_0_load_B)) begin
        ActDMA_V_Data_V_0_payload_B <= ActDMA_V_Data_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == SyncSig_V_1_vld_reg) & (1'b1 == SyncSig_V_1_vld_in)) | ((1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_in) & (1'b1 == SyncSig_V_1_vld_reg)))) begin
        SyncSig_V_1_data_reg <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io))) begin
        icmp_reg_392 <= icmp_fu_318_p2;
        t_V_5_reg_356 <= t_V_5_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_359 <= grp_fu_215_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ActBuf_Data_V_address0 = tmp_s_fu_351_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ActBuf_Data_V_address0 = ActBuf_Data_V_addr_3_reg_364;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ActBuf_Data_V_address0 = tmp_16_cast_fu_285_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ActBuf_Data_V_address0 = tmp_14_cast_fu_260_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ActBuf_Data_V_address0 = tmp_1_fu_226_p1;
    end else begin
        ActBuf_Data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io)) | ((1'b1 == ActDMA_V_Data_V_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        ActBuf_Data_V_ce0 = 1'b1;
    end else begin
        ActBuf_Data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ActBuf_Data_V_d0 = ActDMA_V_Data_V_0_data_out;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        ActBuf_Data_V_d0 = 64'd0;
    end else begin
        ActBuf_Data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((tmp_fu_209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_6_fu_339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io)) | ((1'b1 == ActDMA_V_Data_V_0_vld_out) & (1'b1 == ap_CS_fsm_state5)))) begin
        ActBuf_Data_V_we0 = 1'b1;
    end else begin
        ActBuf_Data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ActDMA_V_Data_V_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
        ActDMA_V_Data_V_0_ack_out = 1'b1;
    end else begin
        ActDMA_V_Data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ActDMA_V_Data_V_0_sel)) begin
        ActDMA_V_Data_V_0_data_out = ActDMA_V_Data_V_0_payload_B;
    end else begin
        ActDMA_V_Data_V_0_data_out = ActDMA_V_Data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ActDMA_V_Data_V_TDATA_blk_n = ActDMA_V_Data_V_0_state[1'd0];
    end else begin
        ActDMA_V_Data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == SyncSig_V_1_vld_reg) | ((1'b1 == SyncSig_V_1_ack_out) & (1'b1 == SyncSig_V_1_vld_reg)))) begin
        SyncSig_V_1_ack_in = 1'b1;
    end else begin
        SyncSig_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io)))) begin
        SyncSig_V_1_vld_in = 1'b1;
    end else begin
        SyncSig_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | ((icmp_reg_392 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        SyncSig_V_blk_n = SyncSig_V_1_ack_in;
    end else begin
        SyncSig_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_215_p0 = t_V_2_reg_198;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_215_p0 = t_V_3_reg_187;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_215_p0 = p_shl1_cast_fu_250_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_215_p0 = t_V_reg_152;
    end else begin
        grp_fu_215_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_215_p1 = p_shl_cast_fu_238_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_215_p1 = 7'd1;
    end else begin
        grp_fu_215_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond_fu_296_p2 == 1'd0) & (1'b1 == ActDMA_V_Data_V_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((exitcond_fu_296_p2 == 1'd1) & (1'b1 == ActDMA_V_Data_V_0_vld_out) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond1_fu_333_p2 == 1'd1) & (1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((exitcond1_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_6_fu_339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == SyncSig_V_1_ack_in) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ActDMA_V_Data_V_0_ack_in = ActDMA_V_Data_V_0_state[1'd1];

assign ActDMA_V_Data_V_0_load_A = (~ActDMA_V_Data_V_0_sel_wr & ActDMA_V_Data_V_0_state_cmp_full);

assign ActDMA_V_Data_V_0_load_B = (ActDMA_V_Data_V_0_state_cmp_full & ActDMA_V_Data_V_0_sel_wr);

assign ActDMA_V_Data_V_0_sel = ActDMA_V_Data_V_0_sel_rd;

assign ActDMA_V_Data_V_0_state_cmp_full = ((ActDMA_V_Data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign ActDMA_V_Data_V_0_vld_in = ActDMA_V_Data_V_TVALID;

assign ActDMA_V_Data_V_0_vld_out = ActDMA_V_Data_V_0_state[1'd0];

assign ActDMA_V_Data_V_TREADY = ActDMA_V_Data_V_0_state[1'd1];

assign SyncSig_V = SyncSig_V_1_data_reg;

assign SyncSig_V_1_ack_out = SyncSig_V_ap_ack;

assign SyncSig_V_ap_vld = SyncSig_V_1_vld_reg;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state6_io = ((icmp_fu_318_p2 == 1'd0) & (1'b0 == SyncSig_V_1_ack_in));
end

always @ (*) begin
    ap_block_state7_io = ((icmp_reg_392 == 1'd0) & (1'b0 == SyncSig_V_1_ack_in));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond1_fu_333_p2 = ((t_V_8_fu_324_p2 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_296_p0 = grp_fu_215_p2;

assign exitcond_fu_296_p2 = ((exitcond_fu_296_p0 == 7'd65) ? 1'b1 : 1'b0);

assign grp_fu_215_p2 = (grp_fu_215_p0 + grp_fu_215_p1);

assign icmp_fu_318_p2 = ((tmp_8_fu_308_p4 == 5'd0) ? 1'b1 : 1'b0);

assign p_shl1_cast_fu_250_p1 = tmp_4_fu_242_p3;

assign p_shl_cast_fu_238_p1 = tmp_3_fu_230_p3;

assign t_V_34_cast_fu_221_p1 = t_V_s_reg_163;

assign t_V_5_fu_302_p2 = (t_V_1_reg_175 + 2'd1);

assign t_V_8_fu_324_p2 = (7'd1 + t_V_34_cast_reg_379);

assign tmp_11_cast_fu_276_p1 = t_V_3_reg_187;

assign tmp_11_fu_280_p2 = (reg_359 + tmp_11_cast_fu_276_p1);

assign tmp_12_fu_329_p1 = t_V_8_fu_324_p2[5:0];

assign tmp_14_cast_fu_260_p1 = grp_fu_215_p2;

assign tmp_15_cast_fu_271_p1 = tmp_9_fu_265_p2;

assign tmp_16_cast_fu_285_p1 = tmp_11_fu_280_p2;

assign tmp_1_fu_226_p1 = t_V_reg_152;

assign tmp_3_fu_230_p3 = {{t_V_1_reg_175}, {6'd0}};

assign tmp_4_fu_242_p3 = {{t_V_1_reg_175}, {1'd0}};

assign tmp_6_fu_339_p2 = ((t_V_2_reg_198 == 7'd66) ? 1'b1 : 1'b0);

assign tmp_8_fu_308_p4 = {{t_V_s_reg_163[5:1]}};

assign tmp_9_fu_265_p2 = (grp_fu_215_p2 + 9'd65);

assign tmp_fu_209_p2 = ((t_V_reg_152 == 7'd66) ? 1'b1 : 1'b0);

assign tmp_s_fu_351_p1 = t_V_2_reg_198;

always @ (posedge ap_clk) begin
    t_V_34_cast_reg_379[6] <= 1'b0;
end

endmodule //Layer1_WriteAct
